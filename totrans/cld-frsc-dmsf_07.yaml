- en: '5'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DFIR Investigations – Logs in Azure
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the previous chapter, we discussed responding to incidents in **Amazon Web
    Services** (**AWS**). This chapter will focus on responding to incidents in Microsoft
    Azure, the second most popular cloud computing product. One critical aspect of
    incident response in Azure is analyzing log data from different Azure services.
    In this chapter, we will explore the various log sources available in Azure, how
    to acquire them, and best practices for analyzing this data to detect, contain,
    and resolve security incidents in Azure. By understanding the tools and techniques
    available for incident response in Azure, incident response professionals can
    better protect and respond to an organization’s cloud infrastructure in the context
    of a security incident.
  prefs: []
  type: TYPE_NORMAL
- en: 'Following a similar pattern to AWS, understanding which logs within Azure are
    available by default versus what defenders and investigators may have to enable
    is critical to cloud forensics. This chapter outlines the various logs available
    for some of the important Azure services and products discussed in [*Chapter 3*](part0021_split_000.html#_idTextAnchor042),
    and also looks at utilizing these sources in the context of an investigation.
    Specifically, we will discuss the following Azure data sources:'
  prefs: []
  type: TYPE_NORMAL
- en: Azure Log Analytics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Virtual Network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Storage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Virtual Machines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Microsoft Sentinel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Log Analytics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure Log Analytics is a cloud-based service offered by Azure that allows organizations
    to collect, analyze, and gain insights from their log and operational data. It
    provides a centralized platform for monitoring, troubleshooting, and detecting
    anomalies across various cloud and on-premises environments. With Azure Log Analytics,
    organizations can gain visibility into their systems and applications, enabling
    them to make informed decisions and take proactive action to maintain optimal
    performance and security.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Log Analytics can be considered the equivalent of AWS CloudTrail (discussed
    in [*Chapter 4*](part0022_split_000.html#_idTextAnchor065)) when it comes to collecting
    and analyzing logs from various Azure services. By collecting logs from these
    services, organizations can gain insights into their performance, availability,
    and security. It provides a unified platform for monitoring and troubleshooting
    Azure resources.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Log Analytics is of paramount importance as it serves as the backbone
    for logging within the Azure ecosystem, providing comprehensive insights into
    Virtual Network environments, storage services, and EC2 instances. For that reason,
    we’ll briefly introduce the Azure Log Analytics role for the main Azure products
    and services here, then demonstrate how to integrate Log Analytics in the Azure
    product section of this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'To effectively manage and optimize cloud operations, organizations rely on
    Azure Log Analytics for comprehensive insights across various Azure services:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Azure Virtual Networks**: Azure Log Analytics integrates with Azure Network
    Watcher, which provides insights into Virtual Network traffic, network security
    groups, and flow logs. By analyzing these logs, organizations can monitor network
    activity, detect suspicious behavior, and ensure compliance with security policies.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Storage**: Azure Log Analytics can collect logs from Azure Storage
    services, such as Blob storage and Table storage. This enables organizations to
    monitor and analyze storage-related activities, such as read and write operations,
    access patterns, and storage capacity utilization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure instances**: Azure Log Analytics agents can be installed on Azure VMs
    to collect log data from these instances. This includes logs related to operating
    system events, application logs, and custom log files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The idea with Log Analytics is to have telemetry from all your Azure resources
    available to query and/or visualize. Incident responders can then query these
    logs for any indicators of compromise. The following screenshot shows an example
    of log queries in Azure Monitor. We will discuss Azure Monitor later in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.1 – Example of log queries](img/00158.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.1 – Example of log queries
  prefs: []
  type: TYPE_NORMAL
- en: The query language in Azure is based on **Kusto Query Language** (**KQL**).
    KQL provides a syntax and set of operators that enable incident responders to
    retrieve, analyze, and visualize large volumes of data stored in Azure. Understanding
    KQL is critical for incident responders.
  prefs: []
  type: TYPE_NORMAL
- en: While Azure Log Analytics, with its KQL, offers robust capabilities to parse
    vast datasets and retrieve essential insights, it becomes even more pivotal when
    considering the network infrastructure it monitors. Azure Virtual Networks, a
    cornerstone of Microsoft’s cloud environment, presents its own set of complexities.
    Understanding these networks and their interactions is paramount, and Log Analytics
    provides the tools to keep a keen eye on them.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Virtual Networks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A virtual network is very similar to the traditional network that you would
    operate and stand up in your own organization’s data center. Similar to how networking
    allows your organization’s assets and resources to communicate with each other,
    Azure’s Virtual Network service allows you to build a network for your Azure resources
    and services to communicate with each other, the public internet, or any of an
    organization’s on-premise networks and resources.
  prefs: []
  type: TYPE_NORMAL
- en: Similar to AWS’s VPC, when you create a virtual machine resource in Azure, you
    can create an Azure Virtual Network or use an existing one (if it has been created
    already). Your virtual network is just like any other entity managed by Azure
    (known as an Azure Resource), such as a virtual machine, data store, database,
    or any other service we had previously discussed in [*Chapter 3*](part0021_split_000.html#_idTextAnchor042).
  prefs: []
  type: TYPE_NORMAL
- en: 'For demonstration purposes and the purpose of this section, we have a created
    virtual network in Azure called `CloudForensicsTestVM-vnet`. All virtual networks
    can be accessed directly from the **Virtual networks** service on Azure’s **Home**
    page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.2 – Example of a virtual network](img/00176.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.2 – Example of a virtual network
  prefs: []
  type: TYPE_NORMAL
- en: Depending on the size of an organization, there will likely be unused virtual
    networks that have been created for testing and development – incident responders
    should consider starting with investigating virtual networks containing production
    servers/services or critical jewels or investigating a virtual network based on
    whether any VMs contained have been reported compromised.
  prefs: []
  type: TYPE_NORMAL
- en: 'Investigators can expand into a virtual network and determine its network properties
    and configurations, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.3 – Example of virtual network properties](img/00193.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.3 – Example of virtual network properties
  prefs: []
  type: TYPE_NORMAL
- en: 'All virtual networks within Azure contain five key tabs:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Topology**: This is your virtual network topology. Think of this as a network
    diagram that’s auto-generated by Azure. This is especially useful for investigators
    to gain an understanding of an organization’s cloud infrastructure without dependence
    on whether the IT team has maintained networking diagrams and documentation. The
    following screenshot shows an example network topology containing a network interface
    and a single VM instance – the outline surrounding the interface and VM represents
    the virtual network and default subnet:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 4.4 – Example of a virtual network topology](img/00012.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.4 – Example of a virtual network topology
  prefs: []
  type: TYPE_NORMAL
- en: '**Properties**: This tab will include all networking configuration properties
    for your virtual network. This includes your IP address space, subnets, and Virtual
    Network ID. Investigators should take note of the address space and subnet IPs
    as understanding the network’s IP address range and subnet allows responders to
    identify and trace the origin of suspicious activities or malicious traffic. Further,
    knowing your address space allows you to correlate with other log sources that
    may capture resource IPs (for example, EDR logs):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 4.5 – Example of network properties](img/00031.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.5 – Example of network properties
  prefs: []
  type: TYPE_NORMAL
- en: '**Capabilities**: This tab contains Azure products and services that may be
    utilized to further enhance the virtual network. For example, organizations may
    enable Azure’s DDoS protection or Azure Firewall as opposed to configuring their
    own load balancer or firewall. These capabilities not only provide additional
    security protection for Azure resources and assets but also act as additional
    log sources in an incident. For example, enabling Microsoft Defender for Cloud
    will provide threat protection for your VMs, containers, databases, storage app
    services, and more. Cloud Defender will generate additional security alerts/logs
    for any malicious activity detected in your Azure resource. We will dive deeper
    into Microsoft Defender for Cloud later in this chapter:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 4.6 – Example of virtual network capabilities](img/00049.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.6 – Example of virtual network capabilities
  prefs: []
  type: TYPE_NORMAL
- en: '**Recommendations**: The **Recommendations** tab provides a list of Azure recommendations
    based on cost, security, reliability, performance, and operational excellence.
    Threat management teams can utilize the **Recommendations** tab to enable any
    security posture and reliability quick wins based on personalized best practices
    defined by Microsoft’s automated advisor engine. Further, incident responders
    could utilize this tab for any recommendations to determine any gaps that may
    exist at the time of the incident and provide this in their recommendations report
    for threat management teams to action:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 4.7 – Example of Microsoft’s virtual network recommendations](img/00066.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.7 – Example of Microsoft’s virtual network recommendations
  prefs: []
  type: TYPE_NORMAL
- en: '**Tutorials**: This tab provides a list of free training from Microsoft. Microsoft,
    Amazon, and Google all continuously update features and products within their
    cloud offering. As a result, incident responders can utilize this tab to gain
    a quick understanding of any newly added features.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: One essential tool that complements these properties and ensures the robustness
    of the network’s security posture is Azure’s **Network Security Group** (**NSG**)
    flow logs. These logs provide granular visibility into network traffic, bridging
    the gap between network configuration and actual network activity.
  prefs: []
  type: TYPE_NORMAL
- en: NSG flow logs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In Azure, an NSG and a virtual network are two different concepts that play
    distinct roles in network security and network infrastructure management. An NSG
    is a fundamental component of Azure’s network security architecture. It acts as
    a virtual firewall for controlling inbound and outbound traffic to VMs, subnets,
    or network interfaces within an Azure virtual network. NSGs allow you to define
    inbound and outbound security rules to filter network traffic based on protocols,
    ports, source IP addresses, and destination IP addresses. They provide a fine-grained
    level of network security control by allowing or denying traffic based on rule
    configurations.
  prefs: []
  type: TYPE_NORMAL
- en: An Azure virtual network is a foundational construct in Azure networking that
    represents an isolated network environment in the Azure cloud. As we have seen
    previously in this chapter, Azure Virtual Network allows organizations to define
    IP address ranges, subnets, and network topology to build their network infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: 'Defining **access control lists** (**ACLs**) for an NSG in Azure involves configuring
    rules that control inbound and outbound network traffic for associated resources
    within a virtual network. ACLs act as virtual firewalls and provide granular control
    over network communication. Through NSG rules, you can specify allowed or denied
    traffic based on source/destination IP addresses, ports, and protocols. These
    rules help enforce security policies and restrict unauthorized access to VMs or
    subnets, allowing administrators to define and manage network traffic flow effectively.
    An example of an NSG is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.8 – Example of an NSG](img/00084.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.8 – Example of an NSG
  prefs: []
  type: TYPE_NORMAL
- en: 'Defining ACLs in Azure and AWS have similarities in terms of their purpose
    and functionality. Both platforms allow users to create rules that control inbound
    and outbound network traffic based on source/destination IP addresses, ports,
    and protocols. An example of ACL rules for Azure NSGs is shown in the following
    screenshot. In this instance, the network only allows incoming (inbound) connections
    to port `22` (SSH) from a public source IP that has been redacted for security
    reasons:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.9 – ACLs](img/00103.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.9 – ACLs
  prefs: []
  type: TYPE_NORMAL
- en: Incident responders can analyze ACLs to identify any unauthorized inbound connection
    rules (for example, RDP port open, allowing incoming connections from any IP address)
    or create new ACL rules to block any network-based indicators of compromise (for
    example, command and control IPs).
  prefs: []
  type: TYPE_NORMAL
- en: As discussed in [*Chapter 4*](part0022_split_000.html#_idTextAnchor065), a (network)
    flow log is a record of network traffic flow information, capturing details such
    as source and destination IP addresses, ports, protocols, and other relevant metadata
    related to network traffic. In the context of Azure, NSG flow logs specifically
    refer to the flow logs generated by NSGs in Azure. NSG flow logs provide visibility
    into the network traffic flowing through NSGs within a virtual network.
  prefs: []
  type: TYPE_NORMAL
- en: By enabling NSG flow logs, organizations gain insights into network communication
    patterns, allowing them to monitor and analyze traffic behavior, detect anomalies,
    troubleshoot connectivity issues, and enhance network security analysis. These
    logs can be leveraged for forensic analysis, providing a valuable resource for
    understanding the full extent of a security breach and securing Azure network
    environments.
  prefs: []
  type: TYPE_NORMAL
- en: 'Similar to AWS’s VPC flow logs, NSG flow logs are not enabled by default in
    Azure. As a result, they require explicit setup. To enable NSG flow logging, you
    must create an NSG flow log resource in Azure. Next, Azure gives you the option
    to download NSG logs locally, forward them to another tool (for example, a **security
    information and event management** (**SIEM**) system), or use Microsoft’s Azure
    Network Watcher Traffic Analytics solution. Traffic Analytics analyzes your Azure
    NSG flow logs within Azure, allowing organizations to visualize and query network
    activity and identify threats and areas of concern (open ports, unusual network
    traffic, and so on). The following three sequential steps are required to enable
    and view NSG flow logs:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Create an Azure storage account**: To enable and create NSG flow logging,
    you must create and allocate storage to hold these logs in Azure. This can be
    done while you’re creating the flow log in Azure. Refer to the following screenshot
    to gain a visual understanding of an example storage account being set up in Azure,
    particularly during the NSG flow log creation process:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.10 – Creating a storage account](img/00125.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.10 – Creating a storage account
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot demonstrates the creation of a flow log in Azure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.11 – Creating a flow log](img/00146.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.11 – Creating a flow log
  prefs: []
  type: TYPE_NORMAL
- en: '**Create an NSG flow log**: This includes populating resources as well as other
    properties related to flow logging. You can export, process, analyze, and visualize
    NSG flow logs by using tools such as Microsoft’s Traffic Analytics, Splunk, Grafana,
    or any other SIEM tool. In this example, we will enable Microsoft’s Traffic Analytics
    as it is already integrated into Microsoft and allows quick and easy ingestion
    of the logs. The following screenshot demonstrates how to enable Traffic Analytics
    and send your network traffic to an Azure Log Analytics workspace:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 4.12 – Creating a flow log and enabling Traffic Analytics](img/00163.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.12 – Creating a flow log and enabling Traffic Analytics
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Traffic Analytics workspace you created in *step 2* to view
    and query the NSG flow log that was created in *steps 1* and *2*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Microsoft provides the following pre-built query to query NSG flow logs:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Here is a breakdown of the KQL query:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Table selection: `AzureNetworkAnalytics_CL` specifies the data table from which
    the query fetches the data – in this case, the Azure Network Analytics logs'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Filtering: `| where SubType_s == "FlowLog"` filters the data so that it only
    includes where the `SubType` column has a value of `FlowLog`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Data transformation with `extend`: The `extend` command is used multiple times
    to add new columns to the data:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`FlowDirection = iff(FlowDirection_s == ''O'', ''Outbound'', ''Inbound'')`:
    This adds a new column, `FlowDirection`, that classifies the flow direction as
    `''Outbound''` or `''Inbound''` based on the value in `FlowDirection_s`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`AllowedOrDenied = iff(FlowStatus_s == ''A'', ''Allowed'', ''Denied'')`: This
    determines whether the flow was allowed or denied'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SourceIP` and `DestinationIP`: These lines handle IP address extraction and
    formatting'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Protocol = case(...)`: This sets the protocol as TCP or UDP or retains the
    original value based on the condition'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Renaming a column: `| project-rename NSGFL_Version = FASchemaVersion_s` renames
    the `FASchemaVersion_s` column to `NSGFL_Version`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Selecting specific columns: The `project` command is used to select specific
    columns to be included in the final output'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Limiting results: `| limit 100` limits the output to the first 100 records'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In general, a KQL query will have the following general structure:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Table selection**: Queries start by specifying a data table (for example,
    network events)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`|`): This is used to chain different commands, where the output of one command
    is passed as input to the next'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Filtering (where)**: This is used to include only those records that meet
    certain criteria'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data transformation (extend)**: This adds new columns or modifies existing
    ones'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sum`, `count`, `avg`, and `group by` are used for data aggregation'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Projection (project)**: This specifies which columns to include in the final
    output'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sort by` and `limit` control the order and the number of records in the output'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The query results are shown in the following screenshot. As you can see, all
    allowed and denied inbound/outbound traffic is captured and displayed in tabular
    format. In this case, the entry containing an allowed inbound connection is our
    SSH connection into the VM resource (**SourceIP** has been redacted for privacy
    reasons) and signifies a potential point of entry and unauthorized access into
    the VM:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.13 – Flow log query results](img/00182.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.13 – Flow log query results
  prefs: []
  type: TYPE_NORMAL
- en: Digital forensic and incident response use cases do not significantly change
    when transitioning from AWS flow logs to Azure flow logs due to their underlying
    purpose of capturing network traffic data. While there might be differences in
    the log format, user interface, and naming convention, both solutions offer valuable
    insights into network activity, facilitating investigations, threat detection,
    and incident response, regardless of the cloud provider.
  prefs: []
  type: TYPE_NORMAL
- en: Within the realm of Azure Virtual Network, we’ve delved into creating a flow
    log and its subsequent querying, shedding light on the dynamic interplay of network
    data. Our next focus will be Azure Storage – a vital piece of the Azure ecosystem
    that not only stores such logs but offers extensive capabilities for managing
    and accessing vast volumes of data seamlessly.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Storage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Azure Storage is a cloud-based storage service provided by Azure. Azure Storage
    provides different storage options, one of which is Azure Blob storage.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Blobs, or Azure Binary Large Objects, are specific storage types within
    Azure Storage that are designed for storing unstructured data such as documents,
    images, videos, and other file types. It offers a simple and cost-effective way
    to store large amounts of data and provides features such as high availability,
    durability, and scalability. Azure Blobs are commonly used for backup and restore,
    content distribution, media streaming, and as a data source for applications running
    in the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: 'Within an Azure storage account, incident responders may want to start by reviewing
    the level of access for a given storage account (and by extension, the data it
    holds). This can be accomplished by navigating to the storage account’s **Access
    Control (IAM)** page and checking all users with access to the data:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.14 – The Access Control (IAM) pane](img/00126.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.14 – The Access Control (IAM) pane
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, investigators can utilize the **Activity log** page in the storage account
    – this can be found in the left pane. **Activity log** will show Azure tenant-wide
    activity at a subscription/Azure tenant level (for example, we can determine when
    a storage account was created in Azure and by whom). Turning to the following
    screenshot, we are presented with illustrative examples of an activity log:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.15 – Activity log](img/00194.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.15 – Activity log
  prefs: []
  type: TYPE_NORMAL
- en: 'While the preceding screenshot provides an initial overview of the storage
    activity log, capturing its inherent structure and key data points, the following
    screenshot delves deeper, showcasing the results of a specific query, offering
    you insights into the type of information that can be extracted and analyzed from
    such logs:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.16 – Activity log (continued...)](img/00151.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.16 – Activity log (continued...)
  prefs: []
  type: TYPE_NORMAL
- en: Investigators can export the log in the log format of their choice (for example,
    JSON, CSV, and so on) and analyze for any unusual activity – for example, which
    accounts modified your Azure resources (including storage resources) and what
    actions took place. The activity log contains all activity and therefore captures
    any new features or capabilities that have been turned on and/or updated.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Monitor
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Azure Monitor is a comprehensive monitoring solution offered by Azure that allows
    organizations to collect, analyze, and act on telemetry data from various Azure
    resources, including Azure Storage and Azure Blobs. It provides insights into
    the performance, availability, and health of these resources, helping organizations
    gain visibility and make informed decisions.
  prefs: []
  type: TYPE_NORMAL
- en: 'Incident responders can utilize the data produced from Azure Monitor for forensic
    investigation. For example, in the context of Azure Storage, incident responders
    can use Azure Monitor to chart egress (outgoing) data from an Azure storage account
    or blob. Incident responders can then use the egress data visualization to narrow
    down any spikes of egress data – that is, at which point in time there was an
    unusual amount of data leaving the organization’s cloud storage. This is particularly
    useful for security incidents involving data exfiltration as it allows incident
    responders to not only narrow down on dates/times of interest but also gain an
    understanding of the quantity of data that may have been stolen by bad actors.
    The following screenshot demonstrates an example of Azure Monitor being used to
    visualize and chart egress data over 30 days:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.17 – Azure Monitor visualization of egress data](img/00133.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.17 – Azure Monitor visualization of egress data
  prefs: []
  type: TYPE_NORMAL
- en: 'Similar to the virtual network logs we discussed previously, an organization’s
    resource logs (including a storage account and Storage Blob), must also be connected
    to an Azure Log Analytics workspace to enable the features of the Azure Monitor
    log, as well as run queries against this data. We had previously connected VPC
    logs to a Traffic Analytics workspace, which meant sending the VPC network data
    to a Log Analytics workspace in the backend to read and write traffic logs to.
    The following is a screenshot from Microsoft’s Azure portal on how to get set
    up with enabling Log Analytics for all your Storage-related resources:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.18 – Getting started with Log Analytics](img/00099.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.18 – Getting started with Log Analytics
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows how to connect an Azure storage account (and
    its resources) to a Log Analytics workspace. From the left pane, navigate to **Diagnostic
    settings** to enable logs being sent to Log Analytics:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.19 – Connecting Log Analytics to storage resources](img/00134.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.19 – Connecting Log Analytics to storage resources
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, you should see all associated resources under your storage accounts.
    To enable Log Analytics, click on the storage account or any other resource:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.20 – Connecting Log Analytics to storage resources (continued…)](img/00152.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.20 – Connecting Log Analytics to storage resources (continued…)
  prefs: []
  type: TYPE_NORMAL
- en: 'Transitioning to the following screenshot, we’re zooming into the nuanced procedure
    of connecting log analytics, this time specifically focusing on the diagnostic
    settings of a particular storage account:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.21 – Connecting Log Analytics to storage resources (continued…)](img/00189.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.21 – Connecting Log Analytics to storage resources (continued…)
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, the following screenshot provides a detailed look into these diagnostic
    settings, highlighting the intricacies and parameters that users can leverage
    and configure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.22 – Connecting Log Analytics to storage resources (continued…)](img/00045.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.22 – Connecting Log Analytics to storage resources (continued…)
  prefs: []
  type: TYPE_NORMAL
- en: 'A similar process can be applied to the Azure Blob level, sending all read/write/delete
    and transaction logs to the Log Analytics workspace:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.23 – Connecting Log Analytics to storage resources (continued…)](img/00061.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.23 – Connecting Log Analytics to storage resources (continued…)
  prefs: []
  type: TYPE_NORMAL
- en: 'The final **Diagnostics settings** pane should look as follows, with **Diagnostics
    status** set to **Enabled**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.24 – Connecting Log Analytics to storage resources (continued…)](img/00079.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.24 – Connecting Log Analytics to storage resources (continued…)
  prefs: []
  type: TYPE_NORMAL
- en: 'Incident responders can now query Azure Storage logs using the **Logs** functionality
    under **Monitoring**, which opens the query panel in Azure. See the following
    sample query to get all operations on Blobs within an Azure storage account:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding query can be utilized to display additional columns/fields from
    the storage accounts’ tables (that is, `AzureMetrics` and `StorageBlobLogs`) as
    well as narrow down on events of interest (that is, anonymous logins, operations
    of interest, and so on). The following screenshot demonstrates the query results
    of all a storage account’s blob activity:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.25 – Query results of blob storage activity](img/00120.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.25 – Query results of blob storage activity
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we understand the nuances of Azure Storage and the intricacies of
    querying Blob Storage Activity, it’s clear that Azure’s capacity for data management
    and analytics is vast. Moving forward, we’ll delve into another integral component
    of Azure’s infrastructure: Azure Virtual Machines. This not only complements the
    storage solutions but also empowers them by providing dynamic compute resources
    for diverse workloads.'
  prefs: []
  type: TYPE_NORMAL
- en: Azure Virtual Machines log analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We discussed Azure Virtual Machines in [*Chapter 3*](part0021_split_000.html#_idTextAnchor042).
    In Azure, VMs are widely used to deploy and run various applications and services.
    To ensure the security and stability of these VMs, incident responders and administrators
    must analyze the logs generated by the VMs. These logs provide valuable insights
    into the system’s activities, performance, security incidents, and potential vulnerabilities.
    In this section, we will explore the different log sources within Azure that incident
    responders can analyze for effective VM log analysis.
  prefs: []
  type: TYPE_NORMAL
- en: '**Azure Log Analytics**: Azure Log Analytics is a powerful tool that centralizes
    log data from various sources, including Azure VMs. It provides a comprehensive
    log management solution and offers advanced querying and visualization capabilities.
    By integrating Azure VMs with Log Analytics, incident responders can collect and
    analyze logs from multiple VMs in a unified manner. The logs that are collected
    can include performance data, system events, security events, and custom application
    logs. Incident responders can utilize Log Analytics by leveraging its powerful
    querying capabilities using KQL. By constructing KQL queries targeted toward your
    VMs, incident responders can search through logs and telemetry data collected
    by Azure Monitor to identify potential **indicators of compromise** (**IoCs**)
    such as suspicious IP addresses, unusual network traffic patterns, or specific
    event logs associated with known threats. These queries can be tailored to filter
    and correlate relevant data sources, enabling proactive threat hunting and rapid
    identification of compromised systems or malicious activities within an Azure
    environment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Windows Event Logs**: Azure VMs running on Windows operating systems generate
    Windows Event Logs, which capture important system events and errors. Incident
    responders can analyze these logs to identify system crashes, application failures,
    login attempts, and other critical events. Windows Event Logs are categorized
    into different event log channels, such as System, Security, Application, and
    more, making it easier to filter and analyze specific types of events.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Activity Logs**: Azure Activity Logs provides an audit trail of operations
    performed on Azure resources, including VMs. These logs capture information about
    resource creation, updates, and deletions, as well as administrative actions taken
    by users and Azure services. Incident responders can leverage Azure Activity Logs
    to track changes made to VM configurations, identify potential misconfigurations,
    and investigate suspicious activities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Monitor**: Azure Monitor can also be utilized to capture VM performance
    metrics, diagnostic logs, and even custom application logs. Incident responders
    can utilize Azure Monitor to visualize anomalies in the VM, such as unusual CPU
    usage or disk bandwidth, which may suggest unauthorized access. Azure Monitor
    also integrates with **Azure Kubernetes Service** (**AKS**) to provide monitoring
    and logging capabilities for any AKS containers. You can enable monitoring when
    you create an AKS cluster or add it to an existing cluster. Additionally, Azure
    Monitor extends its capabilities to serverless computing resources in Azure, such
    as Azure Functions and Azure Logic Apps. By leveraging Application Insights, a
    feature of Azure Monitor, incident responders can gain in-depth insights into
    serverless components.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Windows Defender Logs**: For VMs running Windows Defender, incident responders
    can analyze the logs generated by the antivirus software. These logs contain information
    about detected threats, blocked malware, and other security-related events. By
    analyzing Windows Defender logs, responders can identify potential security breaches,
    investigate malware infections, and take appropriate actions to mitigate risks.
    Windows Defender is the endpoint security antivirus tool at the endpoint level
    (that is, installed on your VMs).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Linux VMs and Linux Logs**: For Linux-based VMs in Microsoft Azure,
    incident responders can analyze logs generated by the system’s syslog service
    and Microsoft security tools. Incident responders can utilize Azure’s integration
    with Linux VMs, which provides system events through syslog, such as system alerts,
    errors, user login activities, and other system-level messages. These logs are
    instrumental in tracing system anomalies, security incidents, and potential unauthorized
    access. In addition to the basic syslog capabilities, Azure offers integration
    with its suite of security tools, such as Microsoft Defender, which can be used
    to enhance the security monitoring of Linux VMs. Microsoft Defender provides advanced
    threat protection features, detecting and analyzing potential threats and vulnerabilities
    for Linux resources.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Having explored the diverse range of log sources available on Azure Virtual
    Machines, from Azure Log Analytics to Windows Defender Logs, it’s evident that
    Azure provides comprehensive tools for incident responders to track and analyze
    VM activities. With this foundation in place, we can now shift our focus to an
    even more integrated security solution within the Azure ecosystem: Microsoft Defender
    for Cloud. This solution synergistically utilizes these logs to offer holistic
    security insights and proactive threat protection.'
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Defender for Cloud
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Previously called Azure Security Center, Microsoft Defender for Cloud provides
    advanced threat detection and security monitoring for Azure resources, including
    VMs. It analyzes security-related events, performs behavioral analysis, and provides
    security recommendations. Incident responders can leverage Microsoft Defender
    for Cloud to identify potential security vulnerabilities, investigate security
    incidents, and respond to threats effectively. The following screenshot demonstrates
    an example of security alerts being reported by Microsoft Defender for Cloud.
    In this example, we can observe that Mimikatz’s credential theft tool was detected
    on a VM resource. Incident responders can utilize these alerts in the larger context
    of their investigation to determine attack tactics utilized by bad actors:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.26 – Microsoft Defender for Cloud alerts](img/00026.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.26 – Microsoft Defender for Cloud alerts
  prefs: []
  type: TYPE_NORMAL
- en: 'Microsoft Defender for Cloud also provides configuration recommendations based
    on continuous monitoring, which can help incident responders identify any outstanding
    security vulnerabilities. The following screenshot shows an example of the **Recommendations**
    pane in Microsoft Defender for Cloud:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.27 – Microsoft Defender for Cloud – Recommendations](img/00177.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.27 – Microsoft Defender for Cloud – Recommendations
  prefs: []
  type: TYPE_NORMAL
- en: While Microsoft Defender for Cloud offers comprehensive monitoring and security
    recommendations, Azure also provides tools for in-depth network traffic analysis
    for your VMs. One of the most valuable tools for this purpose is NSG flow logs.
    This feature gives administrators granular insights into network activities, complementing
    the protections provided by Microsoft Defender for Cloud.
  prefs: []
  type: TYPE_NORMAL
- en: NSG flow logs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: NSG flow logs capture information about network traffic flowing through NSGs
    associated with Azure VMs. These logs provide insights into allowed and denied
    network connections, including source and destination IP addresses, ports, and
    protocols. Incident responders can analyze NSG flow logs to detect suspicious
    network activities, identify potential attacks, and enforce network security policies
    effectively. We discussed NSG flow logs earlier in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Products and services such as Virtual Network, Storage, and Virtual Machines
    in Azure share common monitoring and logging capabilities through services such
    as Azure Log Analytics, Azure Monitor, and Azure Activity. These services provide
    comprehensive insights into the health, performance, and activity of the resources
    deployed in Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of whether you are monitoring a virtual network, storage, or VMs,
    the fundamental approach remains similar. Azure Log Analytics allows you to collect,
    centralize, and analyze logs and metrics from various sources. Azure Monitor provides
    a unified monitoring experience, offering alerts, dashboards, and visualizations
    to gain real-time insights into resource performance and availability. Azure Activity
    Logs captures subscription-level events and actions for auditing and tracking
    purposes.
  prefs: []
  type: TYPE_NORMAL
- en: After delving into the intricacies of logging information of Azure Virtual Machines,
    specifically the capabilities of Microsoft Defender for Cloud and NSG flow logs,
    it’s clear that Azure offers robust tools for security and traffic analysis. However,
    Azure’s suite doesn’t stop there. Transitioning to our next section, we’ll explore
    the comprehensive threat intelligence capabilities of Microsoft Sentinel.
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Sentinel
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Microsoft Sentinel is a powerful cloud-native SIEM solution offered by Azure.
    It enables organizations to detect, investigate, and respond to security threats
    by collecting, analyzing, and visualizing vast amounts of security data from various
    sources in real time.
  prefs: []
  type: TYPE_NORMAL
- en: A SIEM is a comprehensive software solution that combines **security information
    management** (**SIM**) and **security event management** (**SEM**) capabilities.
    It serves as a central hub for ingesting and correlating logs and events from
    diverse sources, providing a unified view of an organization’s security landscape.
  prefs: []
  type: TYPE_NORMAL
- en: 'During a security incident, incident responders can leverage Microsoft Sentinel’s
    advanced features to effectively respond and mitigate threats. Here are specific
    ways incident responders can utilize Microsoft Sentinel:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Log collection and integration**: Microsoft Sentinel supports the ingestion
    of data from a wide range of sources, including Azure services, on-premises infrastructure,
    security solutions, and third-party tools. Incident responders can configure data
    connectors to collect logs and events, ensuring comprehensive visibility across
    the entire environment.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Threat detection and analytics**: Microsoft Sentinel employs machine learning
    algorithms and advanced analytics to detect and prioritize potential security
    threats. Its built-in analytics templates and detection rules help identify suspicious
    activities, anomalous behavior, or known attack patterns. Incident responders
    can leverage these capabilities to identify IoCs and detect emerging threats.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Real-time monitoring and alerting**: Microsoft Sentinel provides real-time
    monitoring of security events and generates alerts based on predefined rules and
    analytics. Incident responders can configure alert rules to trigger notifications
    when specific conditions or behaviors indicative of a security incident occur.
    These alerts can be customized to prioritize critical events and be integrated
    with other incident response systems.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Investigation and hunting**: Microsoft Sentinel offers powerful search and
    query capabilities to investigate security incidents thoroughly. Incident responders
    can query and explore large volumes of data, filter results based on various attributes,
    and pivot between different data dimensions. The interactive workspace in Sentinel
    allows responders to visualize and correlate data, enabling in-depth investigations
    and proactive threat hunting.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automated response and orchestration**: Microsoft Sentinel provides playbooks,
    which are pre-defined automated workflows, to facilitate incident response actions.
    Incident responders can create playbooks to automate repetitive and manual tasks,
    such as enriching alerts with additional context, blocking suspicious IP addresses,
    or quarantining compromised assets. This feature helps streamline incident response
    processes and reduce response times.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integration with security solutions**: Microsoft Sentinel integrates seamlessly
    with various Microsoft security solutions and third-party tools. Incident responders
    can leverage these integrations to enrich investigations, gather additional context,
    and orchestrate response actions across the security ecosystem, providing a unified
    and coordinated approach to incident response.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot shows Microsoft Sentinel with active alerts and data
    connected:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 4.28 – Microsoft Sentinel – Incidents](img/00195.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4.28 – Microsoft Sentinel – Incidents
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Sentinel is not automatically activated for customers; it requires
    manual setup and configuration. Organizations must actively choose to implement
    and configure Microsoft Sentinel in their Azure environment to utilize its security
    analytics and threat intelligence capabilities. As we conclude our exploration
    of Microsoft Sentinel, it’s evident that its advanced threat intelligence and
    security analytics capabilities play a pivotal role in fortifying Azure’s cloud
    ecosystem. By utilizing Microsoft Sentinel as a SIEM, security analysts and incident
    responders can harness the full potential of Sentinel to safeguard their digital
    environments in an ever-evolving threat landscape.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter delved into the crucial role of log analysis in incident response
    within the Azure environment. It emphasized the significance of understanding
    the available log sources in Azure, how to obtain them, and best practices for
    analyzing the data to effectively detect, contain, and resolve security incidents.
    By familiarizing incident response professionals with the tools and techniques
    specific to Azure, they can enhance their ability to safeguard and respond to
    security incidents in a cloud infrastructure context.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter highlighted the importance of differentiating between default log
    availability and the need to enable certain logs, drawing parallels to AWS. Then,
    it outlined the diverse logs provided by essential Azure services and products,
    as previously discussed in [*Chapter 3*](part0021_split_000.html#_idTextAnchor042),
    and examined their utilization for investigative purposes. In particular, this
    chapter explored Azure Log Analytics, Azure Virtual Network flow logs, Azure Storage,
    Azure Virtual Machines, and other Azure tools, such as Microsoft Sentinel, as
    valuable data sources for incident response.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will shift our focus to **Google Cloud Platform** (**GCP**)
    and explore the various log sources that can be enabled and utilized during incidents.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To learn more about the topics that were covered in this chapter, take a look
    at the following resources:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Azure* *Monitor*: [https://learn.microsoft.com/en-us/azure/virtual-machines/monitor-vm](https://learn.microsoft.com/en-us/azure/virtual-machines/monitor-vm)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Microsoft Defender for* *Cloud*: [https://learn.microsoft.com/en-us/azure/defender-for-cloud/defender-for-cloud-introduction](https://learn.microsoft.com/en-us/azure/defender-for-cloud/defender-for-cloud-introduction)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Log* *Analytics*: [https://learn.microsoft.com/en-us/azure/azure-monitor/logs/log-analytics-tutorial](https://learn.microsoft.com/en-us/azure/azure-monitor/logs/log-analytics-tutorial)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*NSG flow* *logs*: [https://learn.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-overview](https://learn.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Azure Virtual* *Networks*: [https://learn.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview](https://learn.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Traffic* *Analytics*: [https://learn.microsoft.com/en-us/azure/network-watcher/traffic-analytics](https://learn.microsoft.com/en-us/azure/network-watcher/traffic-analytics)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Microsoft Defender for* *Endpoint*: [https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/microsoft-defender-endpoint?view=o365-worldwide](https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/microsoft-defender-endpoint?view=o365-worldwide)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Microsoft* *Sentinel*: [https://learn.microsoft.com/en-us/azure/sentinel/overview](https://learn.microsoft.com/en-us/azure/sentinel/overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
