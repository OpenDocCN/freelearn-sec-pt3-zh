["```\nmov ecx, 0x176 ; IA32_SYSENTER_EIP\nrdmsr ; read msr register\nmov <eip_low>, eax\nmov <eip_high>, edx\n```", "```\nmov ecx, 0x176 ; IA32_SYSENTER_EIP\nxor edx, edx\nmov eax, <malicious_hooking_function>\nwrmsr ; write this value to IA32_SYSENTER_EIP\n```", "```\nPUSH EBX\nMOV EBX, CR0\nOR EBX, 0x00010000\nMOV CR0,EBX\nPOP EBX\n```", "```\nlea r10, <KeServiceDescriptorTable>\nlea r11, <KeServiceDescriptorTableShadow>\ntest DWORD PTR [rbx + lOOh] , 80h\n```", "```\nIoCopyCurrentIrpStackLocationToNext( Irp ); IoSetCompletionRoutine(\n  Irp, // Irp\n  MyLegacyFilterPassThroughCompletion, // CompletionRoutine\n  NULL, // Context\n  TRUE, // InvokeOnSuccess\n  TRUE, // InvokeOnError\n  TRUE); // InvokeOnCancel\nreturn IoCallDriver(NextLowerDriverDeviceObject, Irp);\n```", "```\nCMP WORD PTR [00400000h], 'ZM'\nJNZ <not_mz>\n```", "```\nKeUnstackDetachProcess(APCState);\n```", "```\nbcdedit.exe /set testsigning on\n```", "```\nbcdedit /set nointegritychecks on\n```", "```\nmov qword ptr [rsp+8],rcx\nmov qword ptr [rsp+10h],rdx\nmov qword ptr [rsp+18h],r8\nmov qword ptr [rsp+20h],r9\npushfq\nsub rsp,30h\ncli\nmov rcx, qword ptr gs:[20h]\nadd rcx,120h\ncall nt!RtlCaptureContext\n```", "```\nPDRIVER_DISPATCH MajorFunction[IRP_MJ_MAXIMUM_FUNCTION + 1];\n```", "```\n    bcdedit /debug on\n    ```", "```\n    bcdedit /dbgsettings local\n    ```", "```\n    bcdedit /dbgsettings serial debugport:1 baudrate:115200\n    ```", "```\n    bcdedit /copy {current} /d \"<any_custom_display_name>\"\n    ```", "```\n    bcdedit /set <guid> debug on\n    bcdedit /set <guid> debugport 1\n    bcdedit /set <guid> baudrate 115200\n    ```", "```\nmulti(0)disk(0)rdisk(0)partition(1)\\WINDOWS=\"<any_custom_display_name>\" /fastdetect /debug /debugport=com1 /baudrate=115200\n```", "```\nwindbg.exe -kl\n```", "```\nwindbg.exe -k com:pipe,port=\\\\.\\pipe\\<pipe_name>,baud=115200,resets=0,reconnect\n```", "```\n    com:pipe,port=\\\\.\\pipe\\<pipe_name>,baud=115200,resets=0,reconnect\n    ```", "```\n.sympath srv*<local_path_for_downloaded_symbols>*https://msdl.microsoft.com/download /symbols\n.reload /f\n```", "```\n    symchk /om manifest.txt /ie ntoskrnl.exe /s\n    <path_to_any_empty_dir>\n    ```", "```\n    symchk /im manifest.txt /s srv*<local_path_for_downloaded_symbols>*https://msdl.microsoft. com/download/symbols\n    ```", "```\n    .sympath <local_path_to_downloaded_symbols>\n    .reload /f\n    ```", "```\n    bu <driver_name>!<any_string>\n    ```", "```\n    sxe ld:<driver_name>.sys\n    ```", "```\n    .shell -ci \"uf /c nt!IopLoadDriver\" grep -B 1 -i \"call.*ptr\n    \\[.*h\"\n    Or, on newer systems:\n    .shell -ci \"uf nt!guard_dispatch_icall\" grep -i \"jmp.* rax\" | head -n 1\n    ```", "```\nsc create <any_name> type= kernel binpath= \"<path_to_driver>\" sc start <same_name>\n```"]