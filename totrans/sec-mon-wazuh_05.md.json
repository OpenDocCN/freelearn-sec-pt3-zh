["```\n<command>\n  <name>firewall-drop</name>\n  <executable>firewall-drop</executable>\n  <timeout_allowed>yes</timeout_allowed>\n</command>\n```", "```\n<active-response>\n    <command>firewall-drop</command>\n    <location>local</location>\n    <rules_id>5712</rules_id>\n    <timeout>60</timeout>\n  </active-response>\n```", "```\n    <name>firewall-drop</name>\n    <executable>firewall-drop</executable>\n    <timeout_allowed>yes</timeout_allowed>\n  </command>\n  <active-response>\n    <command>firewall-drop</command>\n    <location>local</location>\n    <rules_id>5710</rules_id>\n    <timeout>60</timeout>\n  </active-response>\n```", "```\nsystemctl restart wazuh-manager\n```", "```\nhydra -l  voldemort -P <PASSWORD_TEXT_FILE>  <WAZUH_AGENT_IP> ssh\n```", "```\nC:\\\\Program Files (x86)\\\\ossec-agent\\\\active-response\\\\bin\n@ECHO OFF\nECHO.\n\"C:\\\\Program Files\\\\PowerShell\\\\7\\\\\"pwsh.exe -executionpolicy ByPass -File \"C:\\\\Program Files (x86)\\\\ossec-agent\\\\active-response\\\\bin\\\\wfblock.ps1\"\n:Exit\n```", "```\nC:\\\\Program Files (x86)\\\\ossec-agent\\\\active-response\\\\bin\\\\wfblock.ps1\n#Author Rajneesh Gupta\n# Set ConfirmPreference to None to automatically answer \"No\" to confirmation prompts\n$ConfirmPreference = \"None\"\n# Define the rule name\n$ruleName = \"BlockOutgoingTraffic\"\n# Check if the rule already exists\n$existingRule = Get-NetFirewallRule | Where-Object {$_.Name -eq $ruleName}\nif ($existingRule -eq $null) {\n    # Create a new outbound block rule\n    New-NetFirewallRule -DisplayName $ruleName -Direction Outbound -Action Block -Enabled True\n    Write-Host \"Outgoing traffic is now blocked.\"\n} else {\n    Write-Host \"Outgoing traffic is already blocked.\"\n}\n```", "```\n<command>\n    <name>windowsfirewall</name>\n    <executable>fw.cmd</executable>\n    <timeout_allowed>yes</timeout_allowed>\n  </command>\n```", "```\n  <active-response>\n   <disabled>no</disabled>\n   <command>windowsfirewall</command>\n   <location>local</location>\n   <rules_id>87105</rules_id>\n   <timeout>60</timeout>\n  </active-response>\n```", "```\n<command>\n    <name>netsh</name>\n    <executable>netsh.exe</executable>\n    <timeout_allowed>yes</timeout_allowed>\n  </command>\n<active-response>\n    <disabled>no</disabled>\n    <command>netsh</command>\n    <location>local</location>\n    <rules_id>100100</rules_id>\n  </active-response>\n```", "```\n<group name=\"rdp\">\n  <rule id=\"100100\" level=\"10\" frequency=\"3\" timeframe=\"120\">\n    <if_matched_sid>60122</if_matched_sid>\n    <description>Possible RDP attack: 3 failed logins in a short period of time</description>\n  </rule>\n</group>\n```", "```\nC:\\\\Program Files (x86)\\\\ossec-agent\\\\ossec.conf file\n<command>\n    <name>netsh</name>\n    <executable>netsh.exe</executable>\n    <timeout_allowed>yes</timeout_allowed>\n  </command>\n<active-response>\n    <disabled>no</disabled>\n    <command>netsh</command>\n    <location>local</location>\n    <rules_id>100100</rules_id>\n  </active-response>\n```", "```\nsystemctl restart wazuh-manager\n```", "```\nhydra -l roger -P pass.txt 192.168.29.77 rdp\n```"]