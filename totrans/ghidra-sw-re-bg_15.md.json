["```\nC:\\Users\\virusito\\ghidra\\Ghidra\\Processors\\x86>tree\n```", "```\n├───data\n```", "```\n│   ├───languages\n```", "```\n│   │   └───old\n```", "```\n│   ├───manuals\n```", "```\n│   └───patterns\n```", "```\n└───src\n```", "```\n    ├───main\n```", "```\n    │   └───java\n```", "```\n    │       └───ghidra\n```", "```\n    │           ├───app\n```", "```\n    │           │   ├───plugin\n```", "```\n    │           │   │   └───core\n```", "```\n    │           │   │       └───analysis\n```", "```\n    │           │   └───util\n```", "```\n    │           │       └───bin\n```", "```\n    │           │           └───format\n```", "```\n    │           │               ├───coff\n```", "```\n    │           │               │   └───relocation\n```", "```\n    │           │               └───elf\n```", "```\n    │           │                   ├───extend\n```", "```\n    │           │                   └───relocation\n```", "```\n    │           └───feature\n```", "```\n    │               └───fid\n```", "```\n    │                   └───hash\n```", "```\n    └───test.processors\n```", "```\n        └───java\n```", "```\n            └───ghidra\n```", "```\n                └───test\n```", "```\n                    └───processors\n```", "```\n00  @325383-sdm-vol-2abcd.pdf [Intel 64 and IA-32 Architectures Software Developer's Manual Volume 2 (2A, 2B, 2C & 2D): Instruction Set Reference, A-Z, Oct 2019 (325383-071US)]\n```", "```\n01  AAA, 120\n```", "```\n02  AAD, 122\n```", "```\n03  BLENDPS, 123\n```", "```\n04  AAM, 124\n```", "```\n05  AAS, 126\n```", "```\n06  ADC, 128\n```", "```\n07  ADCX, 131\n```", "```\n08  ADD, 133\n```", "```\n...................... File cut here .........................\n```", "```\n00  <patternlist>\n```", "```\n01    … patters here …\n```", "```\n02  </patternlist>\n```", "```\n00  <patternlist>\n```", "```\n01    <pattern>\n```", "```\n02      <data>0x5589e583ec</data> <!-- PUSH EBP : MOV EBP,ESP \n```", "```\n                                                : SUB ESP, -->\n```", "```\n03      <codeboundary/>\n```", "```\n04      <possiblefuncstart/>\n```", "```\n05    </pattern>\n```", "```\n06  </patternlist>\n```", "```\n00  <patternpairs totalbits=\"32\" postbits=\"16\">\n```", "```\n01    <prepatterns>\n```", "```\n02      <data>0x90</data> <!-- NOP filler -->\n```", "```\n03      <data>0xc3</data> <!-- RET -->\n```", "```\n04      <data>0xe9........</data> <!-- JMP big -->\n```", "```\n05      <data>0xeb..</data> <!-- JMP small -->\n```", "```\n06      <data>0x89f6</data> <!-- NOP (MOV ESI,ESI) -->\n```", "```\n07    </prepatterns>\n```", "```\n08    <postpatterns>\n```", "```\n09      <data>0x5589e5</data> <!-- PUSH EBP : MOV EBP,ESP -->\n```", "```\n10      <codeboundary/>\n```", "```\n11      <possiblefuncstart/>\n```", "```\n12    </postpatterns>\n```", "```\n13  </patternpairs>\n```", "```\n00  <dwarf>\t\n```", "```\n01  \t <register_mappings>\n```", "```\n02  \t   <register_mapping dwarf=\"0\" ghidra=\"EAX\"/>\n```", "```\n03  \t   <register_mapping dwarf=\"1\" ghidra=\"ECX\"/>\n```", "```\n04  \t   <register_mapping dwarf=\"2\" ghidra=\"EDX\"/>\n```", "```\n . . . . . . . . . . . . cut here . . . . . . . . . . . . . .\n```", "```\n<register_mapping dwarf=\"4\" ghidra=\"ESP\" stackpointer=\"true\"/>\n```", "```\n<register_mapping dwarf=\"11\" ghidra=\"ST0\" auto_count=\"8\"/>\n```", "```\n00  <language_definitions>\n```", "```\n01    <language processor=\"x86\"\n```", "```\n02              endian=\"little\"\n```", "```\n03              size=\"32\"\n```", "```\n04              variant=\"default\"\n```", "```\n05              version=\"2.9\"\n```", "```\n06              slafile=\"x86.sla\"\n```", "```\n07              processorspec=\"x86.pspec\"\n```", "```\n08              manualindexfile=\"../manuals/x86.idx\"\n```", "```\n09              id=\"x86:LE:32:default\">\n```", "```\n10      <description>Intel/AMD 32-bit x86</description>\n```", "```\n11      <compiler name=\"gcc\" spec=\"x86gcc.cspec\" id=\"gcc\"/>\n```", "```\n12      <external_name tool=\"gnu\" name=\"i386:intel\"/>\n```", "```\n13      <external_name tool=\"IDA-PRO\" name=\"8086\"/>\n```", "```\n14      <external_name tool=\"IDA-PRO\" name=\"80486p\"/>\n```", "```\n15      <external_name tool=\"IDA-PRO\" name=\"80586p\"/>\n```", "```\n16      <external_name tool=\"DWARF.register.mapping.file\"\n```", "```\n17                                          name=\"x86.dwarf\"/>\n```", "```\n18    </language>\n```", "```\n      . . . . . . . more languages here . . . . . .\n```", "```\n19  </language_definitions>\n```", "```\n00  <opinions>\n```", "```\n01      <constraint loader=\"Portable Executable (PE)\">\n```", "```\n02        <constraint compilerSpecID=\"windows\">\n```", "```\n03          <constraint primary=\"332\" processor=\"x86\"     \n```", "```\n04                            endian=\"little\" size=\"32\" />\n```", "```\n05          <constraint primary=\"333\" processor=\"x86\"     \n```", "```\n06                            endian=\"little\" size=\"32\" />\n```", "```\n07          <constraint primary=\"334\" processor=\"x86\"     \n```", "```\n08                            endian=\"little\" size=\"32\" />\n```", "```\n09          <constraint primary=\"34404\" processor=\"x86\"     \n```", "```\n10                            endian=\"little\" size=\"64\" />\n```", "```\n11        </constraint>\n```", "```\n00  <processor_spec>\n```", "```\n01    <properties>\n```", "```\n02      <property \n```", "```\n03           key=\"useOperandReferenceAnalyzerSwitchTables\" \n```", "```\n04                                          value=\"true\"/>\n```", "```\n05      <property key=\"assemblyRating:x86:LE:32:default\" \n```", "```\n06                                      value=\"PLATINUM\"/>\n```", "```\n07    </properties>\n```", "```\n08    <programcounter register=\"EIP\"/>\n```", "```\n09    <incidentalcopy>\n```", "```\n10      <register name=\"ST0\"/>\n```", "```\n11      <register name=\"ST1\"/>\n```", "```\n12    </incidentalcopy>\n```", "```\n13    <context_data>\n```", "```\n14      <context_set space=\"ram\">\n```", "```\n15        <set name=\"addrsize\" val=\"1\"/>\n```", "```\n16        <set name=\"opsize\" val=\"1\"/>\n```", "```\n17      </context_set>\n```", "```\n18      <tracked_set space=\"ram\">\n```", "```\n19        <set name=\"DF\" val=\"0\"/>\n```", "```\n20      </tracked_set>\n```", "```\n21    </context_data>\n```", "```\n22    <register_data>\n```", "```\n23      <register name=\"DR0\" group=\"DEBUG\"/>\n```", "```\n24      <register name=\"DR1\" group=\"DEBUG\"/>\n```", "```\n25    </register_data>\n```", "```\n26  </processor_spec>\n```", "```\n00  @include \"ia.sinc\"\n```", "```\n00  define pcodeop swap_bytes;\n```", "```\n:MOVBE Reg16, m16       is vexMode=0 & opsize=0 & byte=0xf; byte=0x38; byte=0xf0; Reg16 ... & m16  { Reg16 = swap_bytes( m16 ); }\n```", "```\n:MOVBE Reg32, m32       is vexMode=0 & opsize=1 & mandover=0 & byte=0xf; byte=0x38; byte=0xf0; Reg32 ... & m32  { Reg32 = swap_bytes( m32 ); }\n```", "```\n:MOVBE m16, Reg16       is vexMode=0 & opsize=0 & byte=0xf; byte=0x38; byte=0xf1; Reg16 ... & m16  { m16 = swap_bytes( Reg16 ); }\n```", "```\n:MOVBE m32, Reg32       is vexMode=0 & opsize=1 & mandover=0 & byte=0xf; byte=0x38; byte=0xf1; Reg32 ... & m32  { m32 = swap_bytes( Reg32 ); }\n```", "```\n@ifdef IA64\n```", "```\n:MOVBE Reg64, m64       is vexMode=0 & opsize=2 & mandover=0 & byte=0xf; byte=0x38; byte=0xf0; Reg64 ... & m64  { Reg64 = swap_bytes( m64 ); }\n```", "```\n:MOVBE m64, Reg64       is vexMode=0 & opsize=2 & mandover=0 & byte=0xf; byte=0x38; byte=0xf1; Reg64 ... & m64  { m64 = swap_bytes( Reg64 ); }\n```", "```\n@endif\n```"]