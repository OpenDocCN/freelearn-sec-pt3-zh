- en: '1'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to the Cyber Security Landscape
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cue up the music. *Welcome to the Jungle*. The cyber security landscape is ever-changing
    and evolving. One could easily compare it to the mercurial New England weather
    patterns in the Northeast of the United States. Such weather can be dangerous
    for a hiker; similarly, such changes in cyber threats can be devastating for a
    technology solution.
  prefs: []
  type: TYPE_NORMAL
- en: In the coming chapters, we will dive deeper into the realm of **Linux-embedded
    systems** (or embedded Linux systems, also known as Linux appliances, or simply
    appliances) and exactly how you can apply this new knowledge to secure your solutions.
    We’ll make this journey together, and at the end of the tunnel, you will be best
    positioned to build a better appliance.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter is here just to set the foundation of Linux-embedded systems before
    we dive deeper. In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: What is a Linux-embedded system?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How are Linux-embedded systems used?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why is securing Linux-embedded systems so important?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s get started.
  prefs: []
  type: TYPE_NORMAL
- en: What is a Linux-embedded system?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It’s probably safe to assume that if you’re reading this book, you may have
    some knowledge of what your company defines as a Linux-embedded system. To truly
    have a rich understanding of this subject, let’s review the **appliance model**
    for creating sellable solutions.
  prefs: []
  type: TYPE_NORMAL
- en: The **appliance model** provides solutions and services that an organization
    (or individual) cannot easily build for themselves. This also addresses another
    limitation; oftentimes, users of these appliances have little to no access to
    any technologists who would take on ownership of the care of said solution. The
    appliance model is most prevalent in home consumer electronics but touches every
    known vertical in the industry.
  prefs: []
  type: TYPE_NORMAL
- en: Most appliances leverage purpose-built hardware and have unique form factors
    that best enable their usage. These solutions are all around us every day. Some
    easily identifiable consumer appliance examples would be your home’s Wi-Fi router,
    cable TV box, or smart laundry washing machine. A resounding example would be
    the smartphones that we all carry and cannot imagine living without.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s affectionately pick a generic home Wi-Fi router to dive deeper into the
    appliance model concepts. Virtually anyone can use its services without understanding
    how the underlying technology works or is implemented.
  prefs: []
  type: TYPE_NORMAL
- en: The router has a custom form factor for far more than aesthetics. The housing
    contains all the electronic components needed to successfully provide the services
    for which it’s intended. Inside, there’s a small computer running a Linux operating
    system. I bet you can see where I am going with this. This is how we came to call
    these offerings *Linux-embedded systems*, as they contain a custom computer and
    a Linux operating system, along with custom software to provide a unique set of
    services to the intended end-user.
  prefs: []
  type: TYPE_NORMAL
- en: Defining an appliance doesn’t stop there. It must provide a service, or services,
    which can be easily consumed by its end-users. In an appliance, this is achieved
    by the implementation of complex software and the appropriate hardware. In that
    home Wi-Fi router example, the manufacturer has built it to provide a simple-to-use
    web-based interface in order to *manage* the services provided. In this case,
    this is how the end-users allow people to access wireless internet.
  prefs: []
  type: TYPE_NORMAL
- en: Another key facet of the appliance model that must be built in is the ability
    to accept and process updates to its configuration or software, which absolutely
    includes its Linux operating system. It has to be simple for the end-user; one
    must assume the end-user is not technical. If the end-users actually possessed
    the technical capabilities, they could, in theory, build this themselves and you’d
    be out of business. Staying with the Wi-Fi router example, it has built into its
    web interface the simple function for self-updating. The end-user clicks on a
    button in the interface and the magic happens behind the scenes. Programmatically,
    the appliance gets an update package from a secure repository provided by the
    solutions builder; it downloads the package; and then finally processes all those
    application and Linux updates without any intervention by the end-user. The process
    notifies the end-user of its completion status (and sometimes requires a restart
    of the appliance).
  prefs: []
  type: TYPE_NORMAL
- en: 'Not every embedded Linux system (appliance) is on dedicated hardware. The advent
    of virtualization and, more recently, the great push to move things into the cloud
    have unleashed a whole new delivery method: the **virtual appliance**.'
  prefs: []
  type: TYPE_NORMAL
- en: Virtual appliances are rapidly gaining traction in multiple cloud marketplaces.
    Why? It’s simple. Companies that, for many years, have produced on-premises appliance
    solutions have had to evolve in order to retain their customer base. Because of
    this, many solutions builders now offer an on-premises hardware offering, a virtual
    appliance for an on-premises offering, and a cloud provider-based virtual appliance
    offering.
  prefs: []
  type: TYPE_NORMAL
- en: Generally, each of these solutions can be built from the same code base, however,
    depending on what exactly the appliance provides the end-user, it may need to
    be tailored and refactored differently for each virtualization platform’s networking
    and security requirements. This is because the cloud providers (often referred
    to as **hyperscalers**) each have their own proprietary methods and APIs for networking,
    security, and end-user access. What I mean by this specifically is the application
    stack may be unified upon all delivery methods; however, the virtual machine image
    format, networking, and other facets will be different. For example, Azure and
    Google handle their network stack quite differently. Storage is also quite different.
    Hence, the **user interface** (**UI**), especially for the appliance’s setup,
    needs to have these differences in virtualization platforms or hyperscalers’ requirements
    taken into consideration.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we’ll review how embedded Linux systems are utilized.
  prefs: []
  type: TYPE_NORMAL
- en: How are Linux-embedded systems used?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Linux-embedded systems are everywhere. Most people don’t give it a second thought.
    I venture the guess that you reach for one of these things when you first wake
    up in the morning and engage with it countless times every day. Your smartphone
    is a Linux-embedded system and, in my opinion, is an awesome example of one.
  prefs: []
  type: TYPE_NORMAL
- en: Embedded Linux systems surround us; some with stealth, others with pure elegance
    and entertainment, with all the beauty and grace their builders have instilled
    in their design. These appliance solutions run a massive range of use cases. Some
    are a complete solution and others are but a simple component to a greater ecosystem
    or solution.
  prefs: []
  type: TYPE_NORMAL
- en: Most, when successfully designed and implemented, provide services to their
    user community seamlessly without the user even having to think about what is
    happening under the covers. Much of this must be credited to how resilient, lightweight,
    and flexible Linux solutions can be. A Microsoft Windows-embedded system is far
    more reliant on its GUI components than Linux. It’s far easier to deliver a complete
    solution on Linux with a GUI than its Windows-based competition.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, I will try to provide a generalized list of where Linux is leveraged
    today (regardless of distribution or hardware platform) in providing services.
    I’ll throw in my disclaimer as well – this list is general at best and may not
    include all use cases currently deployed. I present this in no particular order
    and will try not to leave anything out but it would be impossible for me to list
    everywhere Linux-embedded systems are in use. So, let’s look at the following
    list:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Artificial intelligence (AI)**: Linux is at the heart of all AI advancements
    in recent years. It is the preferred operating system of choice due to its flexibility
    and vast developer base. As this field is rapidly evolving, the possibilities
    are limitless and often classified, such as the following:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Facial recognition systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Artistic graphical rendering systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Language processing
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Agriculture**: As agriculture around the world has begun to embrace operations
    at ever-growing scales, technology has been needed to assist with the following
    operations:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Heavy equipment monitoring solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: GPS-guided equipment navigation
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Produce grading and sorting systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Production tracking systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Automotive**: Embedded Linux reigns supreme in this rapidly evolving transportation
    space. Countless embedded Linux systems can be found today, stealthily providing
    many critical services, such as the following:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Autonomous vehicle operating systems and components
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Sensors and safety systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: GPS navigation
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Electric vehicle charging infrastructure
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Aviation**: Civilian aviation and transportation is a booming business for
    Linux-embedded systems solutions. These complex appliances can be found in the
    following areas (assuming you have the proper security clearance):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Baggage scanning systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Passenger screening solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Baggage shipping and tracking systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Radar and air traffic control systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Traveler identification and verification systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Building management and construction**: Building management controls have
    long been solved by Linux-based solutions providers. The following is but a mere
    example of some of the high-tech solutions:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Card key access systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Environmental control systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: HVAC management systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Fire detection and suppression systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Alarm systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Telecommunications**: In my opinion, this vertical has seen the most growth,
    which is second only to those related to military projects. **Virtualization**
    has empowered the proliferation of a whole new breed of **network functions virtualization**
    (**NFV**) solutions. Both physical and virtual appliances in this space dwarf
    deployments virtually anywhere else. These virtual appliances can be found in
    server rooms, telco closets, data centers, and cloud providers’ marketplaces in
    order to make it easier to provide access to the following services:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Radio access** **networks** (**RANs**)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Load balancers
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Routing solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Push-to-talk** (**PTT**) phone systems'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Geo-locational-tracking solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Domain Name System (DNS) solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: IP address management solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Firewall solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Email filtering solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Operations management systems that control fiber-based connectivity to the internet
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Geology**: Mostly driven by energy companies and government agency needs,
    this vertical has seen exceptional growth in the past five years. Although they
    may not be mainstream, these appliances provide many valuable services to academia
    and the energy industry, such as the following:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Near real-time geological scanning and assessment solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Modeling systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Seismic tracking solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Healthcare**: Linux systems are vastly deployed in almost every facet of
    healthcare, whose focus on security and patient safety is paramount. Hospital
    efficiency has been greatly improved as well. Many of the new appliance solutions
    can be found in virtually any healthcare practice, providing some of the following
    life-saving services:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patient safety solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Electronic records solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Patient monitoring solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Ventilators
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Lab testing solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Imaging systems (PET scan, MRI scan, CAT scan, etc.)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Industrial and manufacturing**: Industrial automation has been prolific for
    over two decades, however, some key players in this space have revolutionized
    what used to be manual processes. Embedded Linux systems reduce costs and accelerate
    production rates by providing some of the following services:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Industrial manufacturing automation systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Environmental and safety monitoring systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Military**: So, in order to keep those guys in black suits from coming to
    visit me in an unfriendly manner, I’ll generalize, especially in this vertical,
    to preserve my life (and add a little intrigue to the mix). Linux appliances can
    stealthily be found providing critical security and defense-related services,
    such as the following:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Facial recognition systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Data gathering solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Components to countless vehicles and aircraft
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Radar systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Guidance systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Navigation systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Space**: Without Linux and open source technologies, this vertical would
    not be achieving what it is today. Embedded Linux systems are reaching for the
    heavens. A few examples are as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Space exploration vehicles (example: Cassini)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Satellites
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Rovers
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Sensor systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: GPS systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Ground-based management systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Space telescopes
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Weather**: Government agencies, aviation, highway safety, oceanic shipping,
    and other transportation agencies all rely upon data provided by Linux-embedded
    systems solutions for continuity of travel and public safety. These appliances,
    which can be found globally, provide the following services:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Weather modeling and prediction solutions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Ground and aerial radar systems
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: In summary, we’ve highlighted just some of the critical and interesting services
    embedded Linux systems provide today that enrich our lives, protect us silently,
    and help us travel to places that were once beyond our reach.
  prefs: []
  type: TYPE_NORMAL
- en: Why is securing Linux-embedded systems so important?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Why is securing Linux-embedded solutions systems (appliances) so important?
    Well, this answer truly has multiple aspects depending on who you ask.
  prefs: []
  type: TYPE_NORMAL
- en: The most obvious answer would simply be to prevent liability and loss of credibility
    in the marketplace. Lately, it seems that there’s an ever-growing list of companies
    whose offerings have become compromised and, as a result, their customers are
    grievously impacted.
  prefs: []
  type: TYPE_NORMAL
- en: The impact of such a breach can be the loss of personal information for the
    users (insert gasp here!) or even worse, unauthorized access to systems or data
    without the knowledge of those running the systems. Each year, these breaches
    result in billions of dollars in correlated losses and open these companies to
    legal action by their user base. The image impact on one’s brand can last far
    longer in people’s minds than you’d think.
  prefs: []
  type: TYPE_NORMAL
- en: It’s highly documented that data leaks, breaches, and other security lapses
    are often done by internal staff and contractors. This does not imply malfeasance.
    Often, it can be a lapse of judgment, forgetting to remove sensitive data from
    development environments, or accidentally taking home sensitive data on a device
    that itself gets lost, stolen, or compromised.
  prefs: []
  type: TYPE_NORMAL
- en: Then, there are the situations caused by intentional misuse of a system. Sadly,
    these events, in my opinion, can be the easiest to prevent. We will definitely
    dive deep into this matter in later chapters. Misuse comes in many forms. It starts
    with unauthorized access to a system or exceeding one’s intended limits. Then,
    there are those events where someone intentionally uses an application or system
    in a manner that it was not intended for. The worst-case scenario is when software
    on a system is modified, installed, or disabled so that an individual can perform
    tasks or monitor others. These are the situations where the wheels fall off the
    wagon.
  prefs: []
  type: TYPE_NORMAL
- en: Examples where embedded Linux systems had a security breach
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In 2019, hackers compromised Ring security cameras and gained access to their
    video and audio streams, wreaking havoc with those devices’ owners’ lives. Several
    incidents were reported in several states. Software updates and better password
    requirements keep those bad actors out now.
  prefs: []
  type: TYPE_NORMAL
- en: Another example of a breach of security is when, in 2017, it was found that
    St. Jude’s cardiac implants could be hacked. When I heard of this, I was amazed
    and scared for those patients. Thankfully, St. Jude has patched the vulnerability
    and no patients were actually harmed.
  prefs: []
  type: TYPE_NORMAL
- en: A research team at IBM was able to compromise the firmware update mechanism
    of a Jeep in mid-2015\. They demonstrated how a bad actor could actually take
    control of the vehicle by speeding it up, steering the wheel, or applying the
    brakes. It’s kind of frightening to think that a bad actor could wreck your family
    drive. These gaps have quickly been closed.
  prefs: []
  type: TYPE_NORMAL
- en: Hopefully, these few public examples can help reinforce just how important it
    is to design an embedded Linux appliance with security in mind.
  prefs: []
  type: TYPE_NORMAL
- en: Detecting these unauthorized changes or breaches can be rather difficult, especially
    if you no longer have access to your product once the customer takes delivery
    and begins consuming its services. Preventing them altogether is so much easier.
  prefs: []
  type: TYPE_NORMAL
- en: You may have heard the old saying, *an ounce of prevention is worth a ton of
    cure*. If you apply even some or all of the lessons this book seeks to impart
    upon you, it’s like having ten pounds of prevention and *all* the cure. We’ll
    dive deep into hardware security, operating systems security, secure connectivity,
    and how to know what threats you must prepare for.
  prefs: []
  type: TYPE_NORMAL
- en: Not every method or technology in this book may apply to your solution or even
    be feasible, but the more you apply these methodologies, the more likely you will
    create a rock-solid product. That said, may the only headlines your company creates
    be those of success and accolades.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this first chapter, you will have gained a solid understanding of how an
    embedded Linux system is defined. We’ve shown you some wide-ranging examples of
    where embedded Linux systems are leveraged today. Most importantly, we’ve reviewed
    some critical reasons why having these devices delivered to their customers as
    securely as possible is mandatory for those building such solutions. In the next
    chapter, we’ll dive deep into why security starts with a great design.
  prefs: []
  type: TYPE_NORMAL
