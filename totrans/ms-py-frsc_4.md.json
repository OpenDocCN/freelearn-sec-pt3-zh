["```\nuser@lab:~$ source labenv/bin/activate\n(labenv)user@lab:~$ ./dshell\n\n(labenv)user@lab:~$ Dshell> decode -d web infected_email.pcap\n\nweb 2015-05-29 16:23:44     10.3.162.105:62588 ->   74.125.226.181:80    ** GET mail.google.com/ HTTP/1.1 // 200 OK  2015-05-29 14:23:40 **\n\nweb 2015-05-29 16:24:15     10.3.162.105:62612 <-    149.3.144.218:80    ** GET sciclubtermeeuganee.it/wp-content/plugins/feedweb_data/pdf_efax_message_3537462.zip HTTP/1.1 // 200 OK  2015-05-28 14:00:22 **\n\n```", "```\n(labenv)user@lab:~$ Dshell> decode -d rip-http --bpf \"tcp and port 62612\" infected_email.pcap\n\nrip-http 2015-05-29 16:24:15     10.3.162.105:62612 <-    149.3.144.218:80    ** New file: pdf_efax_message_3537462.zip (sciclubtermeeuganee.it/wp-content/plugins/feedweb_data/pdf_efax_message_3537462.zip) **\n --> Range: 0 - 132565\nrip-http 2015-05-29 16:24:15     10.3.162.105:62612 <-    149.3.144.218:80    ** File done: ./pdf_efax_message_3537462.zip (sciclubtermeeuganee.it/wp-content/plugins/feedweb_data/pdf_efax_message_3537462.zip) **\n\n(labenv)user@lab:~$ Dshell> md5sum pdf_efax_message_3537462.zip \n9cda66cba36af799c564b8b33c390bf4  pdf_efax_message_3537462.zip\n\n```", "```\n(labenv)user@lab:~$ Dshell> decode -d smbfiles exfiltration.pcap\n\nsmbfiles 2005-11-19 04:31:58    192.168.114.1:52704 ->  192.168.114.129:445   ** VNET3\\administrator \\\\192.168.114.129\\TEST\\torture_qfileinfo.txt (W) **\nsmbfiles 2005-11-19 04:31:58    192.168.114.1:52704 ->  192.168.114.129:445   ** VNET3\\administrator \\\\192.168.114.129\\TESTTORTUR~1.TXT (-) **\nsmbfiles 2005-11-19 04:31:58    192.168.114.1:52705 ->  192.168.114.129:445   ** VNET3\\administrator \\\\192.168.114.129\\TEST\\testsfileinfo\\fname_test_18.txt (W) **\n\n```", "```\n(labenv)user@lab:~$ Dshell> decode -d snort malicious-word-document.pcap --snort_rule 'alert tcp any 443 -> any any (msg:\"ET CURRENT_EVENTS Tor2Web .onion Proxy Service SSL Cert (1)\"; content:\"|55 04 03|\"; content:\"*.tor2web.\";)' â€“snort_alert\n\nsnort 2015-02-03 01:58:26      38.229.70.4:443   --  192.168.120.154:50195 ** ET CURRENT_EVENTS Tor2Web .onion Proxy Service SSL Cert (1) **\nsnort 2015-02-03 01:58:29      38.229.70.4:443   --  192.168.120.154:50202 ** ET CURRENT_EVENTS Tor2Web .onion Proxy Service SSL Cert (1) **\nsnort 2015-02-03 01:58:32      38.229.70.4:443   --  192.168.120.154:50204 ** ET CURRENT_EVENTS Tor2Web .onion Proxy Service SSL Cert (1) **\n\n```", "```\n(labenv)user@lab:~$ Dshell> decode -d netflow -i eth0\n\n2015-05-15 21:35:31.843922   192.168.161.131 ->    85.239.127.88  (None -> None)  TCP   52007      80     0      0        0        0  5.1671s\n2015-05-15 21:35:31.815329   192.168.161.131 ->    85.239.127.84  (None -> None)  TCP   46664      80     0      0        0        0  5.1976s\n2015-05-15 21:35:32.026244   192.168.161.131 ->    208.91.198.88  (None -> None)  TCP   40595      80     9     25     4797   169277  6.5642s\n2015-05-15 21:35:33.562660   192.168.161.131 ->    208.91.198.88  (None -> None)  TCP   40599      80     9     19     4740    85732  5.2030s\n2015-05-15 21:35:32.026409   192.168.161.131 ->    208.91.198.88  (None -> None)  TCP   40596      80     7      8     3843   121616  6.7580s\n2015-05-15 21:35:33.559826   192.168.161.131 ->    208.91.198.88  (None -> None)  TCP   40597      80     5     56     2564   229836  5.2732s\n\n```", "```\nimport scapy, GeoIP\nfrom scapy import *\n\ngeoIp = GeoIP.new(GeoIP.GEOIP_MEMORY_CACHE)\ndef locatePackage(pkg):\n  src=pkg.getlayer(IP).src\n  dst=pkg.getlayer(IP).dst\n  srcCountry = geoIp.country_code_by_addr(src)\n  dstCountry = geoIp.country_code_by_addr(dst)\n  print src+\"(\"+srcCountry+\") >> \"+dst+\"(\"+dstCountry+\")\\n\"\ntry:\n  while True:\n    sniff(filter=\"ip\", prn=locatePackage, store=0)\nexcept KeyboardInterrupt:\n  print \"\\n\" + \"Scan Aborted!\"\n```", "```\n#!/usr/bin/env python\n\nimport sys\nfrom scapy.all import *\n\ntargetRange = sys.argv[1]\ntargetPort = sys.argv[2]\nconf.verb=0\n\np=IP(dst=targetRange)/TCP(dport=int(targetPort), flags=\"S\")\nans,unans=sr(p, timeout=9)\n\nfor answers in ans:\n        if answers[1].flags == 2:\n                print answers[1].src\n```", "```\n(labenv)user@lab:~$ ./scanner.py 192.168.161.1/24 80\nWARNING: No route found for IPv6 destination :: (no default route?)\nBegin emission:..........\n192.168.161.12\n192.168.161.34\n192.168.161.111\n....\n\n```", "```\n#! /usr/bin/env python\n\nimport sys\nfrom scapy.all import srp,Ether,ARP,conf\n\nif len(sys.argv) != 2:\n        print \"Usage: arp_ping <net> (e.g.,: arp_ping 192.168.1.0/24)\"\n        sys.exit(1)\n\nconf.verb=0\nans,unans=srp(Ether(dst=\"ff:ff:ff:ff:ff:ff\")/ARP(pdst=sys.argv[1]),\ntimeout=9)\n\nprint r\"+------------------+-----------------+\"\nprint r\"|       MAC        |        IP       |\"\nprint r\"+------------------+-----------------+\"\nfor snd,rcv in ans:\n        print rcv.sprintf(r\" %Ether.src% | %ARP.psrc%\")\nprint r\"+------------------+-----------------+\"\n```", "```\n(labenv)user@lab:~$ ./arp_ping.py 192.168.161.131/24\nWARNING: No route found for IPv6 destination :: (no default route?)\n+------------------+-----------------+\n|       MAC        |        IP       |\n+------------------+-----------------+\n 00:50:56:c0:00:08 | 192.168.161.1\n 00:50:56:f5:d3:83 | 192.168.161.2\n 00:50:56:f1:2d:28 | 192.168.161.254\n+------------------+-----------------+\n\n```"]