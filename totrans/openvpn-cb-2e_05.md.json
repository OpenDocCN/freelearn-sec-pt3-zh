["```\n    [root@server]# openvpn --config basic-udp-server.conf\n\n    ```", "```\n            client \n            proto udp \n            remote openvpnserver.example.com \n            port 1194 \n            dev tun \n            nobind \n\n            ca       \"c:/program files/openvpn/config/ca.crt\" \n            cert     \"c:/program files/openvpn/config/client2.crt\" \n            key      \"c:/program files/openvpn/config/client2.key\" \n            tls-auth \"c:/program files/openvpn/config/ta.key\"\" 1 \n\n            remote-cert-tls server \n            script-security 2 \n            up   \"c:\\\\program\\ files\\\\openvpn\\\\scripts\\\\updown.bat\" \n            down \"c:\\\\program\\ files\\\\openvpn\\\\scripts\\\\updown.bat\" \n\n    ```", "```\n            @echo off \n            echo === BEGIN '%script_type%' script === >> \n            c:\\temp\\openvpn.log \n            echo Script name: [%0] >> c:\\temp\\openvpn.log \n            echo Command line argument 1: [%1] >> c:\\temp\\openvpn.log \n            echo Command line argument 2: [%2] >> c:\\temp\\openvpn.log \n            echo Command line argument 3: [%3] >> c:\\temp\\openvpn.log \n            echo Command line argument 4: [%4] >> c:\\temp\\openvpn.log \n            echo Command line argument 5: [%5] >> c:\\temp\\openvpn.log \n            echo Command line argument 6: [%6] >> c:\\temp\\openvpn.log \n            echo Command line argument 7: [%7] >> c:\\temp\\openvpn.log \n            echo Command line argument 8: [%8] >> c:\\temp\\openvpn.log \n            echo Command line argument 9: [%9] >> c:\\temp\\openvpn.log \n            set >> c:\\temp\\openvpn.log \n            echo === END '%script_type%' script === >>                 \n            c:\\temp\\openvpn.log \n\n    ```", "```\n=== BEGIN 'up' script ===  \nScript name: [\"c:\\program files\\openvpn\\scripts\\updown.bat\"]  \nCommand line argument 1: [Local Area Connection 2]  \nCommand line argument 2: [1500]  \nCommand line argument 3: [1541]  \nCommand line argument 4: [10.200.0.2]  \n\nCommand line argument 5: [255.255.255.0]  \n\nCommand line argument 6: [init]  \nCommand line argument 7: []  \nCommand line argument 8: []  \nCommand line argument 9: [] \n...  \nscript_type=up \n[dump of environment variables] \n... \n=== END 'up' script === \n\n```", "```\ndown-pre \n\n```", "```\n#!/bin/bash \n\n# reverse DNS lookup \nserver_name=`host $untrusted_ip | \\ \n  sed -n 's/.*name pointer \\(.*\\)\\./\\1/p' \nif [ \"$server_name\" != \"$common_name\" ] \nthen \n    echo \"Server certificate does not match hostname.\"\n    echo \"Aborting\" \n    exit 1 \nfi \n\n```", "```\n            script-security 2 \n            client-connect    /etc/openvpn/cookbook/example5-2-connect.sh \n\n    ```", "```\n            #!/bin/bash \n\n            if [ \"x$common_name\" = \"xclient2\" ] \n            then \n              hour= /bin/date +\"%H\" \n              if [ $hour -lt 6 -o $hour -gt 22 ] \n              then \n                echo \"disable\" > $1 \n              else \n                echo \"ifconfig-push 10.200.0.200 255.255.255.0\" \n              fi \n            fi  \n\n    ```", "```\n    [root@server]# chmod 755 example5-2-connect.sh\n\n    ```", "```\n    [root@server]# openvpn --config example5-2-server.conf\n\n    ```", "```\n            us=70083 SENT CONTROL [openvpnserver]: 'PUSH_REQUEST' \n            (status=1) \n\n    ```", "```\n             client2/192.168.3.22:57870 MULTI: client has been rejected due \n             to 'disable' directive \n\n    ```", "```\nclient-disconnect /etc/openvpn/cookbook/disconnect.sh \n\n```", "```\n#!/bin.bash \nenv >> /tmp/log \n\n```", "```\ncd /etc/openvpn/cookcook\nclient-connect example5-2-connect.sh \n\n```", "```\n            proto udp \n            port 1194 \n            dev tun \n\n            server 10.200.0.0 255.255.255.0 \n\n            ca       /etc/openvpn/cookbook/ca.crt \n            cert     /etc/openvpn/cookbook/server.crt \n            key      /etc/openvpn/cookbook/server.key \n            dh       /etc/openvpn/cookbook/dh2048.pem \n            tls-auth /etc/openvpn/cookbook/ta.key 0 \n\n            persist-key \n            persist-tun \n            keepalive 10 60 \n\n            topology subnet \n\n            daemon \n            log-append /var/log/openvpn.log \n            script-security 2 \n            learn-address /etc/openvpn/cookbook/example5-3-learn-address.sh \n            push \"redirect-gateway def1\" \n\n    ```", "```\n            #!/bin/bash \n\n            # $1 = action (add, update, delete) \n            # $2 = IP or MAC \n            # $3 = client_common name \n\n            if [ \"$1\" = \"add\" ] \n            then \n                /sbin/iptables -I FORWARD -i tun0 -s $2 -j ACCEPT \n                /sbin/iptables -I FORWARD -o tun0 -d $2 -j ACCEPT \n                /sbin/iptables -t nat -I POSTROUTING -s $2 -o wlan0 -j \n                MASQUERADE \n            elif [ \"$1\" = \"delete\" ] \n            then \n                /sbin/iptables -D FORWARD -i tun0 -s $2 -j ACCEPT \n                /sbin/iptables -D FORWARD -o tun0 -d $2 -j ACCEPT \n                /sbin/iptables -t nat -D POSTROUTING -s $2 -o wlan0 -j \n                MASQUERADE \n            fi \n\n    ```", "```\n    [root@server]# chmod 755 example5-3-learn-address.sh\n    [root@server]# openvpn --config example5-3-server.conf\n\n    ```", "```\n            [root@server]# iptables -L FORWARD -n -v \n            Chain FORWARD (policy ACCEPT 4612K packets, 1761M bytes) \n             pkts bytes target     prot opt in     out     source                       destination \n                0     0 ACCEPT     all  --  *      tun0    0.0.0.0/0                    10.200.0.2 \n                0     0 ACCEPT     all  --  tun0   *       10.200.0.2                0.0.0.0/0 \n\n            [root@server]# iptables -t nat -L POSTROUTING -n -v \n            Chain POSTROUTING (policy ACCEPT 336K packets, 20M bytes) \n             pkts bytes target     prot opt in     out     source                       destination \n                0     0 MASQUERADE  all  --  *      wlan0   10.200.0.2                0.0.0.0/0 \n\n    ```", "```\nuser nobody \ngroup nobody \n\n```", "```\ngroup \nnogroup \n\n```", "```\n            proto udp \n            port 1194 \n            dev tun \n\n            server 10.200.0.0 255.255.255.0 \n\n            ca       /etc/openvpn/cookbook/ca.crt \n            cert     /etc/openvpn/cookbook/server.crt \n            key      /etc/openvpn/cookbook/server.key \n            dh       /etc/openvpn/cookbook/dh2048.pem \n            tls-auth /etc/openvpn/cookbook/ta.key 0 \n\n            persist-key \n            persist-tun \n            keepalive 10 60 \n\n            topology subnet \n\n            user  nobody \n            group nobody  # nogroup on some distros \n            daemon \n            log-append /var/log/openvpn.log \n\n            script-security 2 \n            tls-verify /etc/openvpn/cookbook/example5-4-tls-verify.sh \n\n    ```", "```\n            #!/bin/bash \n\n            [ $# -lt 2 ] && exit 1 \n\n            # if the depth is non-zero , continue processing \n            [ \"$1\" -ne 0 ] && exit 0 \n\n            allowed_cns=`sed 's/ /_/g' $0.allowed` \n            for i in $allowed_cns \n            do \n              [ \"$2\" = \"$i\" ] && exit 0 \n            done \n            # catch-all \n            exit 1 \n\n    ```", "```\n    [root@server]# chmod 755 example5-4-tls-verify.sh\n\n    ```", "```\n    [root@server]# echo \"/C=US/O=Cookbook 2.4/CN=client1\" > \\ \n     /etc/openvpn/cookbook/example5-4-tls-verify.sh.allowed\n\n    ```", "```\n    [root@server]# openvpn --config example5-4-server.conf\n\n    ```", "```\n            CN not found in /etc/openvpn/cookbook/example5-4-tls-\n            verify.sh.allowed, denying access \n            ... openvpnclient1:9007 TLS_ERROR: BIO read tls_read_plaintext \n            error: error:140890B2:SSL \n            routines:SSL3_GET_CLIENT_CERTIFICATE:no certificate returned \n            ... openvpnclient1:9007 TLS Error: TLS object -> incoming \n            plaintext read error \n            ... openvpnclient1:9007 TLS Error: TLS handshake failed \n\n    ```", "```\n#!/bin/bash \n\n[ $# -lt 2 ] && exit 1 \nCA=`echo $2 | sed -n 's/.*\\/CN=\\(.*\\)\\/.*/\\1/p'` \n[ \"$CA\" = \"Cookbook 2.4 CA\" ] && exit 1 \n\n```", "```\n            script-security 2 \n            auth-user-pass-verify /etc/openvpn/cookbook/example5-5-aupv.sh \n            via-file \n\n    ```", "```\n            #!/bin/bash \n\n            # the username+password is stored in a temporary file \n            # pointed to by $1 \n            username=`head -1 $1` \n            password=`tail -1 $1` \n\n            if grep \"$username:$password\" $0.passwd > /dev/null 2>&1 \n            then \n              exit 0 \n            else \n              if grep \"$username\" $0.passwd > /dev/null 2>&1 \n              then \n                echo \"auth-user-pass-verify: Wrong password entered for \n                       user '$username'\" \n              else \n                echo \"auth-user-pass-verify: Unknown user '$username'\" \n              fi \n              exit 1 \n            fi \n\n    ```", "```\n    [server]$ cd /etc/openvpn/cookbook\n    [server]$ echo \"cookbook:koobcook\" > example5-5-\n            aupv.sh.passwd\n\n    ```", "```\n    [root@server]#$ chmod 755 example5-5-aupv.sh\n    [root@server]# openvpn --config example5-5-server.conf\n\n    ```", "```\n            client \n            proto udp \n            remote openvpnserver.example.com \n            port 1194 \n\n            dev tun \n            nobind \n\n            ca       /etc/openvpn/cookbook/ca.crt \n            cert     /etc/openvpn/cookbook/client1.crt \n            key      /etc/openvpn/cookbook/client1.key \n            tls-auth /etc/openvpn/cookbook/ta.key 1 \n\n            remote-cert-tls server \n            auth-user-pass \n\n    ```", "```\n    [root@client]# openvpn --config example5-5-client.conf\n\n    ```", "```\n            Enter Auth Username: cookbook \n            Enter Auth Password: koobcook \n\n    ```", "```\n            Enter Auth Username: janjust \n            Enter Auth Password: whatever \n\n    ```", "```\n            auth-user-pass-verify: Unknown user 'janjust' \n            ... openvpnclient:50834 TLS Auth Error: Auth Username/Password          verification failed for peer \n\n    ```", "```\nauth-user-pass-verify example5-5-aupv.sh via-file \n\n```", "```\nauth-user-pass-verify example5-5-aupv.sh via-env \n\n```", "```\n            script-security 2 \n            cd /etc/openvpn/cookbook \n            up                   example5-6-script.sh \n            route-up             example5-6-script.sh \n            down                 example5-6-script.sh \n            client-connect       example5-7-script.sh \n            client-disconnect    example5-6-script.sh \n            learn-address        example5-6-script.sh \n            tls-verify           example5-6-script.sh \n            auth-user-pass-verify      example5-6-script.sh via-env \n\n    ```", "```\n            #!/bin/bash \n\n            exec >> /tmp/example5-6.log 2>&1 \n            date +\"%H:%M:%S: START $script_type script ===\" \n            echo \"argv = $0 $@\" \n            echo \"user = `id -un`/`id -gn`\" \n            date +\"%H:%M:%S: END $script_type script ===\" \n\n    ```", "```\n    [root@server]# chmod 755 example5-6-script.sh\n    [root@server]# openvpn --config example5-6-server.conf\n\n    ```", "```\n    [root@client]# openvpn --config example5-5-client.conf\n\n    ```", "```\n            13:34:45: START up script === \n            13:34:45: START route-up script === \n            13:36:26: START tls-verify script === \n            18:36:26: START tls-verify script === \n            18:36:27: START user-pass-verify script === \n            18:36:27: START client-connect script === \n            18:36:27: START learn-address script === \n            argv = example5-6-script.sh add 10.200.0.2 client1 \n            18:37:14: START client-disconnect script === \n            18:37:20: START learn-address script === \n            argv = example5-6-script.sh delete 10.200.0.2 \n            18:37:20: START down script === \n\n    ```", "```\n    [root@server]# openvpn --config basic-udp-server.conf\n\n    ```", "```\n            client \n            proto udp \n            remote openvpnserver.example.com \n            port 1194 \n\n            dev tun \n            nobind \n\n            ca       /etc/openvpn/cookbook/ca.crt \n            cert     /etc/openvpn/cookbook/client1.crt \n            key      /etc/openvpn/cookbook/client1.key \n            tls-auth /etc/openvpn/cookbook/ta.key 1 \n\n            remote-cert-tls server \n            up \"/etc/openvpn/cookbook/example5-7-up.sh arg1 arg2\" \n\n    ```", "```\n            #!/bin/bash \n\n            exec >> /etc/openvpn/cookbook/example5-7.log 2>&1 \n            date +\"%H:%M:%S: START $script_type script ===\" \n            echo \"argv = [$0] [$1] [$2] [$3] [$4]\" \n            pstree $PPID \n            date +\"%H:%M:%S: END $script_type script ===\" \n\n    ```", "```\n    [client]$ openvpn --config example5-7-client.conf\n\n    ```", "```\n            ... /etc/openvpn/cookbook/example5-7-up.sh [arguments] \n            ... WARNING: External program may not be called unless '--\n            script-security 2' or higher is enabled. See --help text or \n            man page for detailed info.  \n            ... WARNING: Failed running command (--up/--down): external \n            program fork failed  \n            ... Exiting due to fatal error  \n\n    ```", "```\n                [client]$ openvpn --config example5-7-client.conf  \\\n                   --script-security 2\n\n    ```", "```\n05:25:33: START up script === \nargv = [/etc/openvpn/cookbook/example5-7-up.sh] [argument1] [argument2] [tun0] [1500] \nopenvpn---example5-7-up.s---pstree \n05:25:33: END up script ===  \n\n```", "```\n            push \"route-ipv6 2001:610:120::111:0:1/96\" \n            push \"route-ipv6 2001:610:120::222:0:1/96\" \n\n    ```", "```\n    [root@server]# openvpn --config example5-8-server.conf\n\n    ```", "```\n            client \n            proto udp \n            remote openvpnserver.example.com \n            port 1194 \n\n            dev tun \n            nobind \n\n            ca       /etc/openvpn/cookbook/ca.crt \n            cert     /etc/openvpn/cookbook/client1.crt \n            key      /etc/openvpn/cookbook/client1.key \n            tls-auth /etc/openvpn/cookbook/ta.key 1 \n\n            remote-cert-tls server \n            script-security 2 \n            up \"/etc/openvpn/cookbook/example5-8.sh\" \n\n            route-up \"/etc/openvpn/cookbook/example5-8.sh\" \n\n    ```", "```\n            #!/bin/bash \n\n            exec >> /tmp/example5-10.log 2>&1 \n            date +\"%H:%M:%S: START $script_type script ===\" \n            export | grep ipv6 \n            date +\"%H:%M:%S: END $script_type script ===\"  \n\n    ```", "```\n    [root@client]# chmod 755 example5-8.sh\n    [root@client]# openvpn --config example5-8-client.conf\n\n    ```", "```\n            16:19:58: START up script === \n\n            declare -x ifconfig_ipv6_local=\"2001:610:120::200:0:1001\" \n            declare -x ifconfig_ipv6_netbits=\"112\" \n            declare -x ifconfig_ipv6_remote=\"2001:610:120::200:0:2\" \n            declare -x route_ipv6_gateway_1=\"2001:610:120::200:0:2\" \n            declare -x route_ipv6_gateway_2=\"2001:610:120::200:0:2\" \n            declare -x route_ipv6_network_1=\"2001:610:120::111:0:1/96\" \n            declare -x route_ipv6_network_2=\"2001:610:120::222:0:1/96\"\n            16:19:58: END up script === \n            16:19:58: START route-up script === \n            declare -x ifconfig_ipv6_local=\"2001:610:120::200:0:1001\" \n            declare -x ifconfig_ipv6_netbits=\"112\" \n            declare -x ifconfig_ipv6_remote=\"2001:610:120::200:0:2\" \n            declare -x route_ipv6_gateway_1=\"2001:610:120::200:0:2\" \n            declare -x route_ipv6_gateway_2=\"2001:610:120::200:0:2\" \n            declare -x route_ipv6_network_1=\"2001:610:120::111:0:1/96\" \n            declare -x route_ipv6_network_2=\"2001:610:120::222:0:1/96\" \n            16:19:58: END route-up script === \n\n    ```", "```\n            proto udp \n            port 1194 \n            dev tun \n\n            server 10.200.0.0 255.255.255.0 \n\n            ca       /etc/openvpn/cookbook/ca.crt \n            cert     /etc/openvpn/cookbook/server.crt \n            key      /etc/openvpn/cookbook/server.key \n            dh       /etc/openvpn/cookbook/dh2048.pem \n            tls-auth /etc/openvpn/cookbook/ta.key 0 \n\n            persist-key \n            persist-tun \n            keepalive 10 60 \n\n            topology subnet \n\n            user  nobody \n            group nobody  # nogroup on some distros \n\n            daemon \n            log-append /var/log/openvpn.log \n\n            script-security 2 \n            cd /etc/openvpn/cookbook \n            up \"example5-9.sh\" \n            plugin /usr/lib64/openvpn/plugin/lib/openvpn-down-root.so \n            \"./example5-9.sh --down\" \n\n            suppress-timestamps \n            verb 5 \n\n    ```", "```\n            #!/bin/sh \n            if [ \"$script_type\" = \"up\" ] \n            then \n              touch /tmp/example5-9.tempfile \n            fi \n            if [ \"$1\" = \"--down\" ] \n            then \n              rm /tmp/example5-9.tempfile \n            fi \n\n    ```", "```\n    [root@server]# openvpn --config example5-9-server.conf\n\n    ```", "```\n            PLUGIN_CALL: POST /usr/lib64/openvpn/plugin/lib/openvpn-down-         root.so/PLUGIN_UP status=0 \n            example5-9.sh tun0 1500 1541 10.200.0.1 10.200.0.2 init \n\n    ```", "```\n            PLUGIN_CALL: POST /usr/lib64/openvpn/plugin/lib/openvpn-down-  \n            root.so/PLUGIN_DOWN status=0 \n            PLUGIN_CLOSE: /usr/lib64/openvpn/plugin/lib/openvpn-down-\n            root.so \n\n    ```", "```\n/sbin/ifconfig tun0 0.0.0.0 \nSIOCSIFADDR: Permission denied \nSIOCSIFFLAGS: Permission denied \nLinux ip addr del failed: external program exited with error status: 255 \nPLUGIN_CALL: POST /usr/lib64/openvpn/plugin/lib/openvpn-down-root.so/PLUGIN_DOWN status=0 \nPLUGIN_CLOSE: /usr/lib64/openvpn/plugin/lib/openvpn-down-root.so \n\n```", "```\n            proto udp \n            port 1194 \n            dev tun \n\n            server 10.200.0.0 255.255.255.0 \n\n            ca       /etc/openvpn/cookbook/ca.crt \n            cert     /etc/openvpn/cookbook/server.crt \n            key      /etc/openvpn/cookbook/server.key \n            dh       /etc/openvpn/cookbook/dh2048.pem \n            tls-auth /etc/openvpn/cookbook/ta.key 0 \n\n            persist-key \n            persist-tun \n            keepalive 10 60 \n\n            topology subnet \n\n            user  nobody \n            group nobody  # nogroup on some distros \n\n            daemon \n            log-append /var/log/openvpn.log \n\n            verb 5 \n            suppress-timestamps \n\n            plugin /usr/lib64/openvpn/plugins/openvpn-plugin-auth-pam.so          \"login login USERNAME password PASSWORD\" \n\n    ```", "```\n    [root@server]# openvpn --config example5-10-server.conf\n\n    ```", "```\n            AUTH-PAM: BACKGROUND: INIT service='login' \n            PLUGIN_INIT: POST /usr/lib64/openvpn/plugins/openvpn-plugin-\n            auth-pam.so '/usr/lib64/openvpn/plugins/openvpn-plugin-auth-\n            pam.so] [login] [login] [USERNAME] [password] [PASSWORD]'          intercepted=PLUGIN_AUTH_USER_PASS_VERIFY \n\n    ```", "```\n            ... OpenVPN 2.3.11 x86_64-redhat-linux-gnu [SSL (OpenSSL)] \n            [LZO] [EPOLL] [PKCS11] [MH] [IPv6] built on May 10 2016 \n            ... library versions: OpenSSL 1.0.1e-fips 11 Feb 2013, LZO 2.08 \n            Enter Auth Username: ******** \n            Enter Auth Password: ********  \n\n    ```", "```\nAUTH-PAM: BACKGROUND: received command code: 0 \nAUTH-PAM: BACKGROUND: USER: cookbook \nAUTH-PAM: BACKGROUND: my_conv[0] query='login:' style=2 \nAUTH-PAM: BACKGROUND: name match found, query/match-string ['login:', 'login'] = 'USERNAME' \nAUTH-PAM: BACKGROUND: my_conv[0] query='Password: ' style=1 \nAUTH-PAM: BACKGROUND: name match found, query/match-string ['Password: ', 'password'] = 'PASSWORD' \n... 192.168.3.22:50887 PLUGIN_CALL: POST /usr/lib64/openvpn/plugins/openvpn-plugin-auth-pam.so/PLUGIN_AUTH_USER_PASS_VERIFY status=0 \n... 192.168.3.22:50887 TLS: Username/Password authentication succeeded for username 'cookbook' \n\n```", "```\nlogin USERNAME password PASSWORD \n\n```"]