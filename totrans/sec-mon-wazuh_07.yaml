- en: '7'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vulnerability Detection and Configuration Assessment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A security vulnerability is a weakness in the program code or a configuration
    error in the system, such as Log4Shell, code injection and so on, that allows
    an attacker to directly and uninvitedly access a system or network. The *Hacker-Powered
    Security Report* from HackerOne in 2022 revealed that over 65,000 vulnerabilities
    were discovered by ethical hackers in 2022 alone—a 21% increase from 2021\. We
    know that a threat is an adverse or malicious occurrence that exploits a vulnerability.
    So, why are we so bothered by vulnerabilities? Why can’t we work on threats directly?
    Why can’t we prevent threats from happening? The simplest answer is we can’t control
    threats due to their rapidly evolving nature. We can only control and manage vulnerabilities,
    hence, organizations spend their time and resources on patching security vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: There is a related concept called **security configuration management**. This
    is the process of identifying misconfigurations of a system’s default settings
    and, as a result, bringing down the number of security vulnerabilities in the
    network. Vulnerability monitoring and security configuration management are critical
    for maintaining regulatory compliance such as PCI DSS, NIST, HIPPA, and so on.
    Wazuh has built-in capabilities to look after both vulnerability detection and
    security configuration monitoring.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will get hands-on with vulnerability detection and security
    configuration assessment modules of the Wazuh platform. We will also learn how
    to monitor and maintain regulatory compliance.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to vulnerability detection and security configuration monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PCI DSS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NIST
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HIPPA
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to vulnerability detection and security configuration management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Vulnerability scanning or detection and security configuration management are
    critical to keeping the overall security posture of an organization under control.
    By discovering and fixing vulnerabilities, vulnerability management reduces the
    likelihood of cyberattacks. By ensuring that systems are configured securely,
    security configuration assessment helps to prevent data breaches and unauthorized
    access. Both strategies strengthen the organization’s defenses, reducing risks
    and maintaining trust with stakeholders. Wazuh has modules called Vulnerability
    Detector to fulfill the requirement of vulnerability scanning and **Security Configuration
    Assessment** (**SCA**) to maintain the baseline security configuration of endpoints
    in the network. Let’s understand how Wazuh can deliver both services with its
    built-in features.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability Detector
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **Wazuh Vulnerability Detector** module enables the security team to identify
    operating system and application vulnerabilities on the endpoints being monitored.
    All valid vulnerabilities are named by **Common Vulnerabilities and Exposures**
    (**CVE**). You can view the list of all the vulnerabilities on the [cvedetails.com](http://cvedetails.com)
    website and [nvd.nist.gov](http://nvd.nist.gov). Both sites are managed by the
    MITRE Corporation. Wazuh is natively integrated with different vulnerability feed
    providers, such as Canonical, Debian, Red Hat, Arch Linux, **Amazon Linux Advisories
    Security** (**ALAS**), Microsoft, and the **National Vulnerability Database**
    (**NVD**). Let’s talk about how Wazuh can detect any new vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: How to set up vulnerability detection using Wazuh
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Wazuh agents periodically share a list of installed applications from monitored
    endpoints to the Wazuh server. This inventory of installed applications is stored
    in local SQLite databases on the Wazuh server.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s find out how vulnerability detection works and what needs to be configured
    to enable vulnerability detection in Wazuh. The workings of Wazuh’s vulnerability
    detection can be explained in three steps:'
  prefs: []
  type: TYPE_NORMAL
- en: '`ossec.conf` file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Let’s break this down:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`<wodle name="syscollector">`: A wodle is a module in Wazuh that allows users
    to perform syscollector, Command, Osquery, Docker-Listener, and other tasks.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<interval>1h</interval>`: This represents the interval at which the syscollector
    module runs. In this case, it is set to 1 hour.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<hardware>yes</hardware>`: This talks about monitoring hardware-related information.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<os>yes</os>`: This represents the monitoring of the operating system'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<network>yes</network>`: This represents the monitoring of network-related
    information.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<packages>yes</packages>`: This talks about the monitoring of packages or
    the software of endpoints.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<processes>yes</processes>`: This talks about the monitoring of all processes
    of endpoints.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<synchronization>`: This contains information related to database synchronization.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<max_eps>10</max_eps>`: This specifies the maximum number of events per second
    (EPS) for database synchronization. In this case, it is set to 10 events per second.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ossec.conf` file.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Specify `yes` as the value for the `enabled>` tag for each operating system
    you intend to scan and the Vulnerability Detector module. For example, if you
    want to enable the Vulnerability Detector for the Ubuntu OS, here is what you
    should do:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '**Step 3: Vulnerability** **alerts generated**'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When the version of packages in the inventory database matches the vulnerability
    database (list of CVEs), the package will be labeled as *vulnerable* and the Vulnerability
    Detector module will organize all these vulnerabilities against every agent. You
    can check the vulnerable packages or applications by navigating to the vulnerabilities
    module of the Wazuh manager, as shown in the following screenshot.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 7.1 – Vulnerable packages or applications in Wazuh manager](img/B19549_7_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.1 – Vulnerable packages or applications in Wazuh manager
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: When we enable vulnerability detection for the first time, it performs a baseline
    scan wherein it performs a full scan of the operating system and every package
    installed. After that, it performs a partial scan where it only scans new packages.
  prefs: []
  type: TYPE_NORMAL
- en: Security configuration assessment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **Security Configuration Assessment** (**SCA**) procedure validates that
    every system adheres to a predetermined set of regulations concerning configuration
    settings and authorized application usage.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are a couple of examples:'
  prefs: []
  type: TYPE_NORMAL
- en: Verifying that all the unnecessary open ports (TCP or UDP) are disabled or blocked
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensuring that default credentials have been modified
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are some of the most common approaches to bringing down the vulnerability
    surface of endpoints in the network. Wazuh has a built-in SCA module to scan such
    misconfigured endpoints and recommend remediation steps. The scanning is conducted
    based on the SCA policy file, which contains a set of rules. SCA policies can
    check for the existence of files, directories, registry keys/values, running processes,
    and so on, as illustrated in the following diagram.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.2 – Wazuh SCA check](img/B19549_7_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.2 – Wazuh SCA check
  prefs: []
  type: TYPE_NORMAL
- en: Wazuh SCA checks that every Wazuh agent maintains a local database in which
    it keeps the present status of every SCA check. SCA scan results are shown as
    alerts whenever a particular check changes its status from its last scan.
  prefs: []
  type: TYPE_NORMAL
- en: The Wazuh team and community have built the SCA rules based on the CIS Benchmark.
    **Center for Internet Security** (**CIS**) is a non-profit, community-driven organization,
    responsible for building security controls and benchmarks for numerous operating
    systems and platforms. CIS Controls and CIS Benchmarks are globally recognized
    best practices for security network infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: How to set up Wazuh SCA
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Wazuh SCA policies are derived from the CIS Benchmark. To configure Wazuh for
    SCA, start by turning on SCA policies on Wazuh agents. If you have a custom SCA
    policy, you can push it from the Wazuh manager to all the Wazuh agents. The process
    is explained as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`/var/ossec/ruleset/sca` directory for Linux and the `C:\\Program Files (x86)\\ossec-agent\\ruleset\\sca`
    folder for Windows. You can also create a custom SCA script by utilizing a YML
    file structure with four sections: `policy`, `requirements`, `variables`, and
    `checks`, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Let’s break this down:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`policy` is a required section.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`id`, `file`, `name`, `description`, and `references` are some basic metadata
    for the preceding SCA script.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`requirements` is an optional section.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`variables` is again an optional section. It’s important for simplifying the
    rule creation by creating variables for the path or file name and so on.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`checks` is a required section. This is where we define rules and conditions.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`''r:HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp
    -> PortNumber`: This represents the registry value of the RDP port. In this case,
    the rule checks whether it is `d3d`, which means `3389`.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`agent.conf` file to push the configurations to all Wazuh agents.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To complete the setup, we need to follow these steps:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Enable remote command execution. Set `sca.remote_commands` to `1`:'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: 'agent.conf file:'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE5]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: We have learned how SCA policies are created and how they are pushed to Wazuh
    agents. In the next section, we will learn about PCI DSS compliance and how can
    you use the Wazuh Vulnerability Detector and Security Configuration Assessment
    modules to meet its requirements.
  prefs: []
  type: TYPE_NORMAL
- en: PCI DSS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Credit card fraud is one of the most common types of bank fraud. A record $34.36
    billion was lost to fraud on credit and debit cards in 2022, up almost 5% from
    the previous year ([http://tinyurl.com/4dymuc8d](http://tinyurl.com/4dymuc8d)).
    **Payment Card Industry Data Security Standard** (**PCI DSS**) compliance plays
    an important role because it forces organizations to safely and securely store
    and process payment card information. This protects both companies and their customers
    from data breaches and financial losses. For any organization to become PCI DSS
    compliant, it needs to fulfill 12 requirements drafted by PCI DSS. The Wazuh platform
    plays a crucial role in fulfilling some of the most critical PCI DSS requirements.
    In this chapter, we will address some of the important PCI DSS requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: What is PCI DSS compliance?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Requirements of PCI DSS compliance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wazuh use cases for PCI DSS compliance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is PCI DSS compliance?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**PCI DSS compliance** was developed by Visa, MasterCard, Discover Financial
    Services, JCB International, and American Express in 2004 as a set of security
    standards. This compliance scheme is overseen by the **Payment Card Industry Security
    Standards Council** (**PCI SSC**), with the objective of safeguarding credit and
    debit card transactions from fraudulent activities and data theft. PCI SSC is
    an international body that regulates the payment card industry.'
  prefs: []
  type: TYPE_NORMAL
- en: PCI DSS is a set of twelve requirements and checklists to ensure that cardholder
    data is protected and prevent data breaches in organizations. Organizations complying
    with PCI DSS must meet all 12 requirements, covering the installation and use
    of firewalls, encryption, endpoint security, network security monitoring, log
    management, file integrity, access controls, and so on. Let’s learn about each
    PCI DSS requirement in detail and the corresponding security controls.
  prefs: []
  type: TYPE_NORMAL
- en: Requirements of PCI DSS compliance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are a total of 12 requirements to achieve PCI DSS certification. Each
    requirement has a few sub-requirements. I will explain each of the PCI DSS requirements
    with its main points, security controls, and the tools used to fulfill the corresponding
    requirements, and what Wazuh capabilities or modules can be used to address the
    same requirements.
  prefs: []
  type: TYPE_NORMAL
- en: '**Requirement #1: Install and maintain a firewall configuration to protect**
    **cardholder data**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Main Points** | **Security Controls** **and Tools** | **Wazuh Capabilities**
    |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Install and maintain a firewall configuration to protect cardholder data.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Do not use vendor-supplied defaults for system passwords and other security
    parameters.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Protect stored cardholder data.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Firewall
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Next-gen Firewall
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'IPS/IDS: Suricata, Snort, Cisco Firepower'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Security Configuration Assessment (SCA) module
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Table 7.1 – Security controls and Wazuh modules for PCI DSS Requirement 1
  prefs: []
  type: TYPE_NORMAL
- en: '**Requirement #2: Do not use vendor-supplied defaults when it comes to system
    passwords and other** **security elements**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Main Points** | **Security Controls** **and Tools** | **Wazuh Capabilities**
    |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Encrypt transmission of cardholder data across open, public networks.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Do not store sensitive authentication data after authorization.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Encrypt stored cardholder data.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Two-factor authentication: Google Authenticator, Cisco DUO'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Security Configuration Assessment (SCA)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Vulnerability detection
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Log analysis
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Table 7.2 – Security controls and Wazuh modules for PCI DSS Requirement 2
  prefs: []
  type: TYPE_NORMAL
- en: '**Requirement #3: Protect** **cardholder data**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Main Points** | **Security Controls** **and Tools** | **Wazuh Capabilities**
    |'
  prefs: []
  type: TYPE_TB
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Keep anti-virus software updated and actively running.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Develop and maintain secure systems and applications.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Protect against malware.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| SSL/TLSEncryption solutions: BitLocker |'
  prefs: []
  type: TYPE_TB
- en: Security Configuration Assessment (SCA)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: File integrity monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Table 7.3 – Security controls and Wazuh modules for PCI DSS Requirement 3
  prefs: []
  type: TYPE_NORMAL
- en: '**Requirement #4: Encrypt Transmission of Cardholder Data Across Open,** **Public
    Networks**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Main Points** | **Security Controls** **and Tools** | **Wazuh Capabilities**
    |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Use strong encryption over public networks.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid sending unprotected PANs.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: SSL/TLS Certificates
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Remote Access VPN: Cisco AnyConnect, Palo Alto Global Protect etc'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Security Configuration Assessment (SCA)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Table 7.4 – Security controls and Wazuh modules for PCI DSS Requirement 4
  prefs: []
  type: TYPE_NORMAL
- en: '**Requirement #5: Protect all systems against malware and regularly update
    anti-virus software** **or programs**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Main Points** | **Security Controls** **and Tools** | **Wazuh Capabilities**
    |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Use updated anti-virus software.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure regular updates and scans.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Endpoint protection or anti-virus software: Carbon Black, Kaspersky, CrowdStrike,
    and so on.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Security Configuration Assessment (SCA)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Malware detection
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Rootkit detection
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Threat intelligence
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Log analysis
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Table 7.5 – Security controls and Wazuh modules for PCI DSS Requirement 5
  prefs: []
  type: TYPE_NORMAL
- en: '**Requirement #6: Develop and maintain secure systems** **and applications**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Main Points** | **Security Controls** **and Tools** | **Wazuh Capabilities**
    |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Identify security vulnerabilities.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Protect systems from known vulnerabilities.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Follow secure software development practices.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Security testing tools: Checkmarx, Veracode SonarQube, OWASP ZAP, Burp-Suite,
    Sonatype Nexus, Mend SCA'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Security Configuration Assessment (SCA)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Vulnerability detection
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Log analysis
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Active response,
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: File integrity monitoring
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Table 7.6 – Security controls and Wazuh modules for PCI DSS Requirement 6
  prefs: []
  type: TYPE_NORMAL
- en: '**Requirement #7: Restrict access to cardholder data by business need** **to
    know**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Main Points** | **Security Controls** **and Tools** | **Wazuh Capabilities**
    |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Limit access based on job necessity.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement access control.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Restrict physical access.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Identity and access management: Okta, SailPoint, CyberArk'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Security Configuration Assessment (SCA)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Table 7.7 – Security controls and Wazuh modules for PCI DSS Requirement 7
  prefs: []
  type: TYPE_NORMAL
- en: '**Requirement #8: Identify and authenticate access to** **system components**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Main Points** | **Security Controls** **and Tools** | **Wazuh Capabilities**
    |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Use unique IDs for system access.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Assign access by job role.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Network access controls: Cisco ISE, Aruba ClearPass'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Remote access VPN: Cisco AnyConnect, Palo Alto Global Protect, and so on'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Security Configuration Assessment (SCA)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Log analysis
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: File integrity monitoring
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Table 7.8 – Security controls and Wazuh modules for PCI DSS Requirement 8
  prefs: []
  type: TYPE_NORMAL
- en: '**Requirement #9: Restrict physical access to** **cardholder data**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Main Points** | **Security Controls** **and Tools** | **Wazuh Capabilities**
    |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Employ entry controls for physical access.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Differentiate between personnel and visitors.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Physical access control system
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Surveillance cameras
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Biometric access system
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Security Configuration Assessment (SCA)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Log analysis
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Table 7.9 – Security controls and Wazuh modules for PCI DSS Requirement 9
  prefs: []
  type: TYPE_NORMAL
- en: '**Requirement #10: Track and monitor all access to network resources and**
    **cardholder data**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Main Points** | **Security Controls** **and Tools** | **Wazuh Capabilities**
    |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Monitor all network and data access.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement automated audit trails.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Security Information and Event Management (SIEM) tools: Splunk SIEM, IBM QRadar,
    LogRhythm, and so on'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'IDS solutions: Snort, Suricata'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Log management: Graylog'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Security Configuration Assessment (SCA)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Log data analysis
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Active response
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Table 7.10 – Security controls and Wazuh modules for PCI DSS Requirement 10
  prefs: []
  type: TYPE_NORMAL
- en: '**Requirement #11: Regularly test security systems** **and processes**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Main Points** | **Security Controls** **and Tools** | **Wazuh Capabilities**
    |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Conduct regular security tests.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Perform internal and external vulnerability scans.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Vulnerability scanning: Tenable, Qualys, Rapid7, and so on'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Penetration testing: Metasploit framework, Burp-Suite'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Security Configuration Assessment (SCA)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Vulnerability detection
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Log data analysis
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Active response
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Table 7.11 – Security controls and Wazuh modules for PCI DSS Requirement 11
  prefs: []
  type: TYPE_NORMAL
- en: '**Requirement #12: Regularly test security systems** **and processes**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Main Points** | **Security Controls** **and Tools** | **Wazuh Capabilities**
    |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs:
  - PREF_IND
  type: TYPE_TB
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Establish and disseminate a security policy.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure personnel awareness of security policy.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Governance risk and compliance software: RSA Archer'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Security awareness platform: KnowBe4, Cofence PhishMe, and so on.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Security Configuration Assessment (SCA)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Table 7.12 – Security controls and Wazuh modules for PCI DSS Requirement 12
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to Wazuh modules to address most of the PCI DSS requirements,
    **SCA** and Vulnerability Detector are the most common Wazuh modules listed in
    the preceding tables. Let’s understand the use cases of both Wazuh modules to
    fulfill some of the important PCI DSS requirements as explained in the next section
    onward.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability detection use cases for PCI DSS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As we learned in the *Introduction to vulnerability detection and security
    configuration management* section, Wazuh detects vulnerabilities in the applications
    or packages installed on agents using the Vulnerability Detector module. The vulnerability
    scanning or checks are performed by integrating vulnerability feeds from Debian,
    Red Hat, Arch Linux, **Amazon Linux Advisories Security** (**ALAS**), Microsoft,
    the National Vulnerability Database, and many more. Wazuh Vulnerability Detector
    can be confidently used for Requirement 6 and Requirement 11 of PCI DSS compliance.
    Use cases for PCI DSS requirements that the vulnerability detection module can
    fulfill are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Use case #1: Ensure the detection of and address security vulnerabilities on
    Windows machines'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'As per PCI DSS requirement 6, we need to ensure that we detect and address
    security vulnerabilities. In this use case, we will focus on a Windows machine
    to detect and address vulnerabilities using a Wazuh module. We can schedule a
    Vulnerability Detector scan to discover security vulnerabilities. This will require
    the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set up the syscollector wodle on the endpoint
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enable Vulnerability Detector on the Wazuh server and restart
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Visualize the alerts
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To set up the lab environment to run vulnerability detection on a Windows machine,
    you require the following systems:'
  prefs: []
  type: TYPE_NORMAL
- en: Windows machine (with the Wazuh agent installed)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wazuh server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set up the syscollector wodle on the Windows endpoint
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The Wazuh syscollector wodle manages the information related to hardware, applications,
    the operating system, and so on. To customize our Windows endpoint, add the syscollector
    wodle in the `ossec.config` file located at `/var/ossec/etc` in the Wazuh agent,
    as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Enable Vulnerability Detector on the Wazuh server and restart
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To enable vulnerability detection for the Windows platform, you need to edit
    the `ossec.conf` file in the Wazuh server located at `/var/ossec/etc`. You are
    required to set `<enabled>` tab to `yes` under the `Windows OS vulnerabilities`
    section, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Restart and test the Wazuh manager:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Once the Wazuh manager is finished with the restart, you can see the vulnerability
    alerts on the **Modules** > **Vulnerabilities** > **Events** tab. The top two
    vulnerabilities are about the Google Chrome application on the Windows machine.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Once you select Google Chrome Vulnerability CVE-2023-5472, the Wazuh dashboard
    gives an overview of the alert and the current status of the agent. To know more
    about all the active CVEs, including information on the affected software, severity
    rating, links to adversaries, and patches released by the vendor, you can visit
    [cvedetails.com](http://cvedetails.com). This website is managed by the SecurityScorecard
    organization.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.3 – Vulnerability detection for Google Chrome CVE-2023-5472](img/B19549_7_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.3 – Vulnerability detection for Google Chrome CVE-2023-5472
  prefs: []
  type: TYPE_NORMAL
- en: 'Use case #2: Identify, prioritize, and address security vulnerabilities regularly'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As per *PCI DSS Requirement 11*, we need to identify, prioritize, and address
    security vulnerabilities. You can apply a filter with `severity=Critical` and
    you can see all Windows vulnerabilities with critical severity.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.4 – Finding critical vulnerabilities with Vulnerability Detector](img/B19549_7_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.4 – Finding critical vulnerabilities with Vulnerability Detector
  prefs: []
  type: TYPE_NORMAL
- en: Security configuration assessment use cases for PCI DSS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Security configuration assessment is an essential Wazuh module, helping you
    to address multiple PCI DSS requirements. In fact, many of the PCI DSS requirements
    can be fulfilled by using the Wazuh SCA module. We will address two important
    PCI DSS requirements using some sample SCA scripts. Please note, both the mentioned
    use cases are already present in the `cis_win2012r2.yml` file located at `C:\\Program`
    `Files (x86)\\ossec-agent\\ruleset\\sca`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Use case #1: Do not display the last user name on interactive login'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*PCI DSS Requirement 2* requires enabling only necessary services, protocols,
    and daemons, and removing or disabling all unnecessary functionality. Let’s audit
    a specific service on Windows Server 2012 R2\. We will run an SCA check on whether
    the account name of the last user to log on to the computer will be displayed
    on each computer’s respective Windows logon screen. It’s recommended the feature
    is disabled.'
  prefs: []
  type: TYPE_NORMAL
- en: In the *Security configuration assessment* section, we already covered how to
    create a custom SCA and the components of each SCA script (policy, requirements,
    checks). Following is a PCI DSS requirement use case wherein we check if `cis_win2012r2.yml`
    file located at `C:\\Program` `Files (x86)\\ossec-agent\\ruleset\\sca`.
  prefs: []
  type: TYPE_NORMAL
- en: 'One of the sub-requirements under *PCI DSS Requirement 2* requires disabling
    all unwanted services, protocols, daemons, and functionalities. In this use case,
    we will run an SCA check to ensure *‘Do not display last user name in the interactive
    Windows logon*’ is enabled on the Windows machine. The SCA script has already
    been built by the Wazuh team and compiled by them in the `cis_win2012r2.yml` file
    located at `C:\\Program Files (x86)\\ossec-agent\\ruleset\\sca`. This will require
    the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Reviewing the SCA policy
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Visualizing alerts
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'In order to complete the use case of performing an SCA check for *Do not display
    last user name on Interactive login,* the requirements are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Windows machine (with the Wazuh agent installed)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wazuh server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reviewing the SCA policy
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'We don’t need to make any changes in this step. Wazuh has a built-in SCA policy
    for *‘Interactive logon: Do not display last user name’*, set to `C:\\Program
    Files (x86)\\ossec-agent\\ruleset\\sca` file as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Here, we see the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`condition` is set to `all`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`r:HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System`
    represents the registry value by using the `r` parameter at the beginning. In
    our case, we have set the registry value to `1`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualizing the alerts
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To verify whether our Windows Server 2012 R2 passed or failed the SCA check,
    you can go to **Modules** > **Security configuration assessment** and then select
    the agent. As per the SCA alert shown here, the check has failed.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.5 –SCA check – Do not display last user name on Interactive login](img/B19549_7_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.5 –SCA check – Do not display last user name on Interactive login
  prefs: []
  type: TYPE_NORMAL
- en: In order to ensure our Windows machine passes the SCA check for `HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System
    -> DontDisplayLastUserName` registry location and set it to `1`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Use case #2: Disable anonymous enumeration of SAM accounts and shares'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: According to *PCI DSS Requirement 7*, businesses should restrict access to the
    cardholder data environment based on a business need-to-know basis. This simply
    means that only authorized personnel (engineer/technician/manager) should be able
    to access cardholder-related data, and that access should be limited based on
    the job responsibilities and business requirements. One such use case for a Windows
    machine is to disable the anonymous enumeration of SAM accounts and shares. `cis_win2012r2.yml`
    file located at `C:\\Program Files (x86)`\\ossec-agent\\ruleset\\sca in the Windows
    agent.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this use case:'
  prefs: []
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reviewing the SCA policy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualizing the alerts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'In order to complete the use case to perform an SCA check for **Disable Anonymous
    enumeration of SAM accounts and shares**, the requirements are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Kali Linux (with the Wazuh agent installed)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wazuh server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reviewing the SCA policy
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The following example is a use case where we ensure that anonymous users can’t
    scan SAM accounts and shares. Enabling this policy setting will prevent anonymous
    users from enumerating network share names and domain account user names on the
    systems in your environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Here, we see the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`condition` is set to `all`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`r:HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa` represents the
    registry value of `HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa`. In
    our case, it is set to `1`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualizing the alerts
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To verify whether our Windows Server 2012 R2 passed or failed the SCA check,
    you can go to **Modules** > **Security Configuration Assessment** and then select
    the agent. You can verify whether the SCA check is passed or failed as shown in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.6 – SCA check – Disable Anonymous enumeration of SAM accounts and
    shares](img/B19549_7_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.6 – SCA check – Disable Anonymous enumeration of SAM accounts and shares
  prefs: []
  type: TYPE_NORMAL
- en: As per the SCA output, the check failed because the registry value of `HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa`
    is not set to `1` on our Windows machine. This means an attacker could list account
    names and shared resources and use that information to perform a social engineering
    attack.
  prefs: []
  type: TYPE_NORMAL
- en: The remediation is shown in the above diagram and requires you to set the registry
    value to 1, then our SCA check will be marked as passed.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we have learned about PCI DSS compliance and its requirements
    and utilized Wazuh’s Vulnerability Detector and SCA modules to fulfill some of
    the popular PCI Compliance requirements. In the next section, we will learn about
    NIST 800-53 controls and how Wazuh modules can be used for some of the NIST 800-53
    controls.
  prefs: []
  type: TYPE_NORMAL
- en: NIST 800-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Over 30,000 cyber security incidents were reported to federal agencies in the
    United States in the fiscal year 2022-23 – a five percent reduction from the year
    before ([http://tinyurl.com/2s3msja8](http://tinyurl.com/2s3msja8)). All federal
    agencies need to be compliant with the **Federal Information Security Management
    Act** (**FISMA**). FISMA is a federal law that requires US government agencies
    to create, document, and implement an information security and protection program.
    **NIST 800-53** is a cybersecurity standard and guidelines that help federal agencies
    meet the requirements set by FISMA. The NIST 800-53 framework is developed by
    the National Institute of Standards in Technology. To summarize, the NIST 800-53
    framework helps federal agencies to become FISMA compliant. In this section, we
    will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: What is the NIST 800-53 framework?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: List of control families in the NIST 800-53 framework
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vulnerability detection use case
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is the NIST 800-53 framework?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The NIST 800-53 framework is a cybersecurity standard and compliance framework
    developed by the **National Institute of Standards and Technology** (**NIST**).
    It provides a set of guidelines on the security controls needed to build secure
    and resilient information systems.
  prefs: []
  type: TYPE_NORMAL
- en: What is the goal of NIST 800-53?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The goals of NIST Special Publication 800-53 are the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Offer a thorough framework**: The goal of NIST 800-53 is to provide an extensive
    and organized framework for choosing and putting security policies in place to
    safeguard information systems'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enhance information security**: By implementing a set of security controls
    and best practices, its main objective is to improve the security and privacy
    of federal information systems and organizations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Encourage risk management**: NIST 800-53 advises businesses to recognize,
    evaluate, and control cybersecurity risks in accordance with their particular
    requirements and threat environments'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Facilitate compliance and regulation**: It acts as a guide for companies
    doing business with the United States government and assists firms in conforming
    to federal rules and compliance obligations, such as FISMA'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Encourage continuous improvement**: Organizations can adjust and improve
    their cybersecurity procedures over time as a result of NIST 800-53’s evolution
    to address new threats and technology'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The NIST 800-53 framework provides a number of different controls across multiple
    security and system access control families. The controls are then organized into
    20 security and control families.
  prefs: []
  type: TYPE_NORMAL
- en: List of control families in the NIST 800-53 framework
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: NIST 800-53 controls are categorized into 20 different security and control
    families. Each control family has a unique ID and multiple sub-controls. In the
    following table, we will focus on a wider control family only. Additionally, I’m
    adding two additional columns to showcase enterprise tools and Wazuh capabilities
    (modules) available for each NIST 800-53 control.
  prefs: []
  type: TYPE_NORMAL
- en: '| **ID** | **Family Name** | **Examples** **of Controls** | **Wazuh Capabilities**
    |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| AC | Access Control | Account management and monitoring; least privilege;
    separation of duties |'
  prefs: []
  type: TYPE_TB
- en: Wazuh log data analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| AT | Awareness and Training | User training on security threats; technical
    training for privileged users |'
  prefs: []
  type: TYPE_TB
- en: Log data analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| AU | Audit and Accountability | Content of audit records; analysis and reporting;
    record retention |'
  prefs: []
  type: TYPE_TB
- en: None
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| CA | Assessment, Authorization, and Monitoring | Connections to public networks
    and external systems; penetration testing |'
  prefs: []
  type: TYPE_TB
- en: Vulnerability detector
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: File integrity monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| CM | Configuration Management | Authorized software policies; configuration
    change control |'
  prefs: []
  type: TYPE_TB
- en: SCA
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| CP | Contingency Planning | Alternate processing and storage sites; business
    continuity strategies; testing |'
  prefs: []
  type: TYPE_TB
- en: None
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| IA | Identification and Authentication | Authentication policies for users,
    devices, and services; credential management |'
  prefs: []
  type: TYPE_TB
- en: SCA
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| IP | Individual Participation | Consent and privacy authorization |'
  prefs: []
  type: TYPE_TB
- en: None
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| IR | Incident Response | Incident response training, monitoring, and reporting
    |'
  prefs: []
  type: TYPE_TB
- en: Active response
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Threat intelligence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| MA | Maintenance | System, personnel, and tool maintenance |'
  prefs: []
  type: TYPE_TB
- en: Log data analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| MP | Media Protection | Access, storage, transport, sanitization, and use
    of media |'
  prefs: []
  type: TYPE_TB
- en: Log data analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| PA | Privacy Authorization | Collection, use, and sharing of personally identifiable
    information (PII) |'
  prefs: []
  type: TYPE_TB
- en: None
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| PE | Physical and Environment Protection | Physical access; emergency power;
    fire protection; temperature control |'
  prefs: []
  type: TYPE_TB
- en: None
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| PL | Planning | Social media and networking restrictions; defense-in-depth
    security architecture |'
  prefs: []
  type: TYPE_TB
- en: None
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| PM | Program Management | Risk management strategy; enterprise architecture
    |'
  prefs: []
  type: TYPE_TB
- en: None
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| PS | Personnel Security | Personnel screening, termination, and transfer;
    external personnel; sanctions |'
  prefs: []
  type: TYPE_TB
- en: None
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| RA | Risk Assessment | Risk assessment; vulnerability scanning; privacy impact
    assessment |'
  prefs: []
  type: TYPE_TB
- en: None
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| SA | System and Services Acquisition | System development lifecycle; acquisition
    process; supply chain risk management |'
  prefs: []
  type: TYPE_TB
- en: None
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| SC | System and Communications Protection | Application partitioning; boundary
    protection; cryptographic key management |'
  prefs: []
  type: TYPE_TB
- en: Threat intelligence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Active response
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| SI | System and Information Integrity | Flaw remediation; system monitoring
    and alerting |'
  prefs: []
  type: TYPE_TB
- en: File integrity monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Active response
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Table 7.13 – List of NIST 800-53 framework controls and Wazuh capabilities
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability detection use cases for NIST 800-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Vulnerability Detector module of Wazuh helps to discover the vulnerabilities
    of different operating systems. As per the *List of NIST 800-53 framework controls
    and Wazuh capabilities* table, the *Assessment, Authorization, and Monitoring*
    control family, with control ID *CA*, uses the Vulnerability Detector module of
    the Wazuh platform.
  prefs: []
  type: TYPE_NORMAL
- en: 'Use case: Detect vulnerabilities on Debian-based endpoints'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In this use case of vulnerability detection for the NIST 800-53 *Assessment,
    Authorization, and Monitoring*, control family, we will set up the Wazuh platform
    to discover vulnerabilities on a Kali Linux machine. Kali Linux is a Debian-based
    Linux operating system. We will cover the following points in this section:'
  prefs: []
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Setting up the syscollector wodle on endpoint
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enabling Vulnerability Detector on the Wazuh server and restarting
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Visualizing the alerts
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'In order to complete the use case to perform vulnerability detection on a Kali
    Linux machine, the requirements are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Kali Linux machine (with the Wazuh agent installed)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wazuh server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up the syscollector wodle on endpoint
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Wazuh’s syscollector module is responsible for collecting information about
    the Wazuh agent such as hardware, the operating system, installed applications,
    packages, and so on. To customize our Debian endpoint, add the syscollector wodle
    in the `ossec.config` file located at `/var/ossec/etc` in the Wazuh agent:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Enabling Vulnerability Detector on the Wazuh server and restarting
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To enable vulnerability detection for a Debian-based platform, you need to
    edit the `ossec.conf` file in the Wazuh server located at `/var/ossec/etc`. You
    are required to set `<enable>` tab to `yes` under the `Debian OS vulnerabilities`
    section, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Note the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`<os allow="Kali GNU/Linux-2023">buster</os>` indicates what operating system
    should be allowed to be monitored for vulnerability scanning. In this case, it
    is Kali GNU/Linux-2023'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Next, restart the Wazuh manager:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Visualizing the alerts
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: To visualize the vulnerability events, navigate to the **Vulnerabilities** module
    in the Wazuh manager and check for alerts.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.7 – Visualizing vulnerability events of Kali Linux](img/B19549_7_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.7 – Visualizing vulnerability events of Kali Linux
  prefs: []
  type: TYPE_NORMAL
- en: SCA use cases for NIST 800-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Wazuh SCA module scans monitored endpoints to see whether they fulfill secure
    configuration and hardening standards. Let’s cover a use case of Wazuh SCA to
    support NIST 800-53 controls. We can use Wazuh’s SCA module to address multiple
    NIST 800-53 control requirements. One such use case will be covered in this section.
  prefs: []
  type: TYPE_NORMAL
- en: Use case
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We need to change the default SSH port. The `sca_unix_audit.yml` file located
    at `C:\\Program Files (x86)\\ossec-agent\\ruleset\\sca`. The following topics
    will be covered in this use case:'
  prefs: []
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reviewing the SCA policy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualizing the alerts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In order to complete the use case to perform an SCA check for *Change the default
    SSH port*, the requirements are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Kali Linux (with the Wazuh agent installed)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wazuh server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reviewing the SCA policy
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We are not required to make any changes to this set. Wazuh has already built
    tons of SCA policies based on CIS Benchmarks for multiple operating systems. The
    SCA policy named `sca_unix_audit.yml` will be automatically installed while downloading
    the Wazuh agent packages. To view the SCA policy for *SSH Hardening: Port Should
    not be 22*, you can open the `sca_unix_audit.yml` file located at `/var/ossec/ruleser/sca`
    in the Kali Linux Wazuh agent. You can find the required SCA policy under `rule
    id: 3000`, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Note the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Condition` is `all`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Rules: ''f:$sshd_file -> !r:^# && r:Port && !r:\s*\t*22$` checks for non-command
    lines indicating the SSH port, excluding lines representing default port 22'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualizing the alerts
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To visualize the SCA check for *SSH Hardening: Port should not be 22*, you
    can navigate to the SCA module on the Wazuh manager and search for *SSH Hardening:
    Port should not be 22*. You should see the result as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.8 – Visualizing SCA check for SSH hardening](img/B19549_7_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.8 – Visualizing SCA check for SSH hardening
  prefs: []
  type: TYPE_NORMAL
- en: 'Note the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Title**: **SSH Hardening: Port should not be 22** represents the name of
    the SCA check.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Target**: **/etc/ssh/sshd_config** is the target file location that SCA will
    validate for the SSH configuration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Result**: **Failed** represents the status of the SCA check. In this case,
    it is failed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Remediation**: **Change the Port option value in the sshd_config file** explains
    how to modify the target configuration file if the SCA check fails.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Compliance**: **nist_800_53** represents the list of regulatory compliance
    meeting this requirement.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this section, we have learned about NIST 800-53 controls and use cases of
    the Vulnerability Detector and SCA modules to fulfill the requirements of NIST
    800-53 controls. In the next section, we will learn about HIPAA compliance in
    detail.
  prefs: []
  type: TYPE_NORMAL
- en: HIPAA
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The HHS **Office for Civil Rights** (**OCR**) data leak portal says that there
    were about 295 breaches in the healthcare sector in just the first half of 2023\.
    In the first half of the year, healthcare data leaks were linked to more than
    39 million people. The **Health Insurance Portability and Accountability Act**
    (**HIPAA**) is important for many reasons, but the main one is to keep healthcare
    data private and secure. Wazuh can help health organizations to maintain HIPPA
    compliance using its in-built capabilities. In this chapter, we will cover the
    following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: HIPAA compliance rules
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HIPAA security rules
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vulnerability Detector use cases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SCA use cases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is HIPAA compliance?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**HIPAA** establishes protection standards for sensitive patient health information.
    HIPAA violations are mainly related to unauthorized access, use, or disclosure
    of **Protected Health** **Information** (**PHI**).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Any personally identifiable health information that is communicated or maintained
    electronically, on paper, or orally is considered PHI. Any information pertaining
    to a person’s past, present, or future health, as well as specifics about medical
    treatments and payment information that could be used to identify the individual
    is included in **Health Information** (**HI**). PHI examples are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Social Security number
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Name
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dates of birth, death or treatment, and other dates relating to patient care
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Photographs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Contact information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Medical record numbers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HIPAA security rules
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The HIPAA Security Rule checklist includes criteria for ensuring the confidentiality,
    integrity, and availability of PHI created, received, maintained, or transmitted
    electronically (ePHI). The HIPAA security rules consist of five sections:'
  prefs: []
  type: TYPE_NORMAL
- en: '**General rules**: These lay the groundwork for HIPAA compliance, highlighting
    the importance of privacy and security policies, processes, and worker training'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Administrative safeguards**: These concentrate on organizational safeguards
    for ePHI, such as risk assessments, security management, and employee training'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Physical safeguards**: These cover workstation security, facility security
    measures, and access controls as they relate to the physical security of data
    centers and equipment'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Technical safeguards**: These encompass technical security protocols, including
    audit controls, encryption, and access controls, which are implemented to safeguard
    electronic health'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Organizational requirements**: These focus on the necessity of contracts,
    agreements, and oversight of business partners’ HIPAA compliance and are related
    to requirements while working with them'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As per the scope of this book, we will focus on two categories of HIPAA security
    rules: administrative safeguards and technical safeguards.'
  prefs: []
  type: TYPE_NORMAL
- en: Administrative safeguards
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The administrative safeguards, which mandate the designation of a security officer
    in charge of workforce training, risk analysis, risk and vulnerability implementation,
    IT continuity supervision, and business associate agreements, form the foundation
    of security rule compliance.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Standards** | **Description** | **Wazuh Capabilities** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Security Management Process |'
  prefs: []
  type: TYPE_TB
- en: Risk analysis to detect vulnerabilities regularly
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing risk minimization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability detection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuration assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Assign Security Responsibility |'
  prefs: []
  type: TYPE_TB
- en: Designation of a HIPAA security officer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: They can also serve as privacy officer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|  |'
  prefs: []
  type: TYPE_TB
- en: '| Workforce Security |'
  prefs: []
  type: TYPE_TB
- en: Implement access control for employees
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure monitoring for role change and termination access
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Log data analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: File integrity monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Information Access Management |'
  prefs: []
  type: TYPE_TB
- en: Restrict ePHI access to “covered” organizations’ workforces
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Block parent and connected entities from accessing ePHI
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: File integrity monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuration assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Malware detection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Security Awareness and Training |'
  prefs: []
  type: TYPE_TB
- en: Conduct employee security awareness training
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Include security reminders and password guidance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Log data analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Action response
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Security Incident Procedures |'
  prefs: []
  type: TYPE_TB
- en: Implement policies and procedures for incident reporting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Not limited to cybersecurity incidents
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Log data analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Active response
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Contingency Plan |'
  prefs: []
  type: TYPE_TB
- en: Emergency response policies, including data backup and recovery
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Routine drill exercise
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| None |'
  prefs: []
  type: TYPE_TB
- en: '| Periodic Evaluations |'
  prefs: []
  type: TYPE_TB
- en: Periodic review of policies, procedures, and measures
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Configuration assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Table 7.14 – Security controls and Wazuh modules for administrative safeguards
    of HIPAA compliance
  prefs: []
  type: TYPE_NORMAL
- en: Technical safeguards
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The HIPAA technical safeguards ensure that people accessing ePHI are who they
    say they are, do what they should, and correct issues caused by accidental or
    malicious actions as soon as possible.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Standards** | **Description** | **Wazuh Capabilities** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Access Control |'
  prefs: []
  type: TYPE_TB
- en: Restrict ePHI access
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure authorized users have access rights
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Log data analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuration assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Audit Controls |'
  prefs: []
  type: TYPE_TB
- en: Implement system activity recording and analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Store ePHI access and modification audit logs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Log data analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Integrity Controls |'
  prefs: []
  type: TYPE_TB
- en: Prevent ePHI modification
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implement data integrity checks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: File integrity monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Transmission Security |'
  prefs: []
  type: TYPE_TB
- en: Transmit ePHI encrypted
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Protect electronic communication
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: File integrity monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuration assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Person or Entity Authentication |'
  prefs: []
  type: TYPE_TB
- en: Verify ePHI users’ identities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Secure system access with rigorous authentication
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Log data analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Table 7.15 – Security controls and Wazuh modules for technical safeguards of
    HIPAA compliance
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability Detector use cases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Vulnerability detection plays a critical role in the security management process
    standard under administrative safeguards. It is about risk analysis and thorough
    assessment of the potential risks and vulnerabilities. Wazuh’s Vulnerability Detector
    module can be used to address multiple HIPAA requirements under administrative
    and technical safeguards.
  prefs: []
  type: TYPE_NORMAL
- en: 'Use case: Detect vulnerabilities on Ubuntu endpoints'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In this use case of vulnerability detection for HIPAA compliance, we are addressing
    the *Security Management Process* standard under administrative safeguards. We
    will set up the Wazuh platform to discover vulnerabilities on an Ubuntu machine.
    We will cover the following points in this section:'
  prefs: []
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up the syscollector wodle on endpoint
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enabling Vulnerability Detector on the Wazuh server and restarting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualizing the alerts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'In order to complete the use case to perform vulnerability detection on an
    Ubuntu machine, the requirements are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Ubuntu machine (with the Wazuh agent installed)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wazuh server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up the syscollector wodle on endpoint
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To customize our Ubuntu endpoint, add the `syscollector` wodle in the `ossec.config`
    file located at `/var/ossec/etc` in the Wazuh agent, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Enabling Vulnerability Detector on the Wazuh server and restarting
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To enable vulnerability detection for the Ubuntu operating system, you need
    to edit the `ossec.conf` file on the Wazuh server located at `/var/ossec/etc`.
    You are required to set the `<enable>` tab to `yes` under the *Ubuntu OS vulnerabilities*
    section, as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, restart the Wazuh manager:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Visualizing the alerts
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To visualize the vulnerability events, navigate to the **Vulnerabilities**
    module in the Wazuh manager and check the alerts, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.9 – Visualizing the CVE-2021-41617 Ubuntu vulnerability on the Wazuh
    manager](img/B19549_7_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.9 – Visualizing the CVE-2021-41617 Ubuntu vulnerability on the Wazuh
    manager
  prefs: []
  type: TYPE_NORMAL
- en: SCA use case
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this use case, we will go through SCA scripts on Ubuntu machines. As we have
    already learned, the SCA feature conducts scans on the monitored endpoints to
    ascertain whether they are properly configured and hardened. These scans evaluate
    the endpoint’s setup by comparing the endpoint’s actual configuration to the settings
    in a policy file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Use case: Ensure audit tools are 755 or more restrictive'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The *HIPAA 164.308(a)(3)(i)* and *164.308(a)(3)(ii)(A)* sections talk about
    administrative safeguards. All members of a workforce should have appropriate
    access to electronic PHI to prevent unauthorized access. It is primarily concerned
    with controlling and managing access to PHI by employees. Let’s run SCA checks
    on an Ubuntu 22.04 machine. In this use case, we will check whether auditd and
    audit logs are protected with sufficient permissions:'
  prefs: []
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reviewing the SCA policy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualizing the alerts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'In order to complete the use case to perform an SCA check to *Ensure Audit
    tools are 755 or more restrictive*, the requirements are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Ubuntu machine (with the Wazuh agent installed)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Wazuh server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reviewing the SCA policy
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The SCA policy file called `cis_ubuntu22-04.yml` gets installed while installing
    the Wazuh agent package on an Ubuntu machine. This file consists of all the SCA
    policies related to Ubuntu version 22.04\. To view the SCA policy for `Ensure
    audit tools are 755 or more restrictive`, you can open the `cis_ubuntu22-04.yml`
    file located at `/var/ossec/ruleser/sca` in the Ubuntu Wazuh agent. You can find
    the required SCA policy under `rule id: 28610`, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Note the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '`condition` is set to `none`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `'c:stat -c "%n %a" /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace
    /sbin/auditd /sbin/aug>` rule checks for the permissions of auditd and related
    permissions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualizing the alerts
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'To visualize the SCA check for `Ensure audit tools are 755 or more restrictive`,
    you can navigate to the SCA module on the Wazuh manager and search for `Ensure
    audit tools are 755 or more restrictive`. You should see the result shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.10 – SCA check – Ensure audit tools are 755 or more restrictive](img/B19549_7_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7.10 – SCA check – Ensure audit tools are 755 or more restrictive
  prefs: []
  type: TYPE_NORMAL
- en: 'Note the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Title**: **Ensure audit tools are 755 or more restrictive** represents the
    name of the SCA check.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Target**: **/etc/ssh/sshd_config** is the target file location that SCA will
    validate for the SSH configuration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/``sbin` directory.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**hipaa: 164.308(a) (3)(1), 164.308(a)(3 (MA).164.312(a)(1**): HIPAA requirements
    under *164.308(a)(3)(i)* emphasize conducting risk analysis, while *164.312(a)(1)*
    focuses on implementing access controls to safeguard **electronic protected health**
    **information** (**ePHI**).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Result**: **Passed** represents the status of the SCA check.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With this, we have come to the end of the chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter has shed light on the critical role of the Vulnerability Detector
    and SCA modules of the Wazuh platform. We have learned how to configure vulnerability
    detection with different customizations of packages, operating systems, applications,
    and so on. We also went through the workings of the Wazuh SCA module and how to
    create a custom SCA script from scratch. We learned how to fulfill requirements
    of the regulatory compliance framework such as PCI DSS, NIST 800-53 Controls,
    and HIPAA using the Vulnerability Detector and SCA modules.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will cover some important rules and custom Wazuh rules
    for different security use cases.
  prefs: []
  type: TYPE_NORMAL
