["```\n\n    $ sudo lsblk\n    NAME           MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINTS\n    sda            8:0    0 476.9G  0 disk\n    ├─sda1         8:1    0     2M  0 part\n    ├─sda2         8:2    0     3G  0 part  /boot\n    ├─sda3         8:3    0    55G  0 part  /\n    ├─sda4         8:4    0    64G  0 part  [SWAP]\n    ├─sda5         8:5    0    40G  0 part  /var\n    ├─sda6         8:6    0    40G  0 part  /home\n    └─sda78:7    0   500M  0 part\n      └─luks-8e1fb810-b471-491a-adcf-32048a0eb534 253:0    0   484M  0 crypt /data3\n    zram0          252:0    0     8G  0 disk  [SWAP]\n    ```", "```\n\n    $ sudo blkid /dev/sda7\n    /dev/sda7: UUID=\"8e1fb810-b471-491a-adcf-32048a0eb534\" TYPE=\"crypto_LUKS\" PARTUUID=\"b5906739-06d2-44d2-8770-17f2ffd75212\"\n    ```", "```\n\n    # dd if=/dev/random of=/etc/luks-keyfile \\\n    bs=1024 count=4\n    4+0 records in\n    4+0 records out\n    luks-keyfile file as root:\n\n    ```", "```\n\n    # restorecon -vvRF /etc/luks-keyfile\n    luks-keyfile file as another way of decrypting the drive we just created. You will be prompted for the original passphrase that you used in the prep for this exercise – CreatePass:\n\n    ```", "```\n\n    # cat /etc/crypttab\n    /data3 volume and then run the command to ensure the LUKS has also closed the volume:\n\n    ```", "```\n\n    ```", "```\n\n    ```", "```\n\n    ```", "```\n\n    $ sudo vi /etc/crypttab\n    ```", "```\n\ndata3   UUID=8e1fb810-b471-491a-adcf-32048a0eb534 /etc/luks-keyfile luks\n###luks-8e1fb810-b471-491a-adcf-32048a0eb534 UUID=8e1fb810-b471-491a-adcf-32048a0eb534 none discard\n```", "```\n\n    # cryptsetup -v luksOpen /dev/sda7 data3 \\\n    --key-file=/etc/luks-keyfile\n    No usable token is available.\n    Key slot 2 unlocked.\n    Command successful.\n    ```", "```\n\n    /data3 is mounted. Depending on how you built your test machine, your output may vary. Please pay attention:\n\n    ```", "```\n\n    ```"]