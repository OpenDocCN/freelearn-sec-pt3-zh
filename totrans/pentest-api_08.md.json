["```\nLOG_FILE=dummy.log\nfor i in $(seq 1 10000); do\n  if [ $((i % 100)) -eq 0 ]; then\n    # Every 100th line contains sensitive data\n    echo \"192.168.1.$((RANDOM % 255)) - user_$RANDOM [$(date +'%d/%b/%Y:%H:%M:%S %z')] \\\"POST /api/submit HTTP/1.1\\\" 200 $((RANDOM % 5000 + 500)) \\\"-\\\" \\\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\\\" Auth_Token=\\\"$(openssl rand -hex 16)\\\" Credit_Card=\\\"1234-5678-9012-$RANDOM\\\"\" >> $LOG_FILE\n  else\n    # Other lines contain generic log data\n    flog >> $LOG_FILE\n  fi\ndone\n```", "```\n    - type: filestream\n      id: my-filestream-id\n      enabled: false\n      paths:\n        - /var/log/*.log\n    ```", "```\n    # The cloud.id setting overwrites the `output.elasticsearch.hosts` and\n    # `setup.kibana.host` options.\n    # You can find the `cloud.id` in the Elastic Cloud web UI.\n    #cloud.id:\n    # The cloud.auth setting overwrites the `output.elasticsearch.username` and\n    # `output.elasticsearch.password` settings. The format is `<user>:<pass>`.\n    #cloud.auth:\n    ```", "```\n    $ sudo filebeat test config\n    Config OK\n    $ sudo filebeat test output\n    elasticsearch: https://<a type of credential will show up here>.us-central1.gcp.cloud.es.io:443...\n      parse url... OK\n      connection...\n        parse host... OK\n        dns lookup... OK\n        addresses: 35.193.143.25\n        dial up... OK\n      TLS...\n        security: server's certificate chain verification is enabled\n        handshake... OK\n        TLS version: TLSv1.3\n        dial up... OK\n      talk to server... OK\n      version: 8.13.2\n    ```", "```\n    $ sudo filebeat -e\n    {\"log.level\":\"info\",\"@timestamp\":\"2024-04-21T18:23:44.082+0200\",\"log.origin\":{\"function\":\"github.com/elastic/beats/v7/libbeat/cmd/instance.(*Beat).configure\",\"file.name\":\"instance/beat.go\",\"file.line\":811},\"message\":\"Home path: [/usr/share/filebeat] Config path: [/etc/filebeat] Data path: [/var/lib/filebeat] Logs path: [/var/log/filebeat]\",\"service.name\":\"filebeat\",\"ecs.version\":\"1.6.0\"}\n    {\"log.level\":\"info\",\"@timestamp\":\"2024-04-21T18:23:44.083+0200\",\"log.origin\":{\"function\":\"github.com/elastic/beats/v7/libbeat/cmd/instance.(*Beat).configure\",\"file.name\":\"instance/beat.go\",\"file.line\":819},\"message\":\"Beat ID: 6e7f7876-f768-449b-b6b2-b74cd1d65e93\",\"service.name\":\"filebeat\",\"ecs.version\":\"1.6.0\"}\n    The rest of the output was omitted for brevity.\n    ```", "```\nmessage: Credit_card OR Auth_Token\n```", "```\n$ time rg \"\\b\\d{4}-\\d{4}-\\d{4}-\\d{4}\\b\" dummy.log\n594006:192.168.1.120 - user_12186 [19/Apr/2024:04:41:55 +0200] \"POST /api/submit HTTP/1.1\" 200 1633 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\" Auth_Token=\"e4e8be71c743f3273e22c43e1585282a\" Credit_Card=\"1234-5678-9012-1975\"\n1188012:192.168.1.223 - user_22717 [19/Apr/2024:04:41:56 +0200] \"POST /api/submit HTTP/1.1\" 200 2929 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\" Auth_Token=\"7e204c483eb812251e2c219bbdda7c08\" Credit_Card=\"1234-5678-9012-5180\"\n1485015:192.168.1.247 - user_28863 [19/Apr/2024:04:41:57 +0200] \"POST /api/submit HTTP/1.1\" 200 1585 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\" Auth_Token=\"a4de7124036ae0229ad43a75f972be69\" Credit_Card=\"1234-5678-9012-6131\"\n...Output omitted for brevity...\nreal    0m2.276s\nuser    0m2.235s\nsys    0m0.040s\n```", "```\n$ time rg \"Auth_Token=[^ ]+\" dummy.log\n99001:192.168.1.209 - user_10741 [19/Apr/2024:04:41:53 +0200] \"POST /api/submit HTTP/1.1\" 200 2550 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\" Auth_Token=\"76358e1eaf10a2da25845535f6a2f8ca\" Credit_Card=\"1234-5678-9012-685\"\n198002:192.168.1.31 - user_15060 [19/Apr/2024:04:41:53 +0200] \"POST /api/submit HTTP/1.1\" 200 4211 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\" Auth_Token=\"bfc4d56410a31f16e939559d1fd19011\" Credit_Card=\"1234-5678-9012-30887\"\n297003:192.168.1.120 - user_1823 [19/Apr/2024:04:41:54 +0200] \"POST /api/submit HTTP/1.1\" 200 2612 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\" Auth_Token=\"56a3d397f23094f3517296ea35e8bf5e\" Credit_Card=\"1234-5678-9012-10401\"\n...Output omitted for brevity...\nreal    0m0.216s\nuser    0m0.172s\nsys    0m0.044s\n```", "```\n$ time rg -e \"\\b\\d{4}-\\d{4}-\\d{4}-\\d{4}\\b\" -e \"Auth_Token=[^ ]+\" dummy.log\n99001:192.168.1.209 - user_10741 [19/Apr/2024:04:41:53 +0200] \"POST /api/submit HTTP/1.1\" 200 2550 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\" Auth_Token=\"76358e1eaf10a2da25845535f6a2f8ca\" Credit_Card=\"1234-5678-9012-685\"\n198002:192.168.1.31 - user_15060 [19/Apr/2024:04:41:53 +0200] \"POST /api/submit HTTP/1.1\" 200 4211 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\" Auth_Token=\"bfc4d56410a31f16e939559d1fd19011\" Credit_Card=\"1234-5678-9012-30887\"\n297003:192.168.1.120 - user_1823 [19/Apr/2024:04:41:54 +0200] \"POST /api/submit HTTP/1.1\" 200 2612 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\" Auth_Token=\"56a3d397f23094f3517296ea35e8bf5e\" Credit_Card=\"1234-5678-9012-10401\"\n...Output omitted for brevity...\nreal    0m1.821s\nuser    0m1.788s\nsys    0m0.033s\n```", "```\n# Generating dummy sensitive data\necho \"id,name,email,credit_card,auth_token\" > sensitive_data.csv\nfor i in {1..1000}; do\n  echo \"$i,User_$i,user$i@example.com,\\\n  $RANDOM-$RANDOM-$RANDOM-$RANDOM,\\\n  $(openssl rand -hex 16)\" >> sensitive_data.csv\ndone\n```", "```\nid,name,email,credit_card,auth_token\n1,User_1,user1@example.com,  10796-5693-25560-7313,  7fb3eb19f290e107a789c781a50e2ff3\n2,User_2,user2@example.com,  16541-23368-7044-11673,  41715cd1bc94db51192e61d895a6fed6\n3,User_3,user3@example.com,  433-32493-22646-29072,  03ac641fb0d669d18320b9806403ad4c\n4,User_4,user4@example.com,  21120-26964-18866-19201,  9566b0809b3fe28b8e86b8f97961670a\n5,User_5,user5@example.com,  24266-28815-8839-23803,  f345c6d3ef4a83433178d7b5431c8e47\n6,User_6,user6@example.com,  32051-14393-2369-23011,  006e2fe5208e98c694318f099ecdbb62\n7,User_7,user7@example.com,  2141-3195-31552-27733,  864a9c035fd0f3fd07383406c620192e\n8,User_8,user8@example.com,  215-813-6840-24823,  36f2da15355593dcca987f570f331673\n9,User_9,user9@example.com,  4015-30295-20623-27347,  fe59f7e5b7c6b02a7ff622848e7ff2dd\n10,User_10,user10@example.com, 14783-2106-26501-22541, a8f56bf3720c74cb2d0859cfc071bbed\n...Output omitted for brevity...\n```", "```\n$ curl http://127.0.0.1:5000/users\n[\n  {\n    \"auth_token\": \"  7fb3eb19f290e107a789c781a50e2ff3\",\n    \"credit_card\": \"  10796-5693-25560-7313\",\n    \"email\": \"user1@example.com\",\n    \"id\": 1,\n    \"name\": \"User_1\"\n  },\n  {\n    \"auth_token\": \"  41715cd1bc94db51192e61d895a6fed6\",\n    \"credit_card\": \"  16541-23368-7044-11673\",\n    \"email\": \"user2@example.com\",\n    \"id\": 2,\n    \"name\": \"User_2\"\n  },\n  {\n    \"auth_token\": \"  03ac641fb0d669d18320b9806403ad4c\",\n    \"credit_card\": \"  433-32493-22646-29072\",\n    \"email\": \"user3@example.com\",\n    \"id\": 3,\n    \"name\": \"User_3\"\n  }\n...Output omitted for brevity...\n```", "```\n$ curl -X POST -H \"Content-Type: application/json\" \\\n-d '{\"username\": \"admin\", \"password\": \"admin\\' OR \\'1\\'=\\'1\"}' \\\nhttp://localhost:5000/login\n{\n  \"message\": \"Invalid credentials!\"\n}\n```", "```\n$ curl http://localhost:5000/profile/10\n{\n  \"auth_token\": \"  0f5832741bd997a963a2b1c10c7e3410\",\n  \"credit_card\": \"  4904-20956-3479-12358\",\n  \"email\": \"user10@example.com\",\n  \"id\": 10,\n  \"name\": \"User_10\"\n}\n```", "```\ncurl -H \"Authorization: 12345\" http://localhost:5000/get_sensitive_data\nid,name,email,credit_card,auth_token\n1,User_1,user1@example.com,  24280-22986-24153-30647, 1314d0dabf32fb00873d2af1df67104b\n2,User_2,user2@example.com,  22724-31508-12727-13842,  0120956bf359ec6768e41451a4427360\n3,User_3,user3@example.com,  19369-31798-14486-31982,  8be7e021287609dd9e274ccf26b7bbb5\n…Output omitted for brevity…\n```", "```\n$ curl http://localhost:5000/cause_error\n<!doctype html>\n<html lang=en>\n  <head>\n    <title>ZeroDivisionError: division by zero\n // Werkzeug Debugger</title>\n    <link rel=\"stylesheet\" href=\"?__debugger__=yes&amp;cmd=resource&amp;f=style.css\">\n    <link rel=\"shortcut icon\"\n        href=\"?__debugger__=yes&amp;cmd=resource&amp;f=console.png\">\n    <script src=\"img/?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js\"></script>\n    <script>\n      var CONSOLE_MODE = false,\n          EVALEX = true,\n          EVALEX_TRUSTED = false,\n          SECRET = \"MN645GMVPd9f6W0ZSFTa\";\n    </script>\n  </head>\n...Output omitted for brevity...\n```", "```\nimport sqlite3\ndef get_user_info(user_id):\n    # Use parameterized query to prevent SQL injection\n    connection = sqlite3.connect('my_database.db')\n    cursor = connection.cursor()\n    cursor.execute(\"SELECT * FROM users WHERE id = ?\", (user_id,))\n    user = cursor.fetchone()\n    connection.close()\n    return user\n```", "```\nfrom flask import Flask, jsonify, request\nfrom flask_jwt_extended import JWTManager, create_access_token, jwt_required\napp = Flask(__name__)\napp.config['JWT_SECRET_KEY'] = 'type_a_secure_key_here'\njwt = JWTManager(app)\n@app.route('/login', methods=['POST'])\ndef login():\n    username = request.json.get(\"username\", \"\")\n    password = request.json.get(\"password\", \"\")\n    if username == \"admin\" and password == \"admin123\":\n        access_token = create_access_token(identity=username)\n        return jsonify(access_token=access_token)\n    return jsonify({\"message\": \"Invalid credentials!\"}), 401\n@app.route('/protected', methods=['GET'])\n@jwt_required()\ndef protected():\n    return jsonify({\"message\": \"Access granted!\"})\n```"]