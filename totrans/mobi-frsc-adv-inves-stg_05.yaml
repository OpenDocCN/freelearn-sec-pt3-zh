- en: Chapter 5\. iOS – Introduction and Physical Acquisition
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章 iOS – 介绍与物理获取
- en: It was in January 2007 that Apple released the first version of the iPhone.
    Since then, the global smartphone market has never been the same.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 苹果于2007年1月发布了第一代iPhone。从那时起，全球智能手机市场再也没有回到过去。
- en: With the advent of Android devices, the relative share of iOS-based mobile phones
    has been declining steadily over the years. With iPhone accounting for nearly
    14% of all smartphones sold in Q2 2015 (according to [http://www.idc.com/prodserv/smartphone-os-market-share.jsp](http://www.idc.com/prodserv/smartphone-os-market-share.jsp)),
    the rest of the market is dominated by Android.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 随着安卓设备的崛起，iOS手机的市场份额多年来稳步下降。据[http://www.idc.com/prodserv/smartphone-os-market-share.jsp](http://www.idc.com/prodserv/smartphone-os-market-share.jsp)数据显示，到2015年第二季度，iPhone约占所有智能手机销量的14%，其余市场则由安卓系统主导。
- en: In absolute terms, there are still a lot of old iOS devices around. Approximately
    74.4 million iPhones were sold during Q1 2015 alone.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 从绝对数量上来看，仍然有很多旧款iOS设备。仅在2015年第一季度，就售出了大约7440万部iPhone。
- en: 'In the U.S., iPhones account for 35.58% of the subscriber base in Q3 2015 (source:
    [http://bgr.com/2015/10/01/iphone-market-share-q3-2015-android/](http://bgr.com/2015/10/01/iphone-market-share-q3-2015-android/)).
    With that many iOS smartphones used throughout the U.S., the need for iOS forensics
    remains strong.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在美国，iPhone在2015年第三季度占据了35.58%的用户基数（来源：[http://bgr.com/2015/10/01/iphone-market-share-q3-2015-android/](http://bgr.com/2015/10/01/iphone-market-share-q3-2015-android/)）。在美国使用如此多的iOS智能手机的情况下，对iOS取证的需求依然强劲。
- en: 'In this chapter, we will discuss the options available for acquiring information
    from iOS devices. We will also discuss physical acquisition in detail, discussing
    the tools and practical steps required to perform physical acquisition. In this
    chapter, we will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将讨论从iOS设备获取信息的可选方法。我们还将详细讨论物理获取，介绍执行物理获取所需的工具和实际步骤。本章将涵盖以下内容：
- en: Security implications of Apple iOS and how they affect available acquisition
    options
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 苹果iOS的安全隐患及其如何影响可用的获取选项
- en: Generations of Apple hardware and the difference between legacy, recent 32-bit,
    and modern 64-bit devices
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 苹果硬件的不同代际，以及传统的32位设备和现代的64位设备之间的区别
- en: The need for jailbreak
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 越狱的必要性
- en: Different iOS acquisition methods and when to use them
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同的iOS获取方法以及何时使用它们
- en: Physical acquisition in detail—tools, techniques, and practical steps
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物理获取的详细介绍——工具、技术和实际步骤
- en: iOS forensics – introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iOS取证 – 介绍
- en: Different devices require different acquisition techniques. The different versions
    of iOS require different acquisition paths, each having its own vector of attack.
    While in Apple's sector, we don't nearly see such a wide diversity of devices
    and heavily-customized versions of the operating system (each with its own vulnerabilities),
    there are still a lot of devices available.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的设备需要不同的获取技术。不同版本的iOS系统需要不同的获取路径，每个版本都有其独特的攻击向量。在苹果的生态系统中，我们几乎看不到如此广泛的设备种类和高度定制化的操作系统版本（每个版本都有其自身的漏洞），但仍然有许多设备可供使用。
- en: Generations of Apple hardware
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 苹果硬件的不同代际
- en: iOS is a closed operating system that's only supported on Apple-manufactured
    hardware. As a result, we don't have to deal with a dozen different manufacturers
    and thousands of models. By Q2 2015, Apple had released ten iPhone models, five
    models of iPod Touch, six full-size iPads, and three models of iPad mini.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: iOS是一个封闭的操作系统，只支持苹果制造的硬件。因此，我们不需要处理来自数十家不同制造商和数千个型号的设备。到2015年第二季度，苹果已经发布了十款iPhone、五款iPod
    Touch、六款全尺寸iPad和三款iPad mini。
- en: While general information and up-to-date specifications of Apple hardware can
    be viewed at [https://en.wikipedia.org/wiki/List_of_iOS_devices](https://en.wikipedia.org/wiki/List_of_iOS_devices)
    , there are several things not mentioned in the official specs that can make the
    device more or less susceptible to physical acquisition.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然可以在[https://en.wikipedia.org/wiki/List_of_iOS_devices](https://en.wikipedia.org/wiki/List_of_iOS_devices)查看苹果硬件的一般信息和最新规格，但官方规格中没有提到的几点内容可能会影响设备对物理获取的易受攻击性。
- en: Early generations of Apple devices had a vulnerability in Trusted Boot, allowing
    attackers to bypass signature verification while booting in the DFU mode. As the
    signature-verification code was located in device's read-only memory, Apple was
    never able to patch this vulnerability in existing devices. This vulnerability
    allowed mobile forensic specialists to create tools for unconditional, always-working
    physical acquisition of susceptible iOS devices (for example, Elcomsoft iOS Forensic
    Toolkit at [https://www.elcomsoft.com/eift.html](https://www.elcomsoft.com/eift.html)).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 早期的苹果设备在受信启动（Trusted Boot）上存在漏洞，允许攻击者在DFU模式下绕过签名验证。由于签名验证代码位于设备的只读存储器中，苹果永远无法修补已存在设备中的这个漏洞。这个漏洞让移动取证专家能够创建工具，用于无条件、始终有效的物理获取易受攻击的iOS设备（例如，Elcomsoft
    iOS取证工具包，网址：[https://www.elcomsoft.com/eift.html](https://www.elcomsoft.com/eift.html)）。
- en: Tip
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Unconditional physical acquisition regardless of iOS version and jailbreak status
    is available on iPhone 3G, 3GS, and 4; iPod Touch 1st through 4th gen; and the
    original iPad.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 不管iOS版本和越狱状态如何，iPhone 3G、3GS和4；第一代至第四代iPod Touch；以及原版iPad，都可以进行无条件的物理获取。
- en: In newer generations of hardware, Apple fixed the vulnerability, making physical
    acquisition a much more complicated process.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在新一代硬件中，苹果修复了这个漏洞，使得物理获取过程变得更加复杂。
- en: As a result, devices using 32-bit processors, including iPhone 4S, iPhone 5,
    iPhone 5C, iPad 2+, iPad Mini, and iPod Touch 5th gen can only be acquired if
    jailbroken (either by the user or by the investigator, if the passcode is known).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，使用32位处理器的设备，包括iPhone 4S、iPhone 5、iPhone 5C、iPad 2+、iPad Mini和第五代iPod Touch，只有在设备越狱（无论是由用户还是调查员越狱，如果密码已知）后，才能进行获取。
- en: What about Apple's newest generation devices using 64-bit chipsets? Physical
    acquisition is available for all 64-bit Apple devices, such as iPhone 5S, iPhone
    6, and iPhone 6 Plus; iPad 2 and newer; iPad Air and Air 2; and iPad Mini 2 and
    3, using Elcomsoft iOS Forensic Toolkit. The acquisition process requires a jailbroken
    device; the passcode must be known and must be removed in the device's **Security**
    settings prior to the acquisition.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，使用64位芯片组的苹果最新一代设备怎么样？所有64位苹果设备，如iPhone 5S、iPhone 6和iPhone 6 Plus；iPad 2及更新版；iPad
    Air和Air 2；以及iPad Mini 2和3，都可以通过Elcomsoft iOS取证工具包进行物理获取。获取过程需要越狱的设备；设备的密码必须已知，并且必须在设备的**安全性**设置中移除，才能进行获取。
- en: How likely are you to encounter a 32-bit Apple device? While there are no direct
    statistics about how many devices of each generation are still in active use,
    we can estimate these numbers by looking at the official iOS version stats. While
    Apple is known to deliver updates to the latest iOS and even to the old versions
    of their products, these devices have limited capabilities and timeframe during
    which they may receive updates. As a result, the latest version of iOS supported
    on iPhone 4, for example, was iOS 7.1.2; while all newer devices support iOS 8.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你有多大可能遇到32位的苹果设备？虽然没有关于每一代设备仍在使用的直接统计数据，但我们可以通过查看官方的iOS版本统计数据来估算这些数字。虽然苹果以提供最新iOS更新并对旧版本进行更新而著称，但这些设备在接受更新时有着有限的能力和时间框架。因此，以iPhone
    4为例，支持的最新iOS版本是iOS 7.1.2；而所有更新的设备都支持iOS 8。
- en: By February 2016, Apple claimed ([https://developer.apple.com/support/appstore/](https://developer.apple.com/support/app-store/))
    that around 76% of its users will have already upgraded to iOS 9\. Approximately
    17% of Apple users use iOS 8, while earlier versions represent only 7% of Apple's
    user base.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 到2016年2月，苹果声称（[https://developer.apple.com/support/appstore/](https://developer.apple.com/support/app-store/)）约76%的用户已经升级到iOS
    9。大约17%的苹果用户使用iOS 8，而早期版本只占苹果用户基础的7%。
- en: In terms of hardware, this means that early generation devices such as iPhone,
    iPhone 3G, and 3GS are only marginally represented (2% market share). Since iPhone
    4 supports iOS 7.x, it can be counted as part of the 7% group (using iOS 7). Most
    iPhones, however, are using iOS 9 (76%) or iOS 8 (17%), which means that they
    are iPhone 4S, 5, 5C, 5S, 6, and 6 Plus.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在硬件方面，这意味着早期的设备，如iPhone、iPhone 3G和3GS，只有少量的代表性（市场份额为2%）。由于iPhone 4支持iOS 7.x，因此它可以被视为7%组的一部分（使用iOS
    7）。然而，大多数iPhone都在使用iOS 9（76%）或iOS 8（17%），这意味着它们是iPhone 4S、5、5C、5S、6和6 Plus。
- en: Is jailbreak required?
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 是否需要越狱？
- en: As physical acquisition requires low-level access to the data partition, physical
    acquisition is only possible on jailbroken iOS devices. Other acquisition methods,
    for example, logical and over-the-air acquisition do not require a jailbreak.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 由于物理获取需要对数据分区进行低级别访问，物理获取仅在越狱的 iOS 设备上可行。其他获取方法，例如，逻辑获取和空中获取，则不需要越狱。
- en: Geolocation information
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 地理位置相关信息
- en: 'It''s no news that iOS devices equipped with cellular modules periodically
    collect and store geolocation information. iOS devices are capable of capturing
    information about nearby cellular towers and Wi-Fi access points in range, even
    if the device is not connected to them. This information is stored in plain unencrypted
    form in a `cache_encryptedA.db` file. The file keeps tracking information about
    cellular towers and Wi-Fi networks in range for up to 45 days. The official Apple
    statement says:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: iOS 设备配备蜂窝模块，定期收集和存储地理位置相关信息，这已不是什么新闻。iOS 设备能够捕捉到附近蜂窝基站和 Wi-Fi 接入点的信息，即使设备未连接到它们。这些信息以明文未加密的形式存储在
    `cache_encryptedA.db` 文件中。该文件会保留最多 45 天的蜂窝基站和 Wi-Fi 网络的追踪信息。Apple 官方声明称：
- en: '*The iPhone is not logging your location. Rather, it''s maintaining a database
    of Wi-Fi hotspots and cell towers around your current location, some of which
    may be located more than one hundred miles away from your iPhone, to help your
    iPhone rapidly and accurately calculate its location when requested. Calculating
    a phone''s location using just GPS satellite data can take up to several minutes.
    iPhone can reduce this time to just a few seconds by using Wi-Fi hotspot and cell
    tower data to quickly find GPS satellites, and even triangulate its location using
    just Wi-Fi hotspot and cell tower data when GPS is not available (such as indoors
    or in basements). These calculations are performed live on the iPhone using a
    crowd-sourced database of Wi-Fi hotspot and cell tower data that is generated
    by tens of millions of iPhones sending the geo-tagged locations of nearby Wi-Fi
    hotspots and cell towers in an anonymous and encrypted form to Apple.*'
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*iPhone 并不会记录你的位置信息。相反，它会维护一个包含你当前所在地周围 Wi-Fi 热点和蜂窝基站的数据库，其中一些可能位于距离你的 iPhone
    一百多英里的地方，帮助你的 iPhone 在请求时迅速且准确地计算出其位置。仅使用 GPS 卫星数据计算手机位置可能需要几分钟的时间。iPhone 可以通过利用
    Wi-Fi 热点和蜂窝基站数据，快速找到 GPS 卫星，甚至在 GPS 无法使用时（例如在室内或地下室），仅使用 Wi-Fi 热点和蜂窝基站数据就能三角定位出其位置，从而将定位时间缩短到仅几秒钟。这些计算在
    iPhone 上实时执行，使用由数千万部 iPhone 汇集的 Wi-Fi 热点和蜂窝基站数据的众包数据库，这些数据通过匿名加密的方式发送给 Apple，包含了周围
    Wi-Fi 热点和蜂窝基站的地理标记位置。*'
- en: 'Notably, the `cache_encryptedA.db` file is not stored in device backups, either
    cloud or made with iTunes. Since there is no end-user access to system files in
    Apple iOS, the device must be jailbroken in order to retrieve the file. Naturally,
    the `cache_encryptedA.db` is always retrieved as part of the physical acquisition
    process. Mobile forensic tools (for example, Oxygen Forensic Toolkit) can parse
    the file and display the user''s tracking information as shown in the following
    image:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，`cache_encryptedA.db` 文件不会存储在设备的备份中，无论是云备份还是通过 iTunes 创建的备份。由于 Apple
    iOS 中没有用户访问系统文件的权限，因此必须越狱才能提取该文件。当然，`cache_encryptedA.db` 文件始终会作为物理获取过程的一部分被提取。移动取证工具（例如，Oxygen
    Forensic Toolkit）可以解析该文件，并显示用户的追踪信息，如下图所示：
- en: '![Geolocation information](img/0065.jpeg)![Geolocation information](img/0066.jpeg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![地理位置相关信息](img/0065.jpeg)![地理位置相关信息](img/0066.jpeg)'
- en: Geolocation information
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 地理位置相关信息
- en: The ability to extract geolocation information is one of the major benefits
    of physical acquisition over logical extraction. If physical acquisition is not
    available for a particular device, attempting a jailbreak and manually pulling
    `cache_encryptedA.db` will be worth the effort if you need access to the suspect's
    location history.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 提取地理位置相关信息是物理获取相较于逻辑提取的主要优势之一。如果特定设备无法进行物理获取，在需要访问嫌疑人位置历史的情况下，尝试越狱并手动提取 `cache_encryptedA.db`
    文件将是值得的努力。
- en: Additional sources of geolocation history may also be available, including photo
    EXIF tags and application data (if geolocation was enabled and allowed by the
    user).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 其他的地理位置历史来源也可能是可用的，包括照片 EXIF 标签和应用数据（如果启用了地理定位并允许由用户提供）。
- en: Where is the information stored?
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 这些信息存储在哪里？
- en: Obviously, the phone itself is viewed as a primary source of data, and rightfully
    so. However, what if the phone is locked and the passcode is unknown? Also, what
    if you don't have the phone?
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，手机本身被视为数据的主要来源，这也是理所当然的。然而，如果手机被锁定且密码未知呢？再者，如果你没有手机呢？
- en: Information collected by a smartphone is stored in (and can be retrieved from)
    numerous places. An Apple phone can back up its data to a PC via iTunes or to
    Apple's own cloud service (iCloud/iCloud Drive) via Wi-Fi. As a result, you may
    be dealing with a set of backup files (with or without a password), or just have
    a computer that does not have a single backup file, but was used to sync with
    iCloud.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 智能手机收集的信息存储在多个地方，并且可以从中提取。Apple 手机可以通过 iTunes 将数据备份到 PC，或通过 Wi-Fi 将数据备份到 Apple
    自有的云服务（iCloud/iCloud Drive）。因此，你可能正在处理一组备份文件（可能有密码，也可能没有），或者你仅拥有一台没有任何备份文件的计算机，但它曾用于与
    iCloud 同步。
- en: 'Sometimes you''ll have it all: a phone, set of offline backups, and computer
    in sync with iCloud. More often than not, you''re going to need information right
    away, or *the sooner the better*. What is the optimal route for getting as much
    information as possible in the shortest time? The answer depends on what exactly
    do you have on your hands.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 有时你可能会拥有一切：一部手机、一组离线备份和一台与 iCloud 同步的计算机。但更多的时候，你可能需要立即获取信息，或者 *越快越好*。在最短时间内获取尽可能多的信息的最佳路线是什么？答案取决于你手中到底有什么。
- en: iOS acquisition methods overview
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iOS 采集方法概述
- en: While different methods exist to help extract the content of mobile devices,
    the choice of one or another method will usually depend on what you have available.
    Do you have a working iPhone? You can try physical acquisition, but only if the
    device falls within the compatibility matrix. Do you have access to the computer
    that was used to sync with the phone? Search for mobile backups. If you can find
    an iTunes backup, you can use logical acquisition to break into the backup and
    extract information. Was that computer used to sync with iCloud? Look for the
    iCloud authentication token. If found, the token can be used to connect to the
    user's iCloud account on bypassing the login and password. Do you happen to know
    the user's Apple ID, BlackBerry ID, or Windows Live account and password? Cloud
    forensics will help you download data from the cloud.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有多种方法可以帮助提取移动设备的内容，但选择哪种方法通常取决于你拥有的工具。你有一部可用的 iPhone 吗？你可以尝试物理采集，但前提是设备在兼容性矩阵范围内。你是否有访问与手机同步过的计算机？搜索移动备份。如果你能找到
    iTunes 备份，可以使用逻辑采集来破解备份并提取信息。那台计算机是否用于与 iCloud 同步？查找 iCloud 身份验证令牌。如果找到，可以利用该令牌绕过登录密码直接连接到用户的
    iCloud 账户。你是否知道用户的 Apple ID、BlackBerry ID 或 Windows Live 账户和密码？云取证可以帮助你从云端下载数据。
- en: 'To choose an acquisition method, refer to the following table:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 选择采集方法时，请参考以下表格：
- en: '| **I have...** | **Physical acquisition** | **Logical acquisition (backup
    analysis)** | **Cloud forensics** |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| **我拥有...** | **物理采集** | **逻辑采集（备份分析）** | **云取证** |'
- en: '| Physical device (iPhone, iPad, or iPod Touch) | YES* | MAYBE | MAYBE |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 物理设备（iPhone、iPad 或 iPod Touch） | 是* | 可能 | 可能 |'
- en: '| Computer that was synced with (or trusted by) the phone/tablet | N/A | N/A
    | MAYBE |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| 与手机/平板电脑同步过的计算机（或信任过的设备） | 不适用 | 不适用 | 可能 |'
- en: '| The iOS device and the computer that it was synced with (or trusted by) |
    N/A | MAYBE***** | MAYBE |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| iOS 设备及与其同步（或信任）的计算机 | 不适用 | 可能***** | 可能 |'
- en: '| iTunes backup | N/A | YES** | MAYBE |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| iTunes 备份 | 不适用 | 是** | 可能 |'
- en: '| Apple ID login and password | N/A | N/A | YES*** |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| Apple ID 登录和密码 | 不适用 | 不适用 | 是*** |'
- en: '| iCloud authentication token | N/A | N/A | YES**** |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| iCloud 身份验证令牌 | 不适用 | 不适用 | 是**** |'
- en: '*Physical acquisition is only available for certain devices. Refer to [Chapter
    6](ch06.html "Chapter 6\. iOS Logical and Cloud Acquisition"), *iOS Logical and
    Cloud Acquisition* for detailed compatibility matrix.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '*物理采集仅适用于特定设备。请参阅 [第6章](ch06.html "第6章 iOS 逻辑与云采集")，*iOS 逻辑与云采集* 以获取详细的兼容性矩阵。'
- en: '**Certain backups may be protected with long, complex passwords. There is no
    guaranteed recovery timeframe or successful password recovery guarantee on password-protected
    backups.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**某些备份可能受到复杂长密码的保护。对于受密码保护的备份，没有保证恢复时间框架或成功恢复密码的保证。'
- en: '***Apple''s two-factor authentication complicates things a little bit. If two-factor
    authentication is activated for a certain Apple ID, access to the secondary authentication
    unit (such as a trusted device, recovery key, or app-specific password) is required.
    Microsoft takes a similar approach to two-factor authentication. At this time,
    Elcomsoft products only support two-factor authentication for Apple devices.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '***Apple的双因素认证使事情变得稍微复杂了一些。如果某个Apple ID启用了双因素认证，则需要访问次级认证单元（例如受信设备、恢复密钥或应用程序特定密码）。Microsoft采用类似的双因素认证方法。目前，Elcomsoft产品仅支持Apple设备的双因素认证。'
- en: '****Authentication tokens may have an expiration (depending on the iOS version).
    Their exact lifespan is currently not known. While we experienced some tokens
    extracted with the ATEX tool from the **Control Panel** to expire in one hour
    (iOS 8.x, for cloud backups only), we did not have this experience in other cases.
    We are continuing extensive testing to find out. Notably, authentication tokens
    *live* longer for cloud files. iOS 9 moved cloud backups to iCloud Drive; its
    authentication tokens currently don''t have an expiration date (or have a very
    long lifespan). Finally, authentication tokens are invalidated when the user changes
    their account password or explicitly logs out from the cloud on a given computer.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '****认证令牌可能会过期（具体取决于iOS版本）。它们的确切寿命目前尚不清楚。虽然我们在使用ATEX工具从**控制面板**提取的一些令牌在一小时内过期（仅适用于iOS
    8.x的云备份），但在其他情况下我们并未遇到这种情况。我们正在进行广泛的测试以了解更多。值得注意的是，云文件的认证令牌*寿命更长*。iOS 9将云备份转移到iCloud
    Drive；目前，其认证令牌没有过期日期（或拥有非常长的生命周期）。最后，当用户更改账户密码或明确从某台计算机上退出云端时，认证令牌将失效。'
- en: '*****If you have a computer that was synced with the device and the iOS device
    itself, you may be able to extract the decryption key and force the device to
    make a backup, without even knowing the password. However, this is only possible
    if the iOS device was not rebooted after the last time it synced with the computer.
    Interestingly, even if automatic synchronization is not enabled on the iOS device,
    the device prompts whether to trust the computer after you plug it in. If the
    answer is *yes*, a pair of cryptographic keys will be created (on the device and
    on the computer).'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '*****如果你拥有一台与设备同步过的计算机和该iOS设备本身，你或许可以提取解密密钥并强制设备进行备份，甚至无需知道密码。然而，这只有在iOS设备在上次与计算机同步后没有重新启动的情况下才可能实现。有趣的是，即使iOS设备上没有启用自动同步，当你将设备插入时，它仍会提示是否信任该计算机。如果答案是*是*，则会创建一对加密密钥（在设备上和计算机上）。'
- en: iOS acquisition methods compared
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iOS获取方法对比
- en: In an unlikely event, if you possess the physical device, a copy of its offline
    backup, and the user's Apple ID/password (or a binary authentication token collected
    from the user's PC), which acquisition method should you choose?
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在不太可能的情况下，如果你拥有物理设备、其离线备份副本以及用户的Apple ID/密码（或从用户PC收集的二进制认证令牌），你应该选择哪种获取方法？
- en: The answer depends on how quickly you need the data, and whether or not you
    require access to deleted files and the keychain. Physical acquisition is by far
    the best acquisition method—if your device is supported. Cloud acquisition can
    return current and past data, while the offline backup can be the easiest (if
    not password-protected) or the slowest (if password-protected) to recover.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 答案取决于你需要数据的速度，以及是否需要访问已删除的文件和钥匙串。物理获取是迄今为止最好的获取方法——如果你的设备受到支持的话。云获取可以返回当前和过去的数据，而离线备份则是最容易（如果没有密码保护）或最慢（如果有密码保护）恢复的数据。
- en: The different acquisition methods offer various benefits over one another.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的获取方法彼此之间提供不同的优点。
- en: 'For iOS devices, physical acquisition is the method of choice if available
    (refer to the *Compatibility matrix* section in the next chapter). Physical acquisition
    offers the following benefits:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 对于iOS设备，物理获取是首选方法（请参考下一章中的*兼容性矩阵*部分）。物理获取提供以下优点：
- en: Access to complete information stored in the mobile device (if passcode is known
    or recovered)
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问存储在移动设备中的完整信息（如果已知或恢复了密码）
- en: Guaranteed timeframe (if passcode is known or a four-digit passcode is used)
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保证的时间范围（如果已知密码或使用了四位数密码）
- en: Extremely high acquisition speed
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 极高的获取速度
- en: Potential access to certain deleted data (for example, contacts and messages)
    stored in SQLite databases
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 潜在访问某些已删除数据（例如，联系人和消息），这些数据存储在SQLite数据库中
- en: Access to keychain information (if passcode is known or can be recovered)
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问钥匙串信息（如果知道密码或能够恢复）
- en: Access to up to 45 days of geolocation tracking data
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问最多45天的地理位置跟踪数据
- en: 'Logical acquisition of iOS devices involves the analysis of offline backups
    produced by Apple iTunes. Logical acquisition offers the following benefits:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: iOS设备的逻辑获取涉及分析由Apple iTunes生成的离线备份。逻辑获取具有以下优点：
- en: Access to most information stored in the mobile device
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问存储在移动设备中的大多数信息
- en: No guaranteed recovery timeframe for password-protected backups
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码保护备份没有保证的恢复时间
- en: Potential access to certain deleted data (for example, contacts and messages)
    stored in SQLite databases
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能访问存储在SQLite数据库中的某些删除数据（例如，联系人和消息）
- en: Access to keychain information is possible (if a decryption key was extracted
    from the device via physical acquisition)
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果通过物理获取从设备提取了解密密钥，则可以访问钥匙串信息
- en: Keychain data can be retrieved from password-protected backups
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 钥匙串数据可以从密码保护的备份中恢复
- en: Long complex password may altogether prevent the recovery
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 长且复杂的密码可能完全阻止恢复
- en: 'Cloud acquisition is available for mobile devices running Apple iOS, BlackBerry,
    and Windows Phone 8/8.1\. Cloud acquisition offers the following benefits:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 云获取适用于运行Apple iOS、BlackBerry和Windows Phone 8/8.1的移动设备。云获取具有以下优点：
- en: Access to most information stored in the mobile device
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问存储在移动设备中的大多数信息
- en: Access to certain files accessed from the device (but not actually stored in
    the device)
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问设备中某些文件（但实际未存储在设备中）
- en: Recovery time highly dependent on connection speed and available cloud throughput
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恢复时间高度依赖于连接速度和可用的云吞吐量
- en: Potential access to certain deleted data (for example, contacts and messages)
    stored in SQLite databases
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能访问存储在SQLite数据库中的某些删除数据（例如，联系人和消息）
- en: 'iOS: Access to keychain information is possible if a decryption key was extracted
    from the device via physical acquisition'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS：如果通过物理获取从设备提取了解密密钥，则可以访问钥匙串信息
- en: 'iOS: Two-factor authentication may disallow cloud access even if login and
    password are known (can be bypassed if a valid, non-expired authentication token
    is available)'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS：即使登录和密码已知，双因素认证也可能禁止云访问（如果有有效且未过期的认证令牌，可以绕过）
- en: 'Finally, it is possible to perform chip-off acquisition by extracting data
    directly from the memory chips (special hardware and skills are required). Chip-off
    acquisition has the following properties:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，可以通过直接从内存芯片提取数据来执行芯片拆除获取（需要专用硬件和技能）。芯片拆除获取具有以下特点：
- en: On older devices, it is possible to extract all information except encrypted
    (keychain).
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在旧设备上，除加密的部分（钥匙串）外，几乎可以提取所有信息。
- en: Recent generation iOS devices rely extensively on encrypted storage. As a result,
    most user data will remain encrypted with strong, non-extractable encryption keys.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最近一代的iOS设备广泛依赖于加密存储。因此，大多数用户数据将保持加密，并使用强大且不可提取的加密密钥。
- en: Guaranteed timeframe, but limited amount of accessible data.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保证的时间框架，但可访问的数据量有限。
- en: Extremely high acquisition speed.
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取速度极快。
- en: No access to keychain information or historical location data.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无法访问钥匙串信息或历史位置信息。
- en: 'The following table summarizes the possible outcome of the various acquisition
    methods:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格总结了各种获取方法的可能结果：
- en: '|  | **Physical acquisition** | **Logical acquisition** | **Cloud forensics**
    | **Chip-off** |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '|  | **物理获取** | **逻辑获取** | **云取证** | **芯片拆除** |'
- en: '| Approximate timeframe | 35-50 minutes (depending on device model) |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 大致时间框架 | 35-50分钟（取决于设备型号） |'
- en: Instant (unprotected backups)
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 即时（未保护的备份）
- en: Unknown (password-protected)
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 未知（密码保护）
- en: '| 0-4 hours (depending on connection speed and data volume) | 1-4 hours (depending
    on skill level) |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 0-4小时（取决于连接速度和数据量） | 1-4小时（取决于技能水平） |'
- en: '| Keychain recovery | Yes |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| 钥匙串恢复 | 是 |'
- en: No (unprotected backups), unless **securityd** is available
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 否（未保护的备份），除非**securityd**可用
- en: Yes (password-protected)
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是的（密码保护）
- en: '| No (unless securityd is available) | No |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 否（除非securityd可用） | 否 |'
- en: '| Access to deleted files | No* | No | No | No |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| 访问已删除文件 | 否* | 否 | 否 | 否 |'
- en: '| Access to deleted SQLite records | Yes | Yes | Yes | Yes |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| 删除的SQLite记录访问 | 是 | 是 | 是 | 是 |'
- en: '| Up to 45 days of geolocation tracking data | Yes | No | No | Yes |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| 最多45天的地理位置跟踪数据 | 是 | 否 | 否 | 是 |'
- en: '| Possible issues | Last-generation devices must be jailbroken (refer to *Compatibility
    matrix*) | Long and complex passwords may prevent the recovery |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| 可能的问题 | 上一代设备必须越狱（参考*兼容性矩阵*） | 长而复杂的密码可能会阻止恢复 |'
- en: Apple ID/password or authentication token required
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要 Apple ID/密码或认证令牌
- en: Two-factor authentication
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 双因素认证
- en: Notification e-mail
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通知电子邮件
- en: '|'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Only for iOS 1 through 4
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仅适用于 iOS 1 至 4
- en: Recent devices use complete hardware encryption
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最近的设备使用了完整的硬件加密
- en: Encrypted data non-recoverable and non-decryptable
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密数据不可恢复且无法解密
- en: Chip-off acquisition is *not available* for recent iOS devices
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于最近的 iOS 设备，无法使用 *Chip-off* 获取方法
- en: '|'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '*Accessing deleted files is possible for iOS 1.x through 3.x. However, the
    chances of encountering an iOS version that old are close to none.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '*访问已删除的文件对 iOS 1.x 到 3.x 版本是可能的。然而，遇到这么旧的 iOS 版本的机会几乎为零。'
- en: iOS advanced logical acquisition
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iOS 高级逻辑获取
- en: A while ago, a so-called advanced logical acquisition method was introduced
    by Jonathan Zdziarski. It was a very popular acquisition method while it lasted.
    The examiner still had to possess an unlocked device, but if this was the case,
    it was possible to obtain more information compared to pure logical acquisition
    (backup analysis).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 不久前，Jonathan Zdziarski 引入了一种所谓的高级逻辑获取方法。这在其流行时期非常受欢迎。检查员仍然需要拥有一个解锁的设备，但如果是这样，相较于纯逻辑获取（备份分析），可以获取更多的信息。
- en: 'Compared to pure logical acquisition, advanced logical acquisition offered
    the following benefits:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 与纯逻辑获取相比，先进的逻辑获取提供了以下优势：
- en: iTunes backup password could not stop accessing personal data such as contacts
    or text messages that were not protected with any password
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iTunes 备份密码无法阻止访问未受到任何密码保护的个人数据，例如联系人或短信
- en: More application data, including log files, could be extracted
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以提取更多应用数据，包括日志文件
- en: The method was short-lived as Apple patched the vulnerability used by this acquisition
    method by hiding the corresponding service. Since iOS 8, only app-shared documents
    (for example, documents edited by an office app or videos watched with a media
    player) can be extracted with this method.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Apple 修复了该获取方法使用的漏洞，并隐藏了相应的服务，因此该方法的使用寿命较短。自 iOS 8 起，只有应用共享的文档（例如，由办公应用编辑的文档或由媒体播放器观看的视频）才能通过此方法提取。
- en: iOS physical acquisition
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iOS 物理获取
- en: Physical acquisition is the most comprehensive acquisition method available
    for iOS devices. Other platforms (for example, Android, BlackBerry OS, BlackBerry
    10, and Windows-based devices) can be acquired by one of the lower-level techniques,
    such as JTAG, ISP, or chip-off. These acquisition techniques are not available
    for iOS devices due to mandatory full-disk encryption that is enforced out of
    the box, regardless of whether the user sets up additional security. Physical
    acquisition returns significantly more information compared to any other method,
    such as logical acquisition or backup analysis. Data stored in Apple's protected
    storage, the keychain, is exclusively available via the physical process.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 物理获取是目前 iOS 设备上最全面的获取方法。其他平台（例如 Android、BlackBerry OS、BlackBerry 10 和基于 Windows
    的设备）可以通过一些较低级别的技术，如 JTAG、ISP 或 Chip-off 方法来获取。这些获取技术对于 iOS 设备不可用，因为强制实施的全盘加密（无论用户是否设置额外的安全性）使得物理获取成为唯一可行的方案。与任何其他方法（如逻辑获取或备份分析）相比，物理获取能返回显著更多的信息。存储在
    Apple 受保护存储中的数据，如钥匙串，只能通过物理过程访问。
- en: 'Physical acquisition is very decisive: it either works or it doesn''t. If it
    works, you can expect to image the entire device in under 40 minutes, even a 32-GB
    iPhone 4, which is among the slowest. Devices with larger storage can take longer;
    however, there is no uncertainty as in attempting to attack backup passwords.
    ElcomSoft developed a physical acquisition toolkit for iOS devices:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 物理获取非常决定性：要么有效，要么无效。如果有效，你可以在不到 40 分钟内完成整个设备的成像，即使是32GB的 iPhone 4，这款设备是最慢的之一。存储更大的设备可能需要更长时间；然而，与尝试攻击备份密码时的不确定性不同，物理获取是明确可预见的。ElcomSoft
    为 iOS 设备开发了一款物理获取工具包：
- en: '![iOS physical acquisition](img/0067.jpeg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![iOS 物理获取](img/0067.jpeg)'
- en: Starting with the release of iPhone 4S, featuring stronger security compared
    to all legacy devices, physical acquisition became increasingly difficult for
    each new generation of iOS devices. Up to this day, physical acquisition support
    of newer iOS devices is only available in Elcomsoft iOS Forensic Toolkit.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 从 iPhone 4S 发布开始，相较于所有旧设备，具备更强安全性的 iPhone 4S 使得每一代新的 iOS 设备的物理获取变得越来越困难。直到今天，Elcomsoft
    iOS Forensic Toolkit 才能支持新一代 iOS 设备的物理获取。
- en: It is important to note that unrestricted, unlimited, and guaranteed physical
    acquisition is only available for older Apple devices (refer to the *Compatibility
    matrix* section in the following chapter). Starting with iPhone 4S (or iPad 2),
    a successful physical acquisition requires the examiner to either know the user's
    original passcode (in order to install jailbreak) or have a jailbroken device.
    If a device is locked with a passcode, installing jailbreak is not possible, and
    the device cannot be acquired. In addition to jailbreak, an OpenSSH tool from
    Cydia must be installed.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，限制性、无限制和保证的物理获取仅适用于旧款 Apple 设备（请参考下一章的*兼容性矩阵*部分）。从 iPhone 4S（或 iPad 2）开始，成功的物理获取要求检查员要么知道用户的原始密码（以便安装越狱），要么拥有一台已越狱的设备。如果设备被密码锁定，则无法安装越狱，也无法获取该设备。除了越狱外，还必须从
    Cydia 安装 OpenSSH 工具。
- en: On jailbroken devices, Elcomsoft iOS Forensic Toolkit can break the original
    passcode with brute force or dictionary attack. Passcode recovery speed on jailbroken
    iPhone 5 and 5C devices is approximately 15.5 passcodes per second, allowing iOS
    Forensic Toolkit to break typical four-digit passcodes in about 10 minutes. However,
    one can easily dump the device even without the passcode; as a result, downloaded
    mail and keychain data will remain encrypted.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在越狱设备上，Elcomsoft iOS Forensic Toolkit 可以通过暴力破解或字典攻击来破解原始密码。在越狱的 iPhone 5 和 5C
    设备上，密码恢复速度大约为每秒 15.5 个密码，允许 iOS Forensic Toolkit 在大约 10 分钟内破解典型的四位数密码。然而，即使没有密码，也可以轻松地提取设备；因此，下载的邮件和钥匙串数据将保持加密状态。
- en: On iOS devices equipped with a 64-bit platform and Secure Enclave, physical
    acquisition is even more limited. On such devices, one must know the passcode
    and be able to remove it from device settings (that's in addition to jailbreaking
    the device). Even then, keychain can be extracted, but it cannot be decrypted
    on 64-bit devices.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在配备 64 位平台和 Secure Enclave 的 iOS 设备上，物理获取的限制更加严格。在此类设备上，必须知道密码并能够从设备设置中移除它（这还包括越狱设备）。即便如此，钥匙串可以提取，但在
    64 位设备上无法解密。
- en: Physical acquisition benefits
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 物理获取的好处
- en: Physical acquisition offers numerous benefits over other acquisition methods.
    Fixed timeframe and guaranteed delivery are just a few things to be mentioned.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 物理获取相较于其他获取方法提供了许多优势。固定的时间框架和保证的交付只是其中的一部分。
- en: 'Physical acquisition offers the following benefits:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 物理获取提供以下好处：
- en: Acquires complete bit-precise device images
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取完整的位精确设备镜像
- en: Unallocated space is extracted, but cannot be decrypted on recent versions of
    iOS
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提取了未分配的空间，但在较新的 iOS 版本上无法解密
- en: Decrypts keychain items and extracts device keys
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解密钥匙串项并提取设备密钥
- en: 'Guaranteed timeframe: 20 to 50 minutes for 32 GB models'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保证的时间框架：32 GB 型号需要 20 到 50 分钟
- en: Zero footprint
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 零足迹
- en: Passcode not required (for older devices or if jailbreak is installed)
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不需要密码（适用于旧设备或已安装越狱的设备）
- en: Simple four-digit passcodes recovered in 10-40 minutes (for older or jailbroken
    devices)
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单的四位数密码在 10 到 40 分钟内恢复（适用于旧设备或越狱设备）
- en: 'Physical is the only acquisition method that can extract the following information:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 物理获取是唯一可以提取以下信息的方法：
- en: '**Cached (downloaded) mail**: Regardless of the type of e-mail account, cached
    mail is not available in offline or online backups. Downloaded mail can be also
    acquired via so-called *advanced logical acquisition*, which exploits some undocumented
    iOS services and requires either a passcode or a pairing record from a trusted
    computer. Additionally, cached mail can be obtained via the 64-bit physical acquisition
    process.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缓存（下载的）邮件**：无论是什么类型的电子邮件账户，缓存的邮件在离线或在线备份中均不可用。下载的邮件也可以通过所谓的*高级逻辑获取*方式获取，该方式利用一些未文档化的
    iOS 服务，并且需要密码或来自信任计算机的配对记录。此外，缓存邮件还可以通过 64 位物理获取过程获得。'
- en: '**Geolocation data**: While iTunes and iCloud backups contain only limited
    geolocation data (for example, extracted from geotagged images), physical acquisition
    can extract significantly more detail about the user''s location. This includes
    frequent locations and location data requested by applications and system services
    on the device. Location data is requested (and stored) on certain events, such
    as using maps, calibrating the compass, ad tracking, browsing web pages, requesting
    the user''s location, looking up wireless networks, and so on. By extracting location
    data with physical acquisition, one can reconstruct the suspect''s whereabouts
    with a great deal of precision.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**地理位置信息**：虽然 iTunes 和 iCloud 备份仅包含有限的地理位置信息（例如，从地理标记图像中提取），但实体获取可以提取更多关于用户位置的详细信息。这包括常用位置以及应用程序和系统服务请求的位置信息。位置数据会在某些事件发生时请求（并存储），例如使用地图、校准指南针、广告追踪、浏览网页、请求用户位置、查找无线网络等。通过实体获取位置信息，可以精确地重建嫌疑人的行踪。'
- en: '**System logs and crash logs**: This shows the applications launched or installed.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统日志和崩溃日志**：这显示了已启动或已安装的应用程序。'
- en: '**Cached application data**: This provides cached web pages, typed addresses,
    and any Web data that is cached by third-party apps. Many iOS apps are Web-based,
    so the amount of cached data available via physical acquisition can be overwhelming.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缓存的应用数据**：这提供了缓存的网页、输入的地址和任何被第三方应用缓存的网页数据。许多 iOS 应用程序是基于 Web 的，因此通过实体获取可以获得的缓存数据量可能非常庞大。'
- en: '**Certain types of deleted data**: This includes deleted contacts, text messages,
    and iMessages (can be also extracted from SQLite databases with logical acquisition).'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**某些类型的删除数据**：包括已删除的联系人、短信和 iMessages（也可以通过逻辑获取从 SQLite 数据库中提取）。'
- en: '**Keychain**: In Apple devices, this protected storage is used to store highly
    sensitive information, such as passwords to websites and online accounts, financial
    information, and any data written to protected storage by third-party applications.
    With different classes of protection, only some keychain items can be decrypted
    when processing a backup. Physical acquisition allows decrypting the entire keychain,
    extracting all available information.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**钥匙串**：在 Apple 设备中，这个受保护的存储空间用于存储高度敏感的信息，例如网站和在线帐户的密码、财务信息以及第三方应用写入受保护存储的数据。由于有不同的保护级别，只有某些钥匙串项在处理备份时能够解密。实体获取可以解密整个钥匙串，提取所有可用信息。'
- en: '**Extended keychain acquisition**: Apple changed the keychain format in iOS
    7\. In iOS 8, Apple moved a lot more data into the keychain. Since iOS 7, devices
    registered to a certain Apple ID may contain a cached copy of the iCloud keychain
    for that Apple account (subject to user authorization). If iCloud keychain is
    available, its extraction may enable access to passwords and credit card information
    stored in other Apple devices sharing the same Apple ID.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扩展的钥匙串获取**：苹果在 iOS 7 中更改了钥匙串格式。在 iOS 8 中，苹果将更多的数据移入了钥匙串。从 iOS 7 开始，注册了特定
    Apple ID 的设备可能包含该 Apple 帐户的 iCloud 钥匙串的缓存副本（需用户授权）。如果 iCloud 钥匙串可用，则其提取可能使访问存储在其他共享相同
    Apple ID 的 Apple 设备中的密码和信用卡信息成为可能。'
- en: What's unique about physical acquisition?
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实体获取有什么独特之处？
- en: 'Is physical acquisition still worth the effort? Jailbroken iOS devices are
    rare in the wild. However, the possibility to jailbreak iOS devices is still there,
    especially considering the number of devices that have been collected as evidence
    are waiting for a long time. We still believe that physical is the way to go if
    it''s available for a given device. Here are the reasons why:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 实体获取仍然值得吗？越狱的 iOS 设备在野外非常罕见。然而，越狱 iOS 设备的可能性依然存在，尤其是考虑到许多作为证据收集的设备已经等待了很长时间。我们仍然认为，如果可行，实体获取是最佳选择。以下是原因：
- en: Apple has a new policy to **turn down** government information requests for
    devices running iOS 8 or 9, Secure Enclave or not. Apple fiercely defends its
    policy. Handing over the device to Apple will no longer result in receiving its
    full image if the device is running iOS 8 and newer, even if Apple faces legal
    action ([https://www.apple.com/privacy/government-information-requests/](https://www.apple.com/privacy/government-information-requests/))
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 苹果有一项新政策，**拒绝**来自政府的设备信息请求，无论设备是否运行 iOS 8 或 9、是否具备安全隔区。苹果坚决捍卫这一政策。如果设备运行 iOS
    8 或更高版本，将设备交给苹果后将无法获得完整镜像，即使苹果面临法律诉讼（[https://www.apple.com/privacy/government-information-requests/](https://www.apple.com/privacy/government-information-requests/)）
- en: In some regions, Apple runs certified refurbished programs, still selling refurbished
    32-bit phones at a cheaper price. For example, refurbished iPhone 4S and 5 units
    accounted for as much as 46% of all iPhones sold through retail channels in Russia
    in Q1 2015.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在某些地区，苹果运行认证翻新的项目，仍然以较低价格出售翻新的 32 位手机。例如，在 2015 年第一季度，翻新的 iPhone 4S 和 5 型号占据了俄罗斯零售渠道所有
    iPhone 销售量的 46%。
- en: Physical acquisition still returns significantly more information compared to
    any other acquisition method (remember, chip-off is not available for Apple devices).
    E-mail messages, application data, logs, location, and a lot of other data never
    makes it into backups.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相比其他任何获取方法，物理获取依然能够提供显著更多的信息（记住，苹果设备无法进行芯片提取）。电子邮件消息、应用数据、日志、位置信息以及大量其他数据永远不会进入备份中。
- en: Full keychain extraction is exclusive to physical acquisition (32-bit devices
    only). Decrypting the keychain is only possible on devices without Secure Enclave.
    This includes records encrypted with device-specific keys. While some keychain
    items can be extracted from password-protected iTunes backups, many items cannot
    be decrypted without a device-specific key.
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完整的钥匙串提取仅限于物理获取（仅限 32 位设备）。只有在没有安全加密区（Secure Enclave）的设备上才能解密钥匙串。这包括使用设备特定密钥加密的记录。虽然一些钥匙串项目可以从受密码保护的
    iTunes 备份中提取，但许多项目在没有设备特定密钥的情况下无法解密。
- en: Physical acquisition (32-bit process) can help extract the securityd (0x835)
    key from the device. This key can be used for complete keychain decryption. Additionally,
    this very key can be used to decrypt keychain items from iCloud backups and local
    iTunes backups that are not encrypted with a password.
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物理获取（32 位过程）可以帮助从设备中提取 securityd（0x835）密钥。该密钥可以用于完整的钥匙串解密。此外，该密钥还可以用于解密来自 iCloud
    备份和未加密密码的本地 iTunes 备份中的钥匙串项目。
- en: Physical acquisition of 32-bit devices returns a standard DMG disk image (HFS+
    filesystem), while the same process on 64-bit devices returns a TAR archive that
    contains the complete directory structure of the device.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对 32 位设备的物理获取返回一个标准的 DMG 磁盘镜像（HFS+ 文件系统），而对 64 位设备进行相同的操作则返回一个包含设备完整目录结构的 TAR
    存档。
- en: As far as we know, Elcomsoft iOS Forensic Toolkit is the only non-Apple tool
    that can do physical acquisition of iPhone 4S, 5, and 5C, and especially the newer
    64-bit devices.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 据我们所知，Elcomsoft iOS Forensic Toolkit 是唯一一款可以对 iPhone 4S、5 和 5C，特别是更新的 64 位设备进行物理获取的非苹果工具。
- en: The future of physical acquisition
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 物理获取的未来
- en: Unconditional physical acquisition is only supported for legacy devices. With
    every new iteration of iOS, and with every new hardware revision starting with
    iPhone 4S, Apple has been improving security, making physical acquisition increasingly
    difficult.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 无条件的物理获取仅支持旧设备。从 iPhone 4S 开始，每次 iOS 迭代和每次硬件更新，苹果都在不断增强安全性，使物理获取变得越来越困难。
- en: 'The release of iOS 8 was an important benchmark, making physical acquisition
    even tougher. The following two major things have changed with iOS 8:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: iOS 8 的发布是一个重要的分水岭，使得物理获取变得更加困难。iOS 8 中发生了以下两大变化：
- en: All user data is now stored in a container encrypted with passcode-dependent
    keys
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有用户数据现在都存储在一个依赖于密码的加密容器中。
- en: A hardware-level five-second delay is added for passcode attempts (newer hardware
    only)
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 针对密码尝试，新增了硬件级五秒延迟（仅限新款硬件）。
- en: iOS 8 moved most user data under the stricter controls. Messages, photos, contacts,
    call logs, and many other things are now stored inside a passcode-protected container.
    Once the phone is rebooted, the decryption key is lost, and the data becomes unavailable
    until the user enters the correct passcode. However, if the device is unlocked
    at least once, most data (except for the keychain) is decrypted and remains decrypted
    until the device is powered off. This is exactly what's used by the 64-bit acquisition
    process.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: iOS 8 将大多数用户数据置于更严格的控制之下。消息、照片、联系人、通话记录以及许多其他内容现在都存储在受密码保护的容器中。一旦手机重启，解密密钥就会丢失，数据变得不可访问，直到用户输入正确的密码。然而，如果设备至少解锁过一次，除了钥匙串外，大部分数据将被解密并保持解密状态，直到设备关机。这正是
    64 位获取过程所使用的方式。
- en: 'What about brute forcing the passcode? With A7- and A8-based devices (iPhone
    5S, 6, and 6 Plus), Apple introduced a hardware-level five-second delay for passcode
    attempts. Here''s what Apple has to say:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如何破解密码呢？对于 A7 和 A8 系列设备（iPhone 5S、6 和 6 Plus），苹果引入了硬件级别的五秒延迟，用于密码尝试。以下是苹果的官方说法：
- en: '*On a device with an A7 processor, the key operations are performed by the
    Secure Enclave, which also enforces a 5-second delay between repeated failed unlocking
    requests. This provides a governor against brute-force attacks in addition to
    safeguards enforced by iOS. (Source: [https://www.apple.com/br/ipad/business/docs/iOS_Security_EN_Feb14.pdf](https://www.apple.com/br/ipad/business/docs/iOS_Security_EN_Feb14.pdf).)*'
  id: totrans-157
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*在配备 A7 处理器的设备上，关键操作由安全隔离区（Secure Enclave）执行，它还会在连续的解锁失败请求之间强制执行 5 秒钟的延迟。这为暴力破解攻击提供了一个防护措施，此外还通过
    iOS 强制执行了其他安全保障。（来源：[https://www.apple.com/br/ipad/business/docs/iOS_Security_EN_Feb14.pdf](https://www.apple.com/br/ipad/business/docs/iOS_Security_EN_Feb14.pdf)。)*'
- en: While it is not exactly known whether the delay is hardcoded or can be disabled
    with software, third-party acquisition tools can no longer try more than one passcode
    every five seconds. This means that there are about 14 hours to try all possible
    combinations of a four-digit passcode. With longer and stronger numeric or alphanumeric
    passcodes, brute-force attacks are no longer feasible.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管目前尚不清楚延迟是硬编码的还是可以通过软件禁用，第三方获取工具现在每五秒钟只能尝试一次密码。这意味着，尝试所有可能的四位数密码组合大约需要 14 小时。对于更长、更强的数字或字母数字密码，暴力破解攻击已经不可行。
- en: At this time, physical acquisition is available for all existing devices equipped
    with 32-bit and 64-bit chipsets. A working jailbreak is mandatory to perform physical
    acquisition. Additionally, the passcode must be known (and removed for 64-bit
    devices) in order to acquire the maximum amount of information.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，所有配备 32 位和 64 位芯片组的现有设备都可以进行物理获取。进行物理获取时，必须使用有效的越狱。此外，必须知道密码（并且对于 64 位设备需要移除密码），才能获取最大的信息量。
- en: Physical acquisition compatibility matrix
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 物理获取兼容矩阵
- en: 'Physical acquisition is a great technique. Unfortunately, at this time, physical
    acquisition has limited availability. Newer Apple devices (starting with iPhone
    4S and iPad 2) have stronger security, which limits our ability to perform physical
    acquisition. Today, the following devices can be acquired with this method:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 物理获取是一项很好的技术。不幸的是，目前物理获取的可用性有限。较新的苹果设备（从 iPhone 4S 和 iPad 2 开始）具有更强的安全性，这限制了我们进行物理获取的能力。如今，以下设备可以通过此方法获取：
- en: iPhone 3G, 3GS, and 4 (GSM and CDMA models)
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iPhone 3G、3GS 和 4（GSM 和 CDMA 型号）
- en: iPhone 4S, 5, and 5C***
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iPhone 4S、5 和 5C***
- en: iPod Touch (1st through 4th generations)
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iPod Touch（第一至四代）
- en: iPod Touch 5th gen ***
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iPod Touch 第五代 ***
- en: iPad (1st generation only)
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iPad（仅第一代）
- en: iPad 2***
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iPad 2***
- en: iPad with Retina display (3rd and 4th generations)***
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配备 Retina 显示屏的 iPad（第三代和第四代）***
- en: iPad Mini***
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iPad Mini***
- en: 'These devices can run any of the following operating systems:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这些设备可以运行以下任何操作系统：
- en: iOS 1 through 3 (up to 3.1.3)
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS 1 至 3（最高支持 3.1.3）
- en: iOS 4.x—up to iOS 4.3.5 (up to iOS 4.2.10 for iPhone 4 CDMA)
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS 4.x——最高支持 iOS 4.3.5（iPhone 4 CDMA 支持 iOS 4.2.10）
- en: iOS 5.x
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS 5.x
- en: iOS 6.x
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS 6.x
- en: iOS 7.0
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS 7.0
- en: iOS 7.1 (with Pangu 1.2+ jailbreak)
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS 7.1（使用 Pangu 1.2+ 越狱）
- en: iOS 8.x and 9.x****
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS 8.x 和 9.x****
- en: '![Physical acquisition compatibility matrix](img/0068.jpeg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![物理获取兼容矩阵](img/0068.jpeg)'
- en: '*Devices running iOS versions prior to 3.0 do not have Data Protection enabled,
    and their user partition is not encrypted.'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '*运行 iOS 3.0 之前版本的设备没有启用数据保护，其用户分区未加密。*'
- en: '**Devices originally shipped with iOS 3.x, including those running iOS 4/5
    that were upgraded from iOS 3.x without performing `erase install` (that is, using
    the **Update** option in iTunes as opposed to **Restore**), do not have Data Protection
    enabled, and user partitions are not encrypted. Therefore, the decryption is not
    required.'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '**最初出厂时搭载 iOS 3.x 的设备，包括那些从 iOS 3.x 升级到 iOS 4/5 的设备（没有执行 `erase install`，即使用
    iTunes 中的 **更新** 选项而不是 **恢复**），没有启用数据保护，用户分区没有加密。因此，不需要进行解密。**'
- en: '***iPhone 4S, iPhone 5, iPhone 5C, iPad 2+, iPad Mini, and iPod Touch 5th gen
    can be recovered if the passcode is known or if the device is jailbroken (iOS
    5 through 9).'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '***iPhone 4S、iPhone 5、iPhone 5C、iPad 2+、iPad Mini 和 iPod Touch 第五代可以恢复，如果已知密码或设备已越狱（iOS
    5 至 9）。***'
- en: '****Physical acquisition of newer devices (iPhone 4S and newer) remains subject
    to jailbreak availability. Jailbreaking the device and recovering (and in some
    cases, removing) the passcode is mandatory as all user data is now encrypted with
    passcode-dependent keys (as a comparison, iOS 7 used encryption this strong exclusively
    for keychain and mail protection).'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '****新设备的物理采集（iPhone 4S 及更新版本）仍然受限于越狱的可用性。越狱设备并恢复（在某些情况下，移除）密码是强制性的，因为所有用户数据现在都采用依赖密码的密钥进行加密（与
    iOS 7 相比，iOS 7 仅为钥匙串和邮件保护使用了如此强的加密）。*'
- en: '*****Physical acquisition for 64-bit models (iPhone 5S/6/6S/Plus, iPad mini
    2/3/4, iPad Air / Air 2, and iPad Pro) is available via a different acquisition
    process referred to specifically as **physical acquisition for 64-bit devices**.
    Jailbreaking the device and removing passcode protection in iOS settings is mandatory.
    Acquisition of 64-bit iOS devices is covered in a separate chapter.'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '*****64 位型号的物理采集（iPhone 5S/6/6S/Plus、iPad mini 2/3/4、iPad Air / Air 2 和 iPad
    Pro）通过一种不同的采集过程进行，这个过程专门称为 **64 位设备的物理采集**。越狱设备并在 iOS 设置中移除密码保护是强制性的。64 位 iOS
    设备的采集在单独的章节中进行说明。'
- en: Unallocated space – unavailable since iOS 4
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 未分配的空间 - 自 iOS 4 起不可用
- en: Unallocated space is only available via physical acquisition if you are acquiring
    a device running iOS 3.x or older. Since these are very old versions of iOS, you
    are extremely unlikely to ever encounter one in real life. If you do, you'll be
    able to use Elcomsoft iOS Forensic Toolkit to bypass passcode protection and extract
    the complete image of the device along with unallocated space.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您获取的是运行 iOS 3.x 或更早版本的设备，则只有通过物理采集才能访问未分配的空间。由于这些是非常旧的 iOS 版本，您在现实生活中遇到的可能性极低。如果您遇到这样的设备，您可以使用
    Elcomsoft iOS Forensic Toolkit 绕过密码保护并提取设备的完整镜像，包括未分配的空间。
- en: Since iOS 4, Apple uses passcode-dependent encryption of the filesystem. iOS
    does not keep encryption keys to areas that are not occupied by files. After a
    file is deleted, the system destroys encryption keys for corresponding data blocks.
    As a result, decrypting these unallocated areas is not possible at the time of
    physical acquisition. In the case of in-house physical acquisition performed with
    Elcomsoft iOS Forensic Toolkit or any other third-party tool, unallocated disk
    space will be extracted, but not decrypted.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 自 iOS 4 以来，苹果使用依赖密码的文件系统加密。iOS 不会保存未被文件占用区域的加密密钥。在文件删除后，系统会销毁对应数据块的加密密钥。因此，在进行物理采集时，无法解密这些未分配的区域。在使用
    Elcomsoft iOS Forensic Toolkit 或其他第三方工具进行内部物理采集时，未分配的磁盘空间会被提取，但不会被解密。
- en: What *can* be recovered is SQLite records that contain deleted text messages,
    call log, and chat entries. However, the process is far from simple and requires
    the use of specialized software or SQLite-specific expertise.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 可以恢复的是包含已删除短信、通话记录和聊天记录的 SQLite 记录。然而，这个过程远非简单，需要使用专业软件或 SQLite 特定的专业知识。
- en: Sending device to Apple
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发送设备到苹果
- en: 'In its privacy policy ([https://www.apple.com/privacy/government-information-requests/](https://www.apple.com/privacy/government-information-requests/)),
    Apple clearly states the following:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在其隐私政策中（[https://www.apple.com/privacy/government-information-requests/](https://www.apple.com/privacy/government-information-requests/)），苹果明确表示以下内容：
- en: '*On devices running iOS 8, your personal data such as photos, messages (including
    attachments), email, contacts, call history, iTunes content, notes, and reminders
    is placed under the protection of your passcode. Unlike our competitors, Apple
    cannot bypass your passcode and therefore cannot access this data. So it''s not
    technically feasible for us to respond to government warrants for the extraction
    of this data from devices in their possession running iOS 8.*'
  id: totrans-190
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*在运行 iOS 8 的设备上，您的个人数据，如照片、信息（包括附件）、电子邮件、联系人、通话历史记录、iTunes 内容、备忘录和提醒事项，都受到您的密码保护。与我们的竞争对手不同，苹果无法绕过您的密码，因此无法访问这些数据。因此，从技术上讲，我们无法回应政府要求从其持有的运行
    iOS 8 的设备中提取这些数据的命令。*'
- en: Analyzing the way the system works on newer 64-bit devices, we tend to believe
    that the preceding statement is true.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 分析新款 64 位设备的系统工作方式后，我们倾向于相信前述说法是正确的。
- en: While it is not currently possible to request a decrypted device image from
    Apple due to their new policy based on the technical features of iOS 8, law enforcement
    agencies can still send Apple devices running an older version of iOS in order
    to obtain their unencrypted images. In such cases, Apple provides a full decrypted
    image of the device (with keychains being a possible exception if the passcode
    is not known).
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 iOS 8 的技术特点以及苹果公司新政策的限制，目前无法向苹果请求已解密的设备镜像，但执法机构仍然可以将运行旧版本 iOS 的苹果设备送交苹果，以获取其未加密的镜像。在这种情况下，苹果会提供设备的完整解密镜像（如果不知道密码，钥匙串可能会成为例外）。
- en: The role of passcode
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 密码的作用
- en: Passcode is key to iOS security. Even if it's just a simple PIN number consisting
    of only four digits, in reality, a passcode is key to some of the strongest security
    models in the mobile world. This passcode, combined with a unique and very long
    string of binary data (hardware encryption key), is used to generate a unique
    and extremely strong encryption key. The device then encrypts the device's sensitive
    data, including text messages, e-mail, photos, and so on, using this encryption
    key and a government-standard AES encryption algorithm.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 密码是 iOS 安全性的核心。即使它只是一个由四个数字组成的简单 PIN 码，实际上，密码是移动世界中最强大安全模型之一的关键。这个密码与一个独特且非常长的二进制数据字符串（硬件加密密钥）结合，用于生成一个独特且极其强大的加密密钥。然后，设备使用这个加密密钥和政府标准的
    AES 加密算法对设备的敏感数据进行加密，包括短信、电子邮件、照片等。
- en: It is important to note that it is impossible to generate the encryption key
    without having access to the device's hardware encryption key, and it is impossible
    to get access to that hardware encryption key even after disassembling the device
    to small bits. Without the correct passcode, passcode-encrypted data will remain
    encrypted, even if the complete image is extracted.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，如果没有访问设备的硬件加密密钥，就无法生成加密密钥，而且即使将设备拆解成小块，也无法获得该硬件加密密钥。如果没有正确的密码，基于密码加密的数据将保持加密状态，即使完整的镜像已经被提取出来。
- en: In other words, some parts of the iOS device are likely to remain encrypted
    unless the original passcode is known (this is especially true with the latest
    iOS releases). Recovering the original passcode is only possible on the device
    itself.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，除非已知原始密码，否则设备的某些部分可能仍然会被加密（这在最新的 iOS 版本中尤为明显）。恢复原始密码只能在设备本身进行。
- en: Older versions of iOS did not encrypt all user data using the passcode. We could
    break into those devices and retrieve almost everything even without a passcode.
    This is no longer the case with iOS 8.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 旧版本的 iOS 并未使用密码加密所有用户数据。即使没有密码，我们也能破解这些设备并几乎获取所有数据。但 iOS 8 后情况发生了变化。
- en: 'The following chart summarizes whether you require a passcode for successful
    acquisition:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表总结了成功获取数据是否需要密码：
- en: '**iOS 1.x through 3.x**: Here, the passcode is not required. All data is accessible.
    The passcode is instantly recovered and displayed.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**iOS 1.x 至 3.x**：在这些版本中，不需要密码。所有数据都可以访问。密码会立即被恢复并显示。'
- en: '**iOS 4.0 through 7.x**: The passcode is not required, but highly recommended.
    Some data is protected with passcode-dependent keys:'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**iOS 4.0 至 7.x**：密码不是强制要求的，但强烈建议使用。某些数据通过基于密码的密钥进行保护：'
- en: E-mail messages
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子邮件消息
- en: Keychain items
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 钥匙串项目
- en: Certain third-party application data if the app requested secure access
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 某些第三方应用程序数据，如果该应用程序请求了安全访问权限
- en: '**iOS 8 and 9**: The passcode is mandatory for successful acquisition. Most
    user information is protected with passcode-based keys.'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**iOS 8 和 9**：成功获取数据需要输入密码。大多数用户信息都通过基于密码的密钥进行保护。'
- en: Physical acquisition of iOS 8 and 9
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 物理获取 iOS 8 和 9 的数据
- en: 'iOS 9 is the latest and most secure version of Apple''s mobile operating system.
    According to Apple, by February 2016, approximately 76% of Apple customers already
    upgraded to the latest iOS, while 17% of users still used iOS 8\. Only 7% of devices
    were running iOS 7 or earlier (source: [https://developer.apple.com/support/app-store/](https://developer.apple.com/support/app-store/)).'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: iOS 9 是苹果移动操作系统中最新且最安全的版本。根据苹果的数据，到 2016 年 2 月，大约 76% 的苹果客户已升级到最新的 iOS，而 17%
    的用户仍在使用 iOS 8。仅有 7% 的设备在运行 iOS 7 或更早版本（来源：[https://developer.apple.com/support/app-store/](https://developer.apple.com/support/app-store/)）。
- en: 'In iOS 8, Apple further strengthened the security of iOS devices. The 8th and
    9th generations of Apple''s mobile operating system encrypt more information than
    ever. Data encryption is not new on Apple devices. It''s been in place for a number
    of years. What is new is the amount of data the phone will store in the encrypted
    form. In iOS 8, Apple moved things such as e-mails, messages, photos, and videos
    into the encrypted part of the phone. Once again, a lot of information that was
    previously accessible (and highly valuable for investigations) is moved into passcode-protected
    part of the phone, making physical acquisition of a device without knowing the
    correct passcode nearly useless. Apple claims iOS 8 and newer to be so secure
    that the company is to deny government requests to extract information even if
    provided with a working device (source: [https://www.apple.com/privacy/government-information-requests/](https://www.apple.com/privacy/government-information-requests/)).'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在 iOS 8 中，Apple 进一步加强了 iOS 设备的安全性。苹果移动操作系统的第 8 和第 9 代加密了比以往更多的信息。数据加密在苹果设备上并不新鲜，这项技术已经实施了多年。新的变化在于手机加密存储的数据量。在
    iOS 8 中，苹果将电子邮件、信息、照片和视频等内容移入了手机的加密区域。再次强调，许多以前可以访问的数据（且对调查非常有价值）被移动到了受密码保护的部分，这使得在不知密码的情况下进行物理获取几乎毫无意义。苹果宣称，iOS
    8 及更高版本的安全性极高，以至于即使政府提供了有效的设备，也将拒绝提取信息的请求（来源：[https://www.apple.com/privacy/government-information-requests/](https://www.apple.com/privacy/government-information-requests/)).
- en: From a practical standpoint, this means that you must break a passcode in order
    to properly image a device running iOS 8 or 9\. In order to break a passcode on
    one of the newer devices (iPhone 4S, iPad 2, and their newer generations), you'll
    need to have the device jailbroken or unlocked. Breaking a passcode is still possible
    on non-jailbroken devices earlier than iPhone 4S and on the original iPad. At
    this time (February 2016), the only forensic tool providing physical acquisition
    support for iOS 8 and 9 devices is Elcomsoft iOS Forensic Toolkit. The tool supports
    32-bit and 64-bit devices that are either jailbroken or can be jailbroken by the
    investigator. Without a jailbreak (and not knowing the passcode), the ONLY information
    that remains accessible via physical acquisition is call log and text message
    history. In addition, when performing physical acquisition of 64-bit devices,
    the passcode must be removed in device Security settings prior to acquisition.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 从实际操作角度来看，这意味着你必须破解密码才能正确提取运行 iOS 8 或 9 的设备镜像。要破解新版设备（如 iPhone 4S、iPad 2 及其更新型号）的密码，设备必须已经越狱或能被调查员越狱。对于
    iPhone 4S 之前的未越狱设备以及原版 iPad，破解密码仍然是可能的。截至目前（2016 年 2 月），唯一提供 iOS 8 和 9 设备物理获取支持的法医工具是
    Elcomsoft iOS Forensic Toolkit。该工具支持 32 位和 64 位设备，这些设备要么已经越狱，要么能够被调查员越狱。如果设备没有越狱（且不知道密码），通过物理获取能够访问的唯一信息是通话记录和短信历史。此外，在进行
    64 位设备的物理获取时，必须先在设备的安全设置中移除密码。
- en: 'More information on how Apple encrypts information and what''s changed in iOS
    8 is available at the following URLs:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 关于苹果如何加密信息以及 iOS 8 中发生了哪些变化的更多信息，请访问以下网址：
- en: '[http://www.slate.com/articles/technology/future_tense/2014/09/ios_8_encryption_why_apple_won_t_unlock_your_iphone_for_the_police.html](http://www.slate.com/articles/technology/future_tense/2014/09/ios_8_encryption_why_apple_won_t_unlock_your_iphone_for_the_police.html)'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.slate.com/articles/technology/future_tense/2014/09/ios_8_encryption_why_apple_won_t_unlock_your_iphone_for_the_police.html](http://www.slate.com/articles/technology/future_tense/2014/09/ios_8_encryption_why_apple_won_t_unlock_your_iphone_for_the_police.html)'
- en: '[http://blog.cryptographyengineering.com/2014/10/why-cant-apple-decrypt-your-iphone.html?m=1](http://blog.cryptographyengineering.com/2014/10/why-cant-apple-decrypt-your-iphone.html?m=1)'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://blog.cryptographyengineering.com/2014/10/why-cant-apple-decrypt-your-iphone.html?m=1](http://blog.cryptographyengineering.com/2014/10/why-cant-apple-decrypt-your-iphone.html?m=1)'
- en: '![Physical acquisition of iOS 8 and 9](img/0069.jpeg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![iOS 8 和 9 的物理获取](img/0069.jpeg)'
- en: Tools for iOS physical acquisition
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iOS 物理获取工具
- en: Physical acquisition of iOS devices requires the use of a dedicated acquisition
    tool. Elcomsoft offers iOS Forensic Toolkit ([http://www.elcomsoft.com/eift.html](http://www.elcomsoft.com/eift.html)),
    a tool offering physical-acquisition support for more models than any competing
    product.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 物理获取 iOS 设备需要使用专用的获取工具。Elcomsoft 提供了 iOS Forensic Toolkit ([http://www.elcomsoft.com/eift.html](http://www.elcomsoft.com/eift.html))，这款工具支持比任何竞争产品更多型号的物理获取。
- en: 'Note that the following page contains videos demonstrating how to use the toolkit
    to acquire an iPhone:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，以下页面包含了展示如何使用工具包来获取 iPhone 的视频：
- en: '[http://www.elcomsoft.com/ios_forensic_toolkit_video.html](http://www.elcomsoft.com/ios_forensic_toolkit_video.html)'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.elcomsoft.com/ios_forensic_toolkit_video.html](http://www.elcomsoft.com/ios_forensic_toolkit_video.html)'
- en: Tutorial – physical acquisition with Elcomsoft iOS Forensic Toolkit
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 教程 – 使用 Elcomsoft iOS Forensic Toolkit 进行物理获取
- en: Let's use iOS Forensic Toolkit to extract the content of an iPhone. However,
    first let's take a look at what actually happens at the time the tool performs
    physical acquisition.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 iOS Forensic Toolkit 提取 iPhone 的内容。但首先，我们先来看看当工具进行物理获取时，实际发生了什么。
- en: What the does the tool do?
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 该工具的功能是什么？
- en: The first step of the acquisition process involves putting the device into a
    so-called **DFU** mode (**Debug and Firmware Upgrade**) with a combination of
    Home and Power buttons. Elcomsoft iOS Forensic Toolkit displays tips on how to
    put the device to this mode.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 获取过程的第一步是将设备置于所谓的**DFU**模式（**调试和固件升级**模式），通过按住 Home 和 Power 按钮的组合来实现。Elcomsoft
    iOS Forensic Toolkit 会显示如何将设备进入此模式的提示。
- en: Once the device is in its DFU mode, we can use its *F* function, emulating a
    firmware upgrade. However, instead of Apple's original firmware, the Toolkit attempts
    to load an altered one. The device will verify the new firmware by checking its
    digital signature via bootrom functions (these are read-only and can't be switched
    off). Now, if we're acquiring an iPhone 4 or earlier, the Toolkit can use a bootrom
    exploit that allows skipping the check and sideloading the altered firmware into
    device volatile memory (RAM). In this case, device storage remains unaltered as
    all operations are performed exclusively in the device's volatile memory.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设备进入 DFU 模式，我们可以使用其*F*功能，模拟固件升级。然而，与其加载苹果原厂固件不同，工具包尝试加载经过修改的固件。设备将通过引导 ROM
    功能验证新的固件的数字签名（这些是只读的，无法关闭）。现在，如果我们正在获取 iPhone 4 或更早的版本，工具包可以利用一个引导 ROM 漏洞，跳过检查，并将修改过的固件加载到设备的易失性内存（RAM）中。在这种情况下，设备存储保持不变，因为所有操作仅在设备的易失性内存中进行。
- en: If we are acquiring an iPhone 4S, the bootrom exploit that we could use with
    earlier iPhones is not available. As a result, the Toolkit uses a different method
    that only works if the device is jailbroken. With this method, the Toolkit connects
    to the device via OpenSSH and installs and launches acquisition tools. This method
    alters the content of the device by installing acquisition tools. This must be
    taken into account and documented appropriately in order to keep the process forensically
    sound.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们正在获取 iPhone 4S，之前可以用于旧款 iPhone 的引导 ROM 漏洞就无法使用。因此，工具包使用另一种方法，该方法仅在设备已越狱的情况下有效。在此方法中，工具包通过
    OpenSSH 连接到设备并安装和启动获取工具。该方法会通过安装获取工具改变设备内容。必须考虑到这一点并妥善记录，以确保过程具有法医证据的有效性。
- en: Prerequisites
  id: totrans-223
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 前提条件
- en: You'll need a working iOS device, a compatible cable to connect it to your computer,
    and a copy of Elcomsoft iOS Forensic Toolkit (which requires a USB dongle to operate).
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一台正常工作的 iOS 设备，一个兼容的 USB 电缆来将其连接到计算机，并且需要一份 Elcomsoft iOS Forensic Toolkit（需要
    USB 加密狗才能操作）。
- en: 'Please note the following:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意以下事项：
- en: The imaging tool must be installed in order to acquire the device
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须安装成像工具才能获取设备
- en: If no jailbreak is installed, you'll have to enter the device into the DFU mode
    (Device Firmware Upgrade mode) with a combination of Home and Power keys
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果未安装越狱，您需要通过按住 Home 和 Power 键的组合将设备置于 DFU 模式（设备固件升级模式）
- en: Physical acquisition for Apple's 64-bit devices is available via a separate
    process (refer to *Acquiring 64-bit Apple devices*)
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于苹果的 64 位设备，可以通过单独的过程进行物理获取（请参见*获取 64 位苹果设备*）
- en: Passcodes can only be recovered in the DFU mode
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有在 DFU 模式下才能恢复密码
- en: '**Step 0 - connecting the device**: Connect the Apple device to your computer
    using the appropriate USB cable. Launch iOS Forensic Toolkit.'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 0 - 连接设备**：使用适当的 USB 电缆将苹果设备连接到您的计算机。启动 iOS Forensic Toolkit。'
- en: '**Step 1 - entering the DFU mode**: If you are imaging a device for which there
    is a known way to enter the DFU mode, consider it luck. In iOS Forensic Toolkit,
    enter `1`, as shown in the following screenshot:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 1 - 进入 DFU 模式**：如果您正在成像一台已知可以进入 DFU 模式的设备，可以认为这是幸运。在 iOS Forensic Toolkit
    中，输入 `1`，如下图所示：'
- en: '![Prerequisites](img/0070.jpeg)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![前提条件](img/0070.jpeg)'
- en: 'If you are imaging a newer device, such as iPhone 4S, iPhone 5, iPhone 5C,
    iPad 2, iPad 3, iPad 4, and newer), physical acquisition will only be available
    if you either know the correct passcode or if the device is jailbroken. To acquire
    such a device, skip directly to step 3:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在获取较新的设备，如iPhone 4S、iPhone 5、iPhone 5C、iPad 2、iPad 3、iPad 4及更新型号），则只有在您知道正确的密码或设备已越狱的情况下，物理获取才可用。要获取此类设备，请直接跳到步骤3：
- en: '![Prerequisites](img/0071.jpeg)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![前提条件](img/0071.jpeg)'
- en: 'You''ll see interactive instructions on how to enter your device into the DFU
    mode:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到如何将设备进入DFU模式的互动指南：
- en: '![Prerequisites](img/0072.jpeg)![Prerequisites](img/0073.jpeg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![前提条件](img/0072.jpeg)![前提条件](img/0073.jpeg)'
- en: It's a bit tricky to master this in the first try. Take your time and make several
    attempts until you succeed. When you have your device in the DFU mode, go to step
    2.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一次尝试时可能有点难掌握。请花时间并多次尝试，直到成功。当您的设备进入DFU模式时，继续执行步骤2。
- en: Note that having the device in the DFU mode or having a jailbroken/unlocked
    unit is essential to recover the original passcode.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，将设备置于DFU模式或拥有已越狱/解锁的设备对于恢复原始密码至关重要。
- en: '**Step 2 - loading RAM disk**: During this step, you''ll be loading the acquisition
    code into the Apple device. The code will be loaded into the device''s volatile
    memory (RAM) and will not modify any of its content. To load the RAM disk, perform
    either of the following actions:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤2 - 加载RAM磁盘**：在此步骤中，您将把获取代码加载到Apple设备中。该代码将被加载到设备的易失性内存（RAM）中，不会修改任何内容。要加载RAM磁盘，可以执行以下任一操作：'
- en: Agree to load RAM disk when prompted
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在提示时同意加载RAM磁盘
- en: 'Press `2` on the main screen and follow the instructions:'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在主屏幕上按`2`并按照提示操作：
- en: '![Prerequisites](img/0074.jpeg)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![前提条件](img/0074.jpeg)'
- en: The device will display the Elcomsoft logo when RAM disk is loaded.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 加载RAM磁盘时，设备会显示Elcomsoft的标志。
- en: Note that, starting with iOS 4, loading RAM disk is a mandatory prerequisite
    for recovering the passcode.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，从iOS 4开始，加载RAM磁盘是恢复密码的必要前提条件。
- en: '![Prerequisites](img/0075.jpeg)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![前提条件](img/0075.jpeg)'
- en: '**Step 3 - recovering the passcode**: This step used to be optional a year
    ago. Today, making an attempt to recover a passcode is mandatory to obtain any
    meaningful information. If you already have the correct passcode, skip to the
    next step.'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤3 - 恢复密码**：这一过程在一年前还是可选的。今天，尝试恢复密码是获取任何有意义信息的必要步骤。如果您已经有了正确的密码，可以跳到下一步。'
- en: 'Whether you need to recover the passcode to acquire the user data depends on
    the version of iOS used in the device:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 是否需要恢复密码以获取用户数据，取决于设备所使用的iOS版本：
- en: '**iOS 1.x through 3.x**: The passcode is not required. All data is accessible.
    The passcode is instantly recovered and displayed.'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**iOS 1.x到3.x**：无需密码。所有数据都可以访问。密码会立即恢复并显示。'
- en: '**iOS 4.0 through 7.x**: The passcode is not required, but highly recommended.
    Some data is protected with passcode-dependent keys:'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**iOS 4.0到7.x**：密码不是必需的，但强烈推荐。部分数据通过依赖密码的密钥进行保护：'
- en: E-mail messages
  id: totrans-250
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子邮件消息
- en: Keychain items
  id: totrans-251
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 钥匙串项目
- en: Certain third-party application data if the app requested secure access
  id: totrans-252
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 某些第三方应用程序的数据，如果该应用请求了安全访问
- en: '**iOS 8 and 9**: The passcode is mandatory for successful acquisition. Most
    user information is protected with passcode-based keys.'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**iOS 8和9**：密码是成功获取的必要条件。大多数用户信息都通过基于密码的密钥进行保护。'
- en: If you read the earlier chapters, you will know that the passcode is key to
    Apple's security. In older devices and early versions of iOS, the passcode was
    used to generate a secure encryption key protecting the information stored in
    Apple's secure storage, the keychain. Even in older devices and early releases
    of iOS, protected data included bits such as account passwords, credit card data,
    Wi-Fi passwords, and a lot of other information essential to an investigation.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您阅读过前面的章节，您会知道密码是Apple安全性的关键。在旧设备和早期版本的iOS中，密码用于生成保护存储在Apple安全存储区（钥匙串）中的信息的加密密钥。即使在旧设备和早期的iOS版本中，保护的数据也包括账户密码、信用卡信息、Wi-Fi密码以及对调查至关重要的其他信息。
- en: With the release of iOS 7 and subsequent upgrade to iOS 8 (and iOS 9 later on),
    the role of the passcode has increased dramatically. In modern devices running
    iOS 8 or 9, passcode-protected partition now stores more information than ever.
    In fact, pretty much everything of interest is now stored on a passcode-protected
    disk. E-mail and text messages, passwords, picture and video captures with the
    phone's camera, and a lot of other information is now encrypted. As a result,
    imaging the device without having a passcode today will return much less information
    than it did a year ago. In order to decrypt information stored in the protected
    area, one must first recover the passcode.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
- en: Due to the way Apple has designed and implemented its security model, recovering
    passcodes is only possible using the original device. While using a computer or
    a cluster of GPU-accelerated workstations to recover passcodes sounds tempting,
    it is impossible even in theory.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
- en: Apple devices can use standard numeric (four-digit PIN), long numeric, and full
    alphanumeric passcodes. These types of passcodes can be recovered with iOS Forensic
    Toolkit by either brute forcing or using a dictionary attack (if breaking an alphanumeric
    passcode).
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
- en: Note that you'll need to load the RAM disk first (as described in the previous
    step) to recover passcodes for devices running iOS 4 or later.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
- en: Another thing to note is the speed of breaking the passcode. Passcode recovery
    is slow! It's slow on purpose, by design. Apple carefully balanced algorithms
    used in its various devices, apparently targeting the time required to verify
    a passcode at approximately 80 ms per passcode. As a result, recovering a four-digit
    passcode may take around 35 minutes; brute forcing will take a little longer,
    and alphanumeric passcode may take forever.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
- en: 'With iOS Forensic Toolkit, recovering a passcode is engaged by entering the
    `3` (**Get Passcode**) command on the home screen. You''ll see the following window:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
- en: '![Prerequisites](img/0076.jpeg)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
- en: You'll have the option to (**1**) view the type of passcode (numeric four-digit,
    numeric long, alphanumeric), (**2**) brute force a four-digit PIN, (**3**) perform
    a dictionary attack on an alphanumeric passcode, or (**4**) use the fully manual
    option.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
- en: 'While we''ve seen some limited success in recovering longer alphanumeric passcodes,
    majority of iPhone users opt for simple four-digit passcodes. Brute forcing such
    passcodes by enumerating all of the possible combinations takes approximately
    35 minutes on iPhone 4S. After entering `2`, you''ll see the progress report window.
    The currently tried passcode will be displayed:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
- en: '![Prerequisites](img/0077.jpeg)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
- en: 'Once the correct passcode is discovered, it will be displayed. Write it down
    and press *Enter* to continue to extract device keys:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
- en: '![Prerequisites](img/0078.jpeg)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
- en: '**Step 4 - extracting device keys**: In order to be able to decrypt information
    stored on the encrypted partition (as a reminder, this includes user passwords,
    e-mail, messages, and so on), you will need to obtain device keys and keychain
    data. In iOS Forensic Toolkit, use the `4` (`GET KEYS)` command. This action is
    mandatory, you cannot skip it. Without the keys, neither the keychain nor the
    device image can be decrypted:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
- en: '![Prerequisites](img/0079.jpeg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
- en: To obtain device keys and keychain, enter `4`.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to successfully obtain device keys and keychain data, you will need
    to provide the device passcode (if non-empty):'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
- en: '![Prerequisites](img/0080.jpeg)![Prerequisites](img/0081.jpeg)'
  id: totrans-271
  prefs: []
  type: TYPE_IMG
- en: '**Step 5 - decrypting keychain items**: Some of the most valuable information
    stored in the iPhone, iPod Touch, or iPad is kept in the system''s protected storage
    called keychain. Secured information is protected with strong passcode-dependent
    encryption keys (that''s why you need to recover the passcode in order to obtain
    these keys and decrypt the keychain). With every iOS release, Apple moves more
    data to keychain storage. Depending on the iOS version, protected information
    may include e-mail account passwords, messages, Wi-Fi passwords, passwords entered
    into websites and certain third-party apps, financial information, documents,
    and so on.'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
- en: 'Keychain decryption is instant. To decrypt the keychain, enter `5` on the tools''
    main screen:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
- en: '![Prerequisites](img/0082.jpeg)'
  id: totrans-274
  prefs: []
  type: TYPE_IMG
- en: '**Step 6 - performing acquisition**: When capturing an iOS device via a physical
    link, you will have two distinct options:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
- en: In option 1, you can capture the entire image of the device (the `IMAGE DISK`
    command, `6`)
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In option 2, you can download user's files as a UNIX-style tarball (the `TAR
    FILES` command, `8`)
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The option to download individual files is sometimes referred to as **logical
    acquisition**, yet we prefer using that term for the acquisition method involving
    the analysis of offline backup produced with Apple iTunes. Downloading individual
    files is a faster option with on-the-fly decryption. However, if you opt to download
    the files, you'll be missing any information that might be stored in unallocated
    disk space.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, the `IMAGE DISK` command performs the complete physical imaging
    of the device. When we talk about *physical acquisition*, we usually mean this
    option. With disk imaging, you'll be downloading a bit-precise copy of the device;
    no on-the-fly decryption is performed. As a result, you'll need to decrypt the
    disk later by using the `DECRYPT DISK` tool (command `7`).
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s see what happens when you enter `6` (`IMAGE DISK`). First, you''ll see
    the list of available partitions. Typically, you''ll see the **System** partition
    (which is normally unencrypted, and contains system files and applications) and
    the **User** partition (which would be normally encrypted). To select a partition
    to image, enter its number in the prompt:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
- en: '![Prerequisites](img/0083.jpeg)'
  id: totrans-281
  prefs: []
  type: TYPE_IMG
- en: 'After you''ve selected a partition to image, the acquisition process will begin
    immediately. It may take around 35 to 90 minutes to image the device, depending
    on the model and storage capacity. If you opt for filesystem-level acquisition
    as in the `8` command, the time required to acquire the device will depend on
    the amount of user data actually stored in the device. If the user does not have
    a lot of data, the acquisition in that mode can be really fast:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
- en: '![Prerequisites](img/0084.jpeg)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
- en: '**Step 7 - decrypting the disk**: After acquiring the disk image in the previous
    step, you''ll end up with one unencrypted (system) and most probably an encrypted
    (user) partition. In order to be able to analyze user data, you''ll need to decrypt
    the partition first. The decryption is performed by choosing the `7` command (`DECRYPT
    DISK`) from the main window:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
- en: '![Prerequisites](img/0085.jpeg)![Prerequisites](img/0086.jpeg)![Prerequisites](img/0087.jpeg)'
  id: totrans-285
  prefs: []
  type: TYPE_IMG
- en: That's it! You just acquired an iOS device and have the data ready for analysis.
    The data is saved in a standard DMG image. To analyze information, you can use
    one of the many third-party forensic tools. If you are using a Mac PC, in order
    to manually access information contained in the DMG image, you can simply mount
    the image into the system (read-only). If you are using a Windows PC, you will
    need to install an HFS+ driver, such as Paragon HFS+, available at [http://www.paragon-software.com/home/hfs-windows/](http://www.paragon-software.com/home/hfs-windows/)
    . Either way, after mounting the image, you will be able to access the individual
    files and databases available in the device.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
- en: Acquiring 64-bit Apple devices
  id: totrans-287
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Elcomsoft iOS Forensic Toolkit is the only tool on the market (as of December
    2015) that allows physical acquisition of Apple's 64-bit devices. The tool comes
    with the ability of acquiring information from jailbroken 64-bit iPhones, such
    as Apple iPhone 5S, 6/6S/Plus, and 64-bit iPads, including iPad mini 2-4, iPad
    Air/Air2, and iPad Pro.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
- en: The 64-bit acquisition process differs significantly from the old methods that
    were used to extract data from 32-bit devices. The new method is backward compatible
    with 32-bit iPhones and iPads; however, if you have a choice, we recommend sticking
    with the old and proven acquisition routine if you've got a 32-bit iPhone to extract.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
- en: Note that a working jailbreak is absolutely mandatory for the new acquisition
    process to work.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
- en: If you don't want to read the theory, you can skip directly to the *Performing
    physical acquisition on a 64-bit iOS device* section.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
- en: Comparing 64-bit process and traditional physical acquisition
  id: totrans-292
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In order to successfully operate on Apple's 64-bit devices, the new acquisition
    process must work within the limits of the target platform. Apple's 64-bit platform
    implements much stricter security compared to legacy devices based on older hardware;
    as a result, there are certain limitations to 64-bit acquisition that one never
    has to deal with when acquiring 32-bit hardware.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
- en: The first difference between the two acquisition methods lies in the output
    data format. The 32-bit physical acquisition process returns the complete bit-precise
    image of the device by accessing the data in raw mode. The 64-bit platform implements
    stronger protection, making it possible to dump a disk image, but it never releases
    the encryption keys required to decrypt files. For this reason, the 64-bit acquisition
    process is limited to using higher-level access for capturing the filesystem in
    the form of a Unix-style TAR archive. Mind you, the archive contains the same
    data as a raw dump produced by the traditional process. However, keychain items
    cannot be decrypted. Analyzing the filesystem image is also a bit more complicated
    compared to processing the full DMG image, as DMG images are supported by virtually
    all mobile forensic tools, while filesystem dumps are not as widely supported.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
- en: Here comes the second difference between the two acquisition methods. The 64-bit
    process can *extract* the keychain database from the device. However, with no
    access to the securityd device key, the new process cannot *decrypt* the keychain.
    Therefore, stored Web forms and passwords, as well as other data put into keychain,
    will remain inaccessible (at least for the time being).
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
- en: Finally, you must unlock the device with the correct passcode and remove passcode
    protection in iOS settings before the extraction.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
- en: Finally, the 64-bit acquisition process is significantly more invasive, compared
    to the old 32-bit process. This means that every step of the acquisition process
    and every modification done to the content of the device must be carefully documented;
    otherwise, extracted evidence may not be admissible.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
- en: 'To sum it up, the 64-bit process has the following limitations compared to
    physical acquisition for 32-bit devices:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
- en: Keychain extracted, but *not* decrypted
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HFS+ filesystem image (64-bit) versus bit-precise image (32-bit)
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Passcode must be removed in iOS settings prior to acquisition (64-bit)
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Highly invasive, requires careful documentation for evidence to remain admissible
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Supported devices and iOS versions
  id: totrans-303
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Hardware wise, the 64-bit acquisition process supports all of the following
    devices regardless of the version of iOS they are running (assuming that a working
    jailbreak exists for this version of iOS):'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
- en: iPhone 5S, 6, 6 Plus, 6S, and 6S Plus
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iPad Air, Air 2, and Pro
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iPad mini Retina and iPad mini 3 and 4
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iPod Touch 6th gen
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The new acquisition process requires unrestricted access to the filesystem,
    and therefore, it relies heavily on a device being jailbroken. Since new versions
    of iOS are a constant challenge for jailbreakers, you may be out of luck (at least
    for a while) if you encounter a device running the latest version of iOS that
    does not have a jailbreak so far. At this time (December 2015), iOS 9.1 and 9.2
    Beta still don't have a working jailbreak, so you will be unable to use the new
    acquisition process on any of these devices.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
- en: Performing physical acquisition on a 64-bit iOS device
  id: totrans-310
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The internals of the 64-bit acquisition process differ significantly from how
    it works on 32-bit devices. As a result, an extra step is required to perform
    physical acquisition on an iPhone 5S, 6/6S, or any of the Plus versions.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 1 - on your iOS device**:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
- en: '**Ensure that the device is jailbroken**: Physical acquisition for 64-bit devices
    is exclusive to jailbroken iPhones, iPads, and iPods. If it is not jailbroken,
    proceed to *Install jailbreak*.'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If OpenSSH is not installed, install it from Cydia ([https://cydia.saurik.com/openssh.html](https://cydia.saurik.com/openssh.html))
    or by following the instructions at [http://www.cydiaos.com/install-openssh-on-iphone-ipod-without-cydia/](http://www.cydiaos.com/install-openssh-on-iphone-ipod-without-cydia/).
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Unlock the device by supplying the correct passcode.
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If the passcode is empty, go to iOS Forensic Toolkit.
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Disable passcode protection in iOS Settings.
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'iOS 8 (no Touch ID): **Settings** | **Passcode Lock** | **Turn Passcode Off**:'
  id: totrans-318
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Performing physical acquisition on a 64-bit iOS device](img/0088.jpeg)'
  id: totrans-319
  prefs: []
  type: TYPE_IMG
- en: '**Step 2 - install jailbreak**'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
- en: Jailbreaking iOS 8 and 9 is a cumbersome process without guaranteed outcome.
    Depending on the version of iOS, you may need to follow different steps and use
    different tools to jailbreak.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
- en: For example, installing a Pangu jailbreak on iOS 9.0.1-9.0.2 may get stuck at
    85% with an error message. If that happens, you will need to open the Photos app
    after the first reboot (and before putting the device into the **Airplane mode**)
    to ensure that at least one photo exists on the device. Opening (and leaving)
    the Photos app may be enough to carry on; however, there can be other numerous
    obstacles in installing jailbreak.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
- en: '**What you need to know**'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
- en: In order to jailbreak an iOS device, you'll need to disable several protection
    layers. In order to do this, you may need to specify the correct Apple ID password
    and enter the correct passcode (if either or both protection layers are enabled).
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
- en: '**Preparing for jailbreak**'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
- en: Before jailbreaking, you will need to unlock the iOS device using the correct
    passcode
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Check whether **Find My Phone** is enabled. If it is, in iOS Settings, disable
    **Find My Phone** (Apple ID password required):'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Performing physical acquisition on a 64-bit iOS device](img/0089.jpeg)'
  id: totrans-328
  prefs: []
  type: TYPE_IMG
- en: 'TaiG and Pangu jailbreaks require disabling Touch ID and passcode protection.
    If you haven''t disabled them during the previous step, do it now. Check whether
    passcode protection is enabled (if you had to enter a passcode in order to unlock
    the device, it is.) If enabled, disable **Touch ID** and **Passcode** in iOS **Settings**
    (original passcode required):'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
- en: '![Performing physical acquisition on a 64-bit iOS device](img/0090.jpeg)'
  id: totrans-330
  prefs: []
  type: TYPE_IMG
- en: '**Install jailbreak**'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
- en: For iOS 8.x (all versions), use TaiG jailbreak and follow the instructions at
    [http://www.taig.com/en/](http://www.taig.com/en/) .
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
- en: For iOS 9 through 9.0.2, use Pangu jailbreak and follow the instructions at
    [http://en.pangu.io/](http://en.pangu.io/).
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
- en: For iOS 9.1 and 9.2, at this time, no jailbreak is available (may change in
    the future).
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 3 - connect the device**'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
- en: Once your device is jailbroken, you may connect it to your computer via the
    Lightning cable. Launch iOS Forensic Toolkit. The majority of options are unavailable
    for 64-bit devices. The 64-bit acquisition process is available under the `TAR
    FILES` command.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
- en: '**Step 4 - use iOS Forensic Toolkit**:'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
- en: '**Launch the Toolkit**:![Performing physical acquisition on a 64-bit iOS device](img/0091.jpeg)'
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Use the **TAR FILES** command (item 8) from the main menu**: This will return
    a Unix-style TAR archive of the filesystem, complete with all application data.
    The keychain database will also be extracted; however, it won''t be decrypted
    as keychain decryption keys are not accessible on 64-bit devices:![Performing
    physical acquisition on a 64-bit iOS device](img/0092.jpeg)![Performing physical
    acquisition on a 64-bit iOS device](img/0093.jpeg)'
  id: totrans-339
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If prompted, enter the root password. By default, the root password is `alpine`.
    You will need to enter the password twice.
  id: totrans-340
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Re-enter the root password:'
  id: totrans-341
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Performing physical acquisition on a 64-bit iOS device](img/0094.jpeg)'
  id: totrans-342
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: '**Specify the file name**: The path is relative to the home directory:![Performing
    physical acquisition on a 64-bit iOS device](img/0095.jpeg)'
  id: totrans-343
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Wait while the filesystem is being extracted**: This can be a lengthy process,
    especially when acquiring devices with a large amount of data (in our lab, it
    took us about 10 minutes to pull 7.5 GB of data):![Performing physical acquisition
    on a 64-bit iOS device](img/0096.jpeg)'
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**When the process is finished, disconnect the device and proceed to analyze
    the data**:![Performing physical acquisition on a 64-bit iOS device](img/0097.jpeg)'
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is available via 64-bit physical acquisition
  id: totrans-346
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The 64-bit acquisition process returns the full filesystem of the device, including
    the keychain (which, unfortunately, cannot be decrypted). We were able to access
    all the following data that is *not* available in either iTunes or iCloud backups:'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
- en: Location data (`/private/var/root/Library/Caches/locationd`)
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Downloaded mail (`/private/var/mobile/Library/Mail`)
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Health data (`/private/var/mobile/Library/Health`)
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Music (`/private/var/mobile/Media/iTunes_Control/Music`)
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Detailed battery usage (`/private/var/mobile/Library/BatteryLife`)
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Application data and caches (`/private/var/mobile/Containers/Data/Application/<application
    id="">, /private/var/mobile/Library/Caches</application>`)
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mobile Safari cache—history, recent searches, and more (`/private/var/mobile/Containers/Data/Application/4FF7BF97-4B3B-4964-ACD8-974AADB8D4F8/Library/Safari`)
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lockdown certificate info (`/private/var/root/Library/Lockdown`)
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CPU usage data (`/private/var/mobile/Library/CoreDuet`)
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Push notifications (`/private/var/mobile/Library/ApplePushService`)
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Battery usage (`/private/var/mobile/Library/BatteryLife`)
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuration files (`/private/var/mobile/Library/Preferences`)
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Network and data usage (`/private/var/networkd, /private/var/wireless/Library/Databases`)
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Various log files (`/private/var/log, /private/var/logs, /private/var/wireless/Library/Logs,
    /private/var/mobile/Library/Logs`)
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SHM and WAL files for all SQLite databases (delayed transactions)
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applications activity (`/private/var/mobile/Library/AggregateDictionary`)
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spotlight data (`/private/var/mobile/Library/Spotlight`)
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keyboard cache (`/private/var/mobile/Library/Keyboard`)
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The logs include information on application install/uninstall, restoring from
    backup, syncing and pairing, application crashes, GSM network connections, iCloud
    access (by app), iOS updates, application crash logs, info on device on/off, diagnostics
    and security logs, and more.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
- en: Caches include a lot more than just the application cache. In addition to this,
    you'll get cache of the data downloaded over the Internet, screenshots of applications'
    recent state (at the time they were suspended), information stored in the clipboard
    of the device, and much more.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
- en: There is quite more data to analyze, especially in the `/private/var/mobile/Library`
    folder.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
- en: Interestingly, some of this data is also available when performing acquisition
    of a locked device, even if you don't know the passcode.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
- en: Locked device with unknown passcode
  id: totrans-370
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The new acquisition process can be used to pull some information from 32-bit
    and 64-bit devices that are locked with an unknown passcode (jailbreak required).
    This includes devices that were powered on (or rebooted) and never unlocked. Jailbreak
    is absolutely mandatory; we cannot pull anything from a non-jailbroken device
    with an unknown passcode!
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
- en: The amount of information that can be extracted varies depending on whether
    the device was unlocked at least once after it powered on or rebooted. If the
    device was never unlocked after a reboot, only a very limited dataset is available.
    However, if the user entered the correct passcode at least once, a lot of information
    (such as the SMS database, contacts database, Wi-Fi password, and so on) is decrypted
    and can be extracted later on, even after the device is subsequently locked.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
- en: 'The following data can be pulled from jailbroken, passcode-locked devices:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
- en: Some geolocation data (cellular tower and compass calibration data, including
    coordinates)
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Incoming calls (numbers only) and text messages
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: App and system logs (installs and updates, net access logs, and so on)
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SQLite temp files, including **write-ahead logs** (**WAL**)
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What exactly may or may not be available from a locked device depends, in particular,
    on whether or not the device was unlocked at least once after booting up. For
    example, incoming text messages will be placed in a temporary, unencrypted database
    if the device was never unlocked after booting up. However, if the device was
    unlocked at least once, all text messages will be transferred into the encrypted
    database even if they were received while the device was subsequently locked.
    As a result, if a device was unlocked at least once and it has a jailbreak installed,
    it may be possible to pull a lot more data compared to devices that were never
    unlocked after the boot. This is one of the reasons why you should do your best
    to prevent seized devices from switching off (using the Faraday bag and charger
    routine).
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
- en: Viewing and analyzing the image
  id: totrans-379
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The 64-bit acquisition process returns an archived (`.TAR`) image of the device''s
    filesystem. If you are using Windows, simply extracting the files and folders
    from the TAR archive may not return the complete content of the archive as some
    files and folders may contain characters that are not allowed in NTFS or exFAT.
    You can either allow the archiver to rename these files or extract information
    onto a mounted HFS/HFS+ volume:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
- en: '![Viewing and analyzing the image](img/0098.jpeg)'
  id: totrans-381
  prefs: []
  type: TYPE_IMG
- en: If you are using a macOS X computer, you could simply mount the DMG image (extracted
    via the 32-bit process) as a virtual disk. However, the 64-bit process does not
    return a DMG image, meaning that you'll have to manually extract the filesystem
    from the TAR archive and analyze the files individually. Converting a TAR image
    of the filesystem into a mountable DMG image is possible; we are currently working
    on a tool to perform the conversion on-the-fly during acquisition. Stay tuned
    for iOS Forensic Toolkit 2.1!
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are using a Windows PC to analyze the extracted dataset, you may need
    to install a third-party tool in order to mount the HFS+ volume. We assembled
    the following list of tools to help you mount the HFS+ volume on a Windows PC:'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
- en: '**HFSExplorer**: [http://www.catacombae.org/hfsexplorer/](http://www.catacombae.org/hfsexplorer/)
    (free)'
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Paragon HFS+ for Windows**: [https://www.paragon-software.com/home/hfs-windows/](https://www.paragon-software.com/home/hfs-windows/)
    (free or $19.95)'
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mediafour MacDrive**: [http://www.mediafour.com/software/macdrive/](http://www.mediafour.com/software/macdrive/)
    ($49.99)'
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'You can also try using BootCamp drivers:'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
- en: '[http://forums.macrumors.com/threads/apple-hfs-windows-driver-download.1368010/](http://forums.macrumors.com/threads/apple-hfs-windows-driver-download.1368010/)'
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://lpmv.epfl.ch/page-109141-en.html](http://lpmv.epfl.ch/page-109141-en.html)'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Analyzing the extracted dataset is available with many forensic tools. We found
    BlackLight by BlackBag Technologies to work great on both macOS X and Windows
    platforms:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.blackbagtech.com/software-products/blacklight.html](https://www.blackbagtech.com/software-products/blacklight.html)'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
- en: Potential legal implications
  id: totrans-392
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Physical acquisition for 64-bit devices is a more invasive process compared
    to acquisition methods available for old hardware. It involves modifying system
    settings (removing passcode protection), and it does write files onto the phone
    (OpenSSH must be installed on the device for the process to work). If the device
    does not have a jailbreak installed, it must be jailbroken prior to acquisition,
    which once again, modifies the system and data partitions.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
- en: With all that in mind, evidence obtained with the new extraction process may
    not be admissible in court unless every step is properly documented. Producing
    and obtaining device backups (making the device produce an offline backup via
    iTunes or an online one via iCloud) prior to attempting physical acquisition is
    highly recommended. You can use Elcomsoft Phone Breaker ([https://www.elcomsoft.com/eppb.html](https://www.elcomsoft.com/eppb.html))
    to decrypt the local backup or download one from iCloud.
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-395
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter introduced iOS forensics, detailing available acquisition options
    for different generations of Apple iOS devices. We reviewed the various acquisition
    options and learned how to perform physical acquisition of an iOS device using
    Elcomsoft iOS Forensic Toolkit. We also took a brief look at other acquisition
    techniques, which will be detailed in the next chapter.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
