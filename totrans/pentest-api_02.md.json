["```\n    $ sudo apt update && sudo apt install curl\n    ```", "```\n    # Add Docker's official GPG key:\n    sudo apt-get update\n    sudo apt-get install ca-certificates curl\n    sudo install -m 0755 -d /etc/apt/keyrings\n    sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\n    sudo chmod a+r /etc/apt/keyrings/docker.asc\n    # Add the repository to Apt sources:\n    echo \\\n      \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n      $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable\" | \\\n      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n    sudo apt-get update\n    ```", "```\n    sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n    ```", "```\n    $ sudo groupadd docker\n    $ sudo usermod -aG docker $USER\n    docker run hello-world.\n    ```", "```\n    CTRL + D to exit it and check the current images:\n\n    ```", "```\n\n    ```", "```\n    $ git clone https://github.com/OWASP/crAPI\n    $ cd crAPI/deploy/docker\n    $ docker compose -f docker-compose.yml --compatibility up -d\n    ```", "```\n    $ docker images\n    REPOSITORY              TAG       IMAGE ID       CREATED        SIZE\n    crapi/mailhog           latest    b090a6f374ad   13 days ago    21.3MB\n    crapi/crapi-community   latest    9c9fc54c2eec   13 days ago    32.1MB\n    crapi/crapi-workshop    latest    452648f7cdb1   13 days ago    186MB\n    crapi/crapi-identity    latest    abb5e226020f   2 weeks ago    491MB\n    crapi/gateway-service   latest    ed9fd107e30a   2 weeks ago    78MB\n    crapi/crapi-web         latest    464f1efe9fd4   2 weeks ago    133MB\n    postgres                14        08fca857484c   4 weeks ago    444MB\n    mongo                   4.4       80d502872ebd   3 months ago   408MB\n    webgoat/webgoat         latest    cea483e51e8f   6 months ago   404MB\n    ```", "```\n    $ docker ps -a\n    CONTAINER ID   IMAGE                          COMMAND                  \n    CREATED          STATUS                        PORTS                   \n                              NAMES\n    96c3570a0ccf   crapi/crapi-web:latest         \"/bin/sh -c /etc/ngi…\"   26 minutes ago   Up 26 minutes (healthy)       127.0.0.1:8888->80/tcp, 127.0.0.1:8443->443/tcp   crapi-web\n    b2fbe3d479bb   crapi/crapi-workshop:latest    \"/bin/sh -c /app/run…\"   26 minutes ago   Up 26 minutes (healthy)                          \n                                   crapi-workshop\n    f687427de9f6   crapi/crapi-community:latest   \"/bin/sh -c /app/main\"   27 minutes ago   Up 27 minutes (healthy)       6060/tcp                \n                              crapi-community\n    8c4d891f420a   crapi/crapi-identity:latest    \"/entrypoint.sh\"         \n    27 minutes ago   Up 27 minutes (healthy)       10001/tcp              \n                               crapi-identity\n    3753ffa0052f   mongo:4.4                      \"docker-entrypoint.s…\"   27 minutes ago   Up 27 minutes (healthy)       27017/tcp                                         mongodb\n    1a531c4fae21   crapi/mailhog:latest           \"MailHog\"                \n    27 minutes ago   Up 27 minutes (healthy)       1025/tcp, 127.0.0.1:8025->8025/tcp                mailhog\n    8cecff3f9661   crapi/gateway-service:latest   \"/app/server\"            27 minutes ago   Up 27 minutes (unhealthy)     443/tcp                                           api.mypremiumdealership.com\n    0448ced9db02   postgres:14                    \"docker-entrypoint.s…\"   27 minutes ago   Up 27 minutes (healthy)       5432/tcp                                          postgresdb\n    ee8043011c70   webgoat/webgoat                \"java -Duser.home=/h…\"   32 minutes ago   Up 33 minutes (healthy)       127.0.0.1:8080->8080/tcp, 127.0.0.1:9090->9090/tcp                               \n                   stoic_gate\n    ```", "```\n    $ sudo apt install openjdk-11-jre-headless\n    ```", "```\n    $ sudo ./ZAP_2_14_0_unix.sh\n    ```", "```\n    $ ./burpsuite_community_linux_arm64_v2023_12_1_3.sh\n    Unpacking JRE ...\n    Starting Installer ...\n    ```", "```\n$ sudo apt update\n$ sudo apt install snapd\n$ sudo snap install postman\n```", "```\n$ sudo apt install wireshark-qt\n```", "```\nwireshark:x:137:mauricio\n```", "```\n$ python3 -m venv testdir\nThe virtual environment was not created successfully because ensurepip is not available.  On Debian/Ubuntu systems, you need to install the python3-venv package using the following command.\n    apt install python3.10-venv\nYou may need to use sudo with that command.  After installing the python3-venv package, recreate your virtual environment.\nFailing command: /home/mauricio/Downloads/testdir/bin/python3\n```", "```\n$ sudo apt install python3-pip\n$ sudo apt install python3-venv\n$ python3 -m venv testdir\n$ ls -alph testdir\ntotal 24K\ndrwxrwxr-x 5 mauricio mauricio 4.0K Jun  8 15:53 ./\ndrwxr-xr-x 4 mauricio mauricio 4.0K Jun  8 15:53 ../\ndrwxrwxr-x 2 mauricio mauricio 4.0K Jun  8 16:20 bin/\ndrwxrwxr-x 2 mauricio mauricio 4.0K Jun  8 15:53 include/\ndrwxrwxr-x 3 mauricio mauricio 4.0K Jun  8 15:53 lib/\nlrwxrwxrwx 1 mauricio mauricio    3 Jun  8 15:53 lib64 -> lib/\n-rw-rw-r-- 1 mauricio mauricio   71 Jun  8 16:25 pyvenv.cfg\n```", "```\n$ sudo apt install hydra\n$ hydra\nHydra v9.2 (c) 2021 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\nSyntax: hydra [[[-l LOGIN|-L FILE] [-p PASS|-P FILE]] | [-C FILE]] [-e nsr] [-o FILE] [-t TASKS] [-M FILE [-T TASKS]] [-w TIME] [-W TIME] [-f] [-s PORT] [-x MIN:MAX:CHARSET] [-c TIME] [-ISOuvVd46] [-m MODULE_OPT] [service://server[:PORT][/OPT]]\nOutput omitted for brevity\n```", "```\n$ sudo apt install patator\n$ patator\nPatator 0.9 (https://github.com/lanjelot/patator) with python-3.10.12\nUsage: patator module –help\nOutput omitted for brevity\n```", "```\n$ sudo apt-get install gcc make git wget\n$ git clone https://gitlab.com/akihe/radamsa.git && cd radamsa && make && sudo make install\n$ radamsa --version\nRadamsa 0.8a\n```", "```\n$ sudo apt install apache2-utils\n$ ab -V\nThis is ApacheBench, Version 2.3 <$Revision: 1879490 $>\nCopyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/\nLicensed to The Apache Software Foundation, http://www.apache.org/\n```", "```\n$ sudo apt install hping3\n$ /usr/sbin/hping3 –version\nhping3 version 3.0.0-alpha-2 ($Id: release.h,v 1.4 2004/04/09 23:38:56 antirez Exp $)\nThis binary is TCL scripting capable\n```", "```\n$ sudo apt install flog\n$ flog\nUsage: pipeline| flog [options] {logfile|-}  # SIGHUP will reopen logfile (v1.8)\n\t-t           prepend each line with \"YYYYMMDD;HH:MM:SS: \"\n\t-T <format>  prepend each line with specified strftime(3) format\n\t-l <number>  log file length limit (force truncation)\n\t-F <fifo>    fifo name\n\t-p <pidfile> pid file\n\t-z           zap (truncate) log if disk gets full (default: grow buffer\n```", "```\n$ wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo tee /etc/apt/trusted.gpg.d/elastic.asc\n$ sudo apt-get install apt-transport-https\n$ echo \"deb https://artifacts.elastic.co/packages/8.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-8.x.list\n$ sudo apt-get update && sudo apt-get install filebeat\n$ filebeat version\nfilebeat version 8.14.0 (arm64), libbeat 8.14.0 [de52d1434ea3dff96953a59a18d44e456a98bd2f built 2024-05-31 15:22:46 +0000 UTC]\n```", "```\n$ sudo apt install ripgrep\n$ rg –-version\nripgrep 13.0.0\n-SIMD -AVX (compiled)\n```", "```\n$ pip install safety\nCollecting safety\n  Downloading safety-3.2.2-py3-none-any.whl (146 kB)\n     ━━━━━━━━━━━ 146.3/146.3 KB 1.1 MB/s eta 0:00:00\n...Output omitted for brevity...\n$ safety –-version\nsafety, version 3.2.2\n```", "```\n$ sudo snap install go –classic\n$ go version\ngo version go1.22.4 linux/arm64\n```", "```\n$ python3 -m venv pentesting\n$ source pentesting/bin/activate\n(pentesting) $ pip install Flask Flask-GraphQL graphene Flask-JWT-Extended\nCollecting Flask\n  Downloading flask-3.0.3-py3-none-any.whl (101 kB)\n     ━━━━━━━━━━━━━━━━━━━━━━━ 101.7/101.7 KB 796.2 kB/s eta 0:00:00\n...Output omitted for brevity...\n(pentesting) $ pip install pandas\nCollecting pandas\n  Downloading pandas-2.2.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl (15.6 MB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━ 15.6/15.6 MB 35.2 MB/s eta 0:00:00\n...Output omitted for brevity...\n$ pip install scapy\nCollecting scapy\n  Downloading scapy-2.5.0.tar.gz (1.3 MB)\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.3/1.3 MB 5.0 MB/s eta 0:00:00\n...Output omitted for brevity...\n```", "```\n$ sudo apt install python-wheel-common\n$ pip install jsonify\nCollecting jsonify\n  Downloading jsonify-0.5.tar.gz (1.0 kB)\n  Preparing metadata (setup.py) ... done\n...Output omitted for brevity...\n$ pip install flask-oauth flask-oauthlib jsonify requests scrapy\nCollecting flask-oauth\n  Downloading Flask-OAuth-0.12.tar.gz (6.2 kB)\n  Preparing metadata (setup.py) ... done\n...Output omitted for brevity...\nCollecting flask-oauthlib\n  Downloading Flask_OAuthlib-0.9.6-py3-none-any.whl (40 kB)\n     ━━━━━━━━━━━━━━ 40.2/40.2 KB 632.0 kB/s eta 0:00:00\n...Output omitted for brevity...\nCollecting jsonify\n  Downloading jsonify-0.5.tar.gz (1.0 kB)\n  Preparing metadata (setup.py) ... done\n...Output omitted for brevity...\nCollecting requests\n  Downloading requests-2.32.3-py3-none-any.whl (64 kB)\n     ━━━━━━━━━━━━━━ 64.9/64.9 KB 779.9 kB/s eta 0:00:00\n...Output omitted for brevity...\nCollecting scrapy\n  Downloading Scrapy-2.11.2-py2.py3-none-any.whl (290 kB)\n     ━━━━━━━━━━━━━━ 290.1/290.1 KB 1.5 MB/s eta 0:00:00\n...Output omitted for brevity...\nNow, let's clone the book's repository inside the pentesting directory:\n(pentesting) $ cd pentesting\n(pentesting) $ git clone https://github.com/PacktPublishing/Pentesting-APIs.git\nCloning into 'Pentesting-APIs...\nremote: Enumerating objects: 1234, done.\nremote: Counting objects: 100% (403/403), done.\nremote: Compressing objects: 100% (71/71), done.\nremote: Total 1234 (delta 346), reused 332 (delta 332), pack-reused 831\nReceiving objects: 100% (1234/1234), 359.68 KiB | 359.00 KiB/s, done.\nResolving deltas: 100% (760/760), done.\n```"]