- en: Chapter 5. Evidence Acquisition and Analysis from iCloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The goal of this chapter is to introduce the cloud system provided by Apple
    to all its users through which they can save the backups of their devices and
    other files on remote servers. In the first part of the chapter, we will show
    you the main characteristics of this service, and then the techniques to create
    and recover a backup and other files from iCloud.
  prefs: []
  type: TYPE_NORMAL
- en: The iCloud service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: iCloud is a cloud storage and cloud computing service designed by Apple and
    offered to iOS users since iOS 5\. The iCloud service was announced on June 6,
    2011 during the Apple Worldwide Developers Conference, and became available to
    the public from October 12, 2011\. In February 2016, iCloud had more than 780
    million users. The service allows users to store data on iCloud Drive, share photos
    and videos between various devices and people, perform geolocation for their Apple
    device with Find My iPhone, and save personal passwords with iCloud Keychain on
    remote servers. The iCloud Drive storage space can also be used by individual
    applications to store information and specific backup data; for example, WhatsApp,
    at the time of the first configuration or following a version upgrade, asks the
    user whether they wants to use iCloud to store backups of conversations and WhatsApp
    media files, and if so, how often (daily, weekly, or monthly). iCloud also allows
    users to synchronize data between devices (e-mail, contacts, calendars, bookmarks,
    notes, reminders, iWork documents, and so on) or to make a backup of an iOS device
    (iPhone, iPad, or iPod touch) on remote servers rather than using iTunes and your
    local computer. The data uploaded to iCloud can also be shared with Apple computers
    running Mac OS X (native support) or a personal computer running Windows Vista
    or later, by installing the iCloud Control Panel software, which can be downloaded
    for free from the Apple website.
  prefs: []
  type: TYPE_NORMAL
- en: Each iCloud account has 5 GB of free storage. Purchases made through iTunes
    (music, apps, videos, movies, and so on) are not calculated in the count of the
    occupied space and can be stored in iCloud and downloaded on all devices associated
    with the Apple ID of the user. Moreover, the user has the option to purchase additional
    storage in denominations of 50 GB ($0.99 a month), 200 GB ($2.99 a month), or
    1,000 GB ($9.99 a month).
  prefs: []
  type: TYPE_NORMAL
- en: iDevice backup on iCloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'iCloud allows users to make online backups of iDevices so that they will be
    able to restore their data even on a different iDevice (for example, in case of
    replacement of devices). The choice of which backup mode to use can be done directly
    in the settings of the device or through iTunes when the device is connected to
    the PC or Mac, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![iDevice backup on iCloud](img/B05100_05_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the user has activated the service, the device automatically backs up,
    at least once a day, and each time all the following conditions are met:'
  prefs: []
  type: TYPE_NORMAL
- en: It is connected to the power cable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is connected to a Wi-Fi network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The screen is locked
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enough space on iCloud is available
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iCloud online backups are incremental through subsequent snapshots, and each
    snapshot is the current status of the device at the time of its creation. The
    structure of the backup stored on iCloud is entirely analogous to that of the
    backup made with iTunes.
  prefs: []
  type: TYPE_NORMAL
- en: iDevice backup acquisition
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Backups that are made online are, to all intents and purposes, not encrypted.
    Technically, they are encrypted, but the encryption key is stored with the encrypted
    files. Apple made this choice in order for users to be able to restore the backup
    on a different device from the one that created it. Currently, the acquisition
    of iCloud backup is supported by various commercial software (**Elcomsoft Phone
    Breaker** (**EPPB**), Passware, Oxygen Forensics Detective, Cellebrite Cloud Analyzer,
    iPhone Backup Extractor, and Wondershare Dr.Fone) and two open source tools (iLoot,
    which is available at [https://github.com/hackappcom/iloot](https://github.com/hackappcom/iloot)
    and works up to iOS 8 and InflatableDonkey, which is available at [https://github.com/horrorho/InflatableDonkey](https://github.com/horrorho/InflatableDonkey)
    and works with iOS 9). The interesting aspect is that this same technique was
    used in the iCloud hack performed in 2014, when personal photos and videos were
    hacked from the respective iCloud services and released over the Internet (more
    information is available at [http://en.wikipedia.org/wiki/2014_celebrity_photo_hack](http://en.wikipedia.org/wiki/2014_celebrity_photo_hack)).
    Although there is no strong evidence yet that describes how the hack was made,
    it is believed that Apple's *Find My iPhone* service was responsible for this
    and Apple did not implement any security measure to lock down the account after
    a particular number of wrong login attempts, which directly raises the possibility
    of exploitation (brute force, in this case). The tool used to brute force the
    iCloud password, named iBrute, is still available at [https://github.com/hackappcom/ibrute](https://github.com/hackappcom/ibrute),
    but it has not been working since January 2015\. A new tool called iBrutr [https://github.com/Pr0x13/iBrutr](https://github.com/Pr0x13/iBrutr),
    which uses a different iCloud service vulnerability, was released in September
    2015.
  prefs: []
  type: TYPE_NORMAL
- en: Case study - iDevice backup acquisition and EPPB with username and password
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As reported on the software manufacturer's website, EPPB allows the acquisition
    of data stored on an online backup. Moreover, online backups can be acquired without
    having the original iOS device to hand. All that's needed to access online backups
    stored in the cloud service are the original user's credentials, including their
    Apple ID, accompanied with the corresponding password or an authentication token
    extracted from a computer (detailed later in this chapter).
  prefs: []
  type: TYPE_NORMAL
- en: 'iCloud login credentials can be retrieved as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Using social engineering techniques
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: From a PC (or a Mac) on which they are stored
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using iTunes Password Decryptor ([http://securityxploded.com/](http://securityxploded.com/))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using WebBrowserPassView ([http://www.nirsoft.net/](http://www.nirsoft.net/))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Directly from the device (iPhone/iPad/iPod touch) by extracting the credentials
    stored in the Keychain, as explained in [Chapter 4](ch04.html "Chapter 4. Evidence
    Acquisition and Analysis from iTunes Backup"), *Evidence Acquisition and Analysis
    from iTunes Backup*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once the credentials have been extracted, the download of the backup is very
    simple. Follow the step-by-step instructions provided in the program by entering
    the username and password in the **Download backup from iCloud** dialog box by
    navigating to **Tools** | **Apple** | **Download backup from iCloud** | **Password**
    and clicking on **Sign in**, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition and EPPB with username and password](img/B05100_05_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'At this point, the software displays a screen that shows all the backups present
    in the user account and allows you to download data, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition and EPPB with username and password](img/B05100_05_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'It is important to notice the possibility of using the following two options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Restore original file names**: If enabled, this option interprets the contents
    of the `Manifest.mbdb` file and rebuilds the backup with the same tree structure
    into domains and subdomains as described in [Chapter 4](ch04.html "Chapter 4. Evidence
    Acquisition and Analysis from iTunes Backup"), *Evidence Acquisition and Analysis
    from iTunes Backup*. If the investigator intends to carry out the analysis with
    traditional software for data extraction from backups, it is recommended that
    you disable this option, because if enabled, that software will no longer be able
    to parse the backup.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Download only specific data**: This option is very useful when the investigator
    needs to download only some specific information. Currently, the software supports
    **Call history**, **Messages**, **Attachments**, **Contacts**, **Safari data**,
    **Google data**, **Calendar**, **Notes**, **Info & Settings**, **Camera Roll**,
    **Social & Communications**, and so on. In this case, the **Restore original file
    names** option is automatically activated and it cannot be disabled:![Case study
    - iDevice backup acquisition and EPPB with username and password](img/B05100_05_04.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once you have chosen the destination folder for the download, the backup starts.
    The time required to download depends on the size of the storage space available
    to the user and the number of snapshots stored within that space:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition and EPPB with username and password](img/B05100_05_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Case study - iDevice backup acquisition and EPPB with authentication token
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Forensic edition of Phone Breaker from Elcomsoft is a tool that gives a
    digital forensics examiner the power to obtain iCloud data without having the
    original Apple ID and password. This kind of access is made possible via the use
    of an authentication token extracted from the user's computer. These tokens can
    be obtained from any suspect's computer where iCloud Control Panel is installed.
    Tokens can be extracted from such computers both live while it's running and afterwards
    from its hard drive, by extracting specific files and folders.
  prefs: []
  type: TYPE_NORMAL
- en: In the first case, on a live system, the analyst needs to use a small executable
    file called `atex.exe` on the machine. The executable file can be launched from
    an external pen drive during a live forensics activity.
  prefs: []
  type: TYPE_NORMAL
- en: 'Open Command Prompt and launch the `atex -l` command to list all the local
    iCloud users as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition and EPPB with authentication token](img/B05100_05_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Then, launch `atex.exe` again with the `--getToken` parameter and enter the
    username of the specific local Windows user (`-n username`) and the password for
    this user''s Windows account (`-p password`):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition and EPPB with authentication token](img/B05100_05_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'A file called `icloud_token_<timestamp>.txt` will be created in the folder
    from which `atex.exe` was launched. This file contains the Apple ID of the current
    iCloud Control Panel user and its authentication token:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition and EPPB with authentication token](img/B05100_05_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now that the analyst has the authentication token, they can start the EPPB
    software, navigate to **Tools** | **Apple** | **Download backup from iCloud**
    | **Token**, copy and paste the token (be careful to copy the entire second row
    from the `.txt` file created by the `atex.exe` tool) into the software, and click
    on **Sign in**, as shown in the following screenshot. At this point, the software
    shows the screen for downloading the iCloud backups stored within the iCloud space
    of the user, in a similar way as you provide a username and password:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition and EPPB with authentication token](img/B05100_05_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The procedure for the Mac OS X version is exactly the same. Just launch the
    `atex` Mac version from a shell and follow the steps as shown previously in the
    Windows environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '`sudo atex -l`: This command is used to get the list of all iCloud users.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sudo atex --getTokenOnline -u <username>`: This command is used to get the
    authentication token for a specific user. You will need to enter the user''s system
    password when prompted.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tokens can also be extracted from a switched off computer, running either Mac
    OS X or MS Windows, where iCloud Control Panel is installed and configured.
  prefs: []
  type: TYPE_NORMAL
- en: 'In a MS Windows environment, in order to obtain the token, you need to extract
    the following file and folder (or its forensics image) from the computer:'
  prefs: []
  type: TYPE_NORMAL
- en: The `com.apple.AOSKit.plist` file, typically located in `\Users\<username>\AppData\Roaming\Apple
    Computer\Preferences\`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `\Users\<username>\AppData\Roaming\Microsoft\Protect\<SID>\` folder
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is also necessary to know the account password for the local user on the
    target computer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once these files have been extracted, you can start the EPPB software and navigate
    to **Tools** | **Apple** | **Extract authentication token**. The software prompts
    you to provide the `com.apple.AOSKit.plist` file and the local user password:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition and EPPB with authentication token](img/B05100_05_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The next step is you need to provide the path to the folder containing the
    user''s master key:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition and EPPB with authentication token](img/B05100_05_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'If the information provided is correct, the software will show the authentication
    token, allowing direct access to the download features of backup from iCloud and
    files from the iCloud Drive:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition and EPPB with authentication token](img/B05100_05_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'In the Mac OS X environment, in order to obtain the token, you need to extract
    the following file and folder (or its forensics image) from the computer:'
  prefs: []
  type: TYPE_NORMAL
- en: The `login.keychain` file, stored by default in `/Users/<username>/Library/Keychains/`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The folder containing the authentication token, stored by default in `/Users/<username>/Library/Application
    Support/iCloud/Accounts/`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is also necessary to know the account password for the local user on the
    target computer.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once these files have been extracted, you can start the EPPB software and navigate
    to **Tools** | **Apple** | **Extract authentication token**. The software prompts
    you to provide the `login.keychain` file and the local user password:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition and EPPB with authentication token](img/B05100_05_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The next step you need is to provide the path to the folder containing the
    authentication token:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition and EPPB with authentication token](img/B05100_05_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: By clicking on **Extract**, the token is extracted in a `plist` file and can
    be used to access and backup files stored in iCloud.
  prefs: []
  type: TYPE_NORMAL
- en: Case study - iDevice backup acquisition with iLoot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The same activity can be performed using the open source tool called iLoot (available
    at [https://github.com/hackappcom/iloot](https://github.com/hackappcom/iloot)),
    which works up to iOS 8\. It requires Python and some dependencies. We suggest
    that you check out the website for the latest version and requirements.
  prefs: []
  type: TYPE_NORMAL
- en: 'By accessing the help (`iloot.py -h`), we can see the various available options.
    We can choose the output folder, if we want to download one specific snapshot,
    if we want the backup to be downloaded in the original iTunes format or with the
    domain-style folders, or if we want to download only specific information (for
    example, call history, SMS, photos, and so on) or only a specific domain, as shown
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition with iLoot](img/B05100_05_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'To download a backup, you only need to insert the account credentials, as shown
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition with iLoot](img/B05100_05_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: At the end of the process, you will find the backup in the output folder (the
    default folder's name is `/output`).
  prefs: []
  type: TYPE_NORMAL
- en: Case study - iDevice backup acquisition with InflatableDonkey
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The same activity on iOS 9 can be performed using an open source tool called
    InflatableDonkey (available at [https://github.com/horrorho/InflatableDonkey](https://github.com/horrorho/InflatableDonkey)).
    It requires Java SDK and Maven. We suggest that you check out the website for
    the latest version and requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: At the time of writing this book, the tool is still a PoC, so test it before
    using in real investigations.
  prefs: []
  type: TYPE_NORMAL
- en: 'By accessing the help (`java -jar InflatableDonkey.jar --help`), we can see
    the various available options. We can choose the device that we want to access
    and the specific backup snapshot we want to download, apply a file extension or
    domain-based filter, request the list of available devices and snapshots, and
    define the output folder, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition with InflatableDonkey](img/B05100_05_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'We can list the available devices and snapshots by providing the valid iCloud
    username and password, and the `--snapshots` option:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition with InflatableDonkey](img/B05100_05_18-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'To download the backup, you need to insert the account credentials and eventually
    choose the specific device and snapshots. In the example shown in the following
    screenshot, the second snapshot from the available device has been requested:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - iDevice backup acquisition with InflatableDonkey](img/B05100_05_19-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: At the end of the process, you will find the backup in the output folder (the
    default folder's name is `/testoutput`). It is important to highlight that it
    is not possible to download the backup in the original iTunes format, but only
    with the domain-style folders.
  prefs: []
  type: TYPE_NORMAL
- en: Case study - WhatsApp backup acquisition with Elcomsoft Explorer for WhatsApp
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As already mentioned, the applications installed on your iOS device have the
    opportunity to backup their data to iCloud Drive. One of the applications that
    enables this feature is WhatsApp (navigate to **Settings** | **Chats** | **Chat
    Backup** within the application menu). You can manually make the backup (**Back
    Up Now**) or you can set the **Auto Backup** feature on a **Daily**, **Weekly**,
    or **Monthly** basis:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - WhatsApp backup acquisition with Elcomsoft Explorer for WhatsApp](img/B05100_05_20-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Elcomsoft Explorer for WhatsApp allows you to extract WhatsApp backup data
    stored within a backup on iCloud or iCloud Drive. Like the EPPB software, it can
    access the data on iCloud through the authentication credentials (username and
    password) or through an authentication token:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - WhatsApp backup acquisition with Elcomsoft Explorer for WhatsApp](img/B05100_05_21-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once downloaded, the data can be viewed directly within the software divided
    by type, **Calls**, **Contacts**, **Media**, and **Messages:**
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - WhatsApp backup acquisition with Elcomsoft Explorer for WhatsApp](img/B05100_05_22-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: iCloud Control Panel artifacts on the computer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The installation of iCloud Control Panel, other than allowing the recovery of
    the user's authentication token, as shown previously, leaves logs of interest
    within the disk of the computer.
  prefs: []
  type: TYPE_NORMAL
- en: On a Windows Vista/7/8 system, the logs of the connections to the iCloud service
    are stored in `C:\Users\<username>\AppData\Roaming\Apple Computer\Logs`. To locate
    the logs of interest, it is necessary to search logs related to the executable
    `iCloud.exe` file within the text file. The files are named according to a standard
    format that includes the date and time at which the service started (for example,
    `asl.113048_18Apr16.log`), thus letting the analyst create a timeline of iCloud
    usage.
  prefs: []
  type: TYPE_NORMAL
- en: The user information configured in the iCloud Control Panel software is stored
    in the `C:\Users\<username>\AppData\Roaming\Apple Computer\Preferences\ mobilemeaccounts.plist`
    file.
  prefs: []
  type: TYPE_NORMAL
- en: 'In particular, the following user information is there in the file:'
  prefs: []
  type: TYPE_NORMAL
- en: '`AccountDSID`: This key denotes user identification'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`AccountID`: This key denotes the iCloud account username'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DisplayName`: This key denotes the displayed name set by the account owner'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IsPaidAccount`: This key is set to `True` if the user has purchased additional
    services from Apple (more storage on iCloud)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`LoggedIn`: This key denotes whether the user is automatically logged in or
    not to the service![iCloud Control Panel artifacts on the computer](img/B05100_05_23-1.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: On a Mac OS X system, the user information is stored instead in the `/Users/<user>/Library/Preferences/MobileMeAccounts.plist`
    file.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will also find plenty of the `asl` logs (the Apple system logs), so, in
    order to check a user''s iCloud activity, you will have to parse the following
    log files:'
  prefs: []
  type: TYPE_NORMAL
- en: '`/private/var/log/asl/YYYY.MM.DD.UID.asl`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/private/var/log/system.log`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For a detailed analysis of iCloud artifacts on a Mac OS X computer we suggest
    you to read the presentation *Ubiquity Forensics - Your iCloud and You* available
    at [http://www.mac4n6.com/resources/](http://www.mac4n6.com/resources/).
  prefs: []
  type: TYPE_NORMAL
- en: Acquiring data from Cloud with stored tokens
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In *[Chapter 4](ch04.html "Chapter 4. Evidence Acquisition and Analysis from
    iTunes Backup")*, *Evidence Acquisition and Analysis from iTunes Backup*, we saw
    how an encrypted backup contains an application's login credentials stored in
    the Keychain. Depending on the application, it is possible to directly find the
    password, as in the case of the native mail, or an authentication token, as in
    the case of many third-party applications such as Facebook and Twitter.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, knowing the password of the backup (either because it was specifically
    set in order to extract the credentials, or because it was cracked) you can extract
    the credentials of an application and use them to access the user cloud services
    directly on various service portals. In this way, for applications that store
    the token, it is not necessary to know the user's password for the specific service,
    but the access is guaranteed by the same token.
  prefs: []
  type: TYPE_NORMAL
- en: Several commercial mobile forensics solutions are integrating this functionality
    within their software or additional software to be used in combination with their
    forensic tool. Among the best known, those worth mentioning are UFED Cloud Analyzer,
    Oxygen Forensic Detective, and Paraben Device Seizure.
  prefs: []
  type: TYPE_NORMAL
- en: 'It should be stressed that this type of software makes remote access to various
    servers and that data is not physically stored within the analyzed device. For
    this, we need to consider at least two aspects: to be sure to have adequate legal
    authority to do this activity and, in any case, to bear in mind that this type
    of acquisition will leave traces and may generate notifications for the owner.
    For these reasons, we must take particular care when using it.'
  prefs: []
  type: TYPE_NORMAL
- en: Case study - Cloud data acquisition with UFED Cloud Analyzer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'UFED Cloud Analyzer is a commercial software developed by Cellebrite as completion
    of forensic suites for the acquisition and analysis of mobile devices. This software
    allows you to access your data on different platforms: Google (Gmail, Contacts,
    Drive, Location History, and Search History), Dropbox, Facebook, Twitter, Instagram,
    Kik, and Vk.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The software can take login credentials as manual input (username and password)
    or by importing an account package exported using the UFED Physical Analyzer software.
    The following screenshot shows the export procedure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - Cloud data acquisition with UFED Cloud Analyzer](img/B05100_05_24-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The starting screen of the software allows you to view the already existing
    persons or create a new one. It refers to it as person, since we are talking about
    users'' personal accounts:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - Cloud data acquisition with UFED Cloud Analyzer](img/B05100_05_25-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'When inserting a new person, you can specify their identification information
    and the time zone of reference, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - Cloud data acquisition with UFED Cloud Analyzer](img/B05100_05_26-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'It is then possible to proceed with the extraction, providing even the related
    legal information (for example, Search warrant):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - Cloud data acquisition with UFED Cloud Analyzer](img/B05100_05_27-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'It is then necessary to select which account, among those available within
    the account package, you want to acquire. In the following example, credentials
    for Dropbox, Twitter, and Google are available:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - Cloud data acquisition with UFED Cloud Analyzer](img/B05100_05_28-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The user''s credentials are then authenticated to verify the correctness and
    validity:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - Cloud data acquisition with UFED Cloud Analyzer](img/B05100_05_29-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Finally, it is also possible to specify the parameters for each account to
    be acquired, such as the type of content (for example, **Messages**, **Contacts**,
    **Images**, **Videos**, and so on) and the timeframe of interest. Once such options
    have been selected, it is possible to start extracting data:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - Cloud data acquisition with UFED Cloud Analyzer](img/B05100_05_30-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the extraction is completed, it shows a summary of the acquired data,
    broken down for each account:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - Cloud data acquisition with UFED Cloud Analyzer](img/B05100_05_31-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The software also allows filtering and searching the data by offering different
    types of visualization, such as **Timeline table**, **Timeline feed**, **Files**,
    **Contacts**, **Map**, and **Profile**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - Cloud data acquisition with UFED Cloud Analyzer](img/B05100_05_32-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The following screenshot shows an example of the file visualization of a **Google
    Drive** account:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - Cloud data acquisition with UFED Cloud Analyzer](img/B05100_05_33-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Case study - cloud data acquisition with Oxygen Forensic Detective
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Oxygen Forensic Detective is a commercial software developed by Oxygen Forensic
    and is the most complete version among those available from this vendor. In particular,
    in addition to extraction and analysis capabilities present in the Analyst version,
    this version includes specific features to enable access of the data stored on
    the Cloud. The software allows you to access your data on different platforms:
    Google (Calendar Bookmarks, History, Contacts, Drive, Location History, Mail,
    Photos, Tasks, and Backup WhatsApp), iCloud (Calendars, Contacts, and iOS Backup),
    Live (Calendars, Contacts, and OneDrive), Box, Dropbox, Facebook, Twitter, Instagram,
    and Swarm (Foursquare).'
  prefs: []
  type: TYPE_NORMAL
- en: 'The software can take login credentials as manual input (username and password)
    or by importing an Oxygen Credentials Package exported using the Oxygen Forensic
    Detective software itself. The following screenshot shows an example of the acquisition
    of an **Apple iPhone 6S** with iOS **9.3.1**. It''s important to remember that
    for the extraction of credentials, encrypting the backup is necessary:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - cloud data acquisition with Oxygen Forensic Detective](img/B05100_05_34-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The authentication credentials can be viewed by accessing the specific account
    section. For each account, the password or authentication token and the input
    file of the credentials are given. In the specific example here, the credentials
    were related to a Facebook account:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - cloud data acquisition with Oxygen Forensic Detective](img/B05100_05_35-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Using the **Save Accounts Date** option you can export the credentials in the
    Oxygen Credentials Package format while saving the files on the computer:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - cloud data acquisition with Oxygen Forensic Detective](img/B05100_05_36-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once you have your credentials package from the main screen of the software,
    simply click on the **Cloud** button at the top right to access the setup wizard:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - cloud data acquisition with Oxygen Forensic Detective](img/B05100_05_37-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'In order to proceed, you must specify the **Import credentials package** option
    and select the exported file from the previous step. It then displays a view about
    the user, typically containing name and surname, profile photo, e-mail address,
    and telephone number, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - cloud data acquisition with Oxygen Forensic Detective](img/B05100_05_38-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'It is then possible to select which account you want to access, verify the
    correctness of the credentials, and set each of the extraction parameters. In
    the specific case of Facebook, you can specify which content you want to extract
    (**Images**, **Video**, **Audio**, **Messages**, **Contacts**, **Files**, and
    so on) and the timeframe of interest:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - cloud data acquisition with Oxygen Forensic Detective](img/B05100_05_39-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once the extraction is launched, the software provides the user with a detailed
    real-time view of extracted data and the task completion percentage:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - cloud data acquisition with Oxygen Forensic Detective](img/B05100_05_40-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'When the extraction is completed, it shows a detailed summary of the extracted
    data, broken down by account and by type:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - cloud data acquisition with Oxygen Forensic Detective](img/B05100_05_41-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The extracted data can then be viewed within Oxygen Forensic Detective or saved
    in an archive **Oxygen Cloud Backup** (**OCB**) for later analysis:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - cloud data acquisition with Oxygen Forensic Detective](img/B05100_05_42-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Opening of the backup within the software allows you to navigate easily around the
    extracted data:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - cloud data acquisition with Oxygen Forensic Detective](img/B05100_05_43_bis.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'In the specific case of the current example, you will have access to the **Social
    Network** section and view all the extracted data in a structured way:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Case study - cloud data acquisition with Oxygen Forensic Detective](img/B05100_05_44-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we introduced the iCloud service provided by Apple to store
    files on remote servers and backup its devices. In particular, we showed the techniques
    to download the backups stored on iCloud when you know the user credentials (Apple
    ID and password) and when you have access to a computer (either Windows or Mac
    OS X, turned on or off) where it is installed and that uses iCloud Control Panel.
    In the next chapter, we will introduce you to the most interesting and useful
    artifacts that can be found on iDevices.
  prefs: []
  type: TYPE_NORMAL
- en: Self-test questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Q1\. When is a new backup on iCloud automatically created?
  prefs: []
  type: TYPE_NORMAL
- en: Every 5 minutes
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It depends on the iOS version
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When the device is connected to the power cable, to a Wi-Fi network and is locked
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When the device is locked
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Q2\. Which of these tools can be used to download a backup from iCloud?
  prefs: []
  type: TYPE_NORMAL
- en: iPhone Backup Analyzer
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: InflatableDonkey
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: UFED Physical Analyzer
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: iOS Forensic Toolkit
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Q3\. Which tool can be used to recover the auth token from a PC with iCloud
    Control Panel?
  prefs: []
  type: TYPE_NORMAL
- en: '`Oauth.exe`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`Iloot.exe`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`Token.exe`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`Atex.exe`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Q4\. Where are the log files related to iCloud Control Panel stored in Windows
    7?
  prefs: []
  type: TYPE_NORMAL
- en: '`C:\Users\[username]\AppData\Local\Apple Computer\Logs`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`C:\Users\[username]\AppData\Local\Apple\Logs`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`C:\Users\[username]\AppData\Roaming\Apple Computer\Logs`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`C:\Users\[username]\AppData\Roaming\Apple\Logs`'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
