["```\n    struct mach_header {\n      unsigned long magic; /* mach magic number identifier */\n      cpu_type_t cputype; /* cpu specifier */\n      cpu_subtype_t cpusubtype; /* machine specifier */     \n      unsigned long filetype; /* type of file */\n      unsigned long ncmds; /* number of load commands */\n      unsigned long sizeofcmds; /* the size of load commands */\n      unsigned long flags; /* flags */\n    };\n    ```", "```\n    struct segment_command {\n      unsigned long cmd; /* LC_SEGMENT */\n      unsigned long cmdsize; /* size of section structs */\n      char segname[16]; /* segment name */\n      unsigned long vmaddr; /* memory address of this segment */\n      unsigned long vmsize; /* memory size of this segment */\n      unsigned long fileoff; /* file offset of this segment */\n      unsigned long filesize; /* amount to map from the file */ \n      vm_prot_t maxprot; /* maximum VM protection */\n      vm_prot_t initprot; /* initial VM protection */\n      unsigned long nsects; /* number of sections in segment */ \n      unsigned long flags; /* flags */\n     };\n    ```", "```\nstruct section {\n  char sectname[16]; /* name of this section */\n  char segname[16]; /* segment this section goes in */\n  unsigned long addr; /* memory address of this section */\n  unsigned long size; /* size in bytes of this section */\n  unsigned long offset; /* file offset of this section */\n  unsigned long align; /* section alignment (power of 2) */\n  unsigned long reloff; /* file offset of relocation entries */\n  unsigned long nreloc; /* number of relocation entries */\n  unsigned long flags; /* flags (section type and attributes) */\n  unsigned long reserved1; /* reserved */\n  unsigned long reserved2; /* reserved */\n};\n```", "```\nstruct fat_header {\n  unsigned long magic; /* FAT_MAGIC */\n  unsigned long nfat_arch; /* number of structs that follow */\n};\n```", "```\nstruct fat_arch {\n  cpu_type_t cputype; /* cpu specifier (int) */ \n  cpu_subtype_t cpusubtype; /* machine specifier (int) */\n  unsigned long offset; /* file offset to this object file */ \n  unsigned long size; /* size of this object file */\n  unsigned long align; /* alignment as a power of 2 */\n};\n```", "```\nInfo.plist; Apple binary property list\n```", "```\n    tell application \"Safari\" to do JavaScript \"<payload>\" in current tab of first window\n    ```", "```\n    tell application \"Google Chrome\" to execute front window's active tab JavaScript \"<payload>\"\n    ```"]