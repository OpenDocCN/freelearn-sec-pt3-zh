- en: SQLite Forensics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we''ll cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Parsing SQLite databases with Belkasoft Evidence Center
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parsing SQLite databases with DB Browser for SQLite
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parsing SQLite databases with Oxygen Forensic SQLite Viewer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parsing SQLite databases with SQLite Wizard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'SQLite databases are widely used for different applications'' data storage
    on both mobile devices and PCs. That is why analysis of such databases is highly
    important. According to our experience, in-depth analysis of SQLite databases
    allows us to extract up to 50% of additional data. This is explained in the following
    points:'
  prefs: []
  type: TYPE_NORMAL
- en: There are millions of applications that store their data in SQLite databases.
    None of the mobile forensic software developers are able to provide the support
    for the analysis of such a large number of applications.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the case of the name of the database or the path, where it is stored changes
    during the process of application version changing. Mobile forensic tools will
    not be able to recognize and analyze the database correctly.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Not all forensic tools have an option for the automatic analysis of SQLite databases.
    For example, some tools extract data from Skype Freelists and some do not. The
    manual in-depth analysis of databases allows the extraction of their data more
    fully.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are thousands of SQLite Viewers. Which tool should be chosen for analysis?
    According to our experience, the most efficient tools for mobile application SQLite
    database analysis are the tools produced by mobile forensic software developers.
  prefs: []
  type: TYPE_NORMAL
- en: Many beginning experts are afraid that they will have to deal with SQL command
    writing during manual SQLite database analysis. However, all advanced SQLite Viewers
    for database analysis use templates and visualizations of SQL commands that make
    databases analysis easier.
  prefs: []
  type: TYPE_NORMAL
- en: SQLite databases are generally stored in the userdata partition of the Android
    device.
  prefs: []
  type: TYPE_NORMAL
- en: Parsing SQLite databases with Belkasoft Evidence Center
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Belkasoft Evidence Center program has already been described previously
    in [Chapter 2](../Text/ee171c49-3153-44ed-8537-18576c07fd9e.xhtml), *Android Devices
    Acquisition*. This program has the functionality for SQLite database analysis
    on both mobile devices and PCs. In this chapter, we will describe how to analyze
    a SQLite database with Belkasoft Evidence Center.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this recipe, we will describe an interesting case. The problem was the following:
    on the screen of an examined iPhone 5 there was correspondence with two people
    on Skype, but it was not seen in the results of the analysis, the extracted data,
    which was displayed in the forensic tools. Before I was asked for assistance,
    my colleagues vainly tried all mobile forensics tools they had. The tools could
    not provide access to the correspondence.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The iTunes backup of this device was analyzed via Belkasoft Evidence Center
    (the process of it will be described in [Chapter 9](../Text/8b2d1496-c4bb-48db-9aeb-cd1cdf299e8f.xhtml),
    *iOS Forensics*, in the *iOS backups parsing with Belkasoft Evidence Center* section)
    and we got the following results:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dd77e711-5d66-4b59-abe7-594c3aaf29b0.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary of the results of the iTunes backup analysis
  prefs: []
  type: TYPE_NORMAL
- en: As can be seen from the results, there are two Skype SQLite databases in the
    examined iTunes backup, but no messages were found.
  prefs: []
  type: TYPE_NORMAL
- en: 'These databases were located in the following paths:'
  prefs: []
  type: TYPE_NORMAL
- en: Profile path: `image:\1\vol_0\HomeDomain\Library\com.apple.internal.ck\main.db`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Profile path:  `image:\1\vol_0\AppDomain-com.skype.skype\Library\Application
    Support\Skype4LifeSlimCore\serhioshep\main.db`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As an example of SQLite database analysis, we will deal with the `main.db` file,
    which is located in the `serhioshep` folder:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/87e38eca-4128-49f6-a246-2aff4b1ee914.png)'
  prefs: []
  type: TYPE_IMG
- en: main.db file
  prefs: []
  type: TYPE_NORMAL
- en: 'Double-click the File System tab and go to the file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5b7d8971-8153-4f8a-8bc8-cb5e8a68ae8e.png)'
  prefs: []
  type: TYPE_IMG
- en: main.db file
  prefs: []
  type: TYPE_NORMAL
- en: As can be seen in the following figure, the size of the `main.db` file is 266
    KB, meaning that it may contain the correspondence we are looking for.
  prefs: []
  type: TYPE_NORMAL
- en: 'Double-click the `main.db` file and select the Sqlite tab in the lower window.
    In this window, the categories of the data contained in the examined database
    will be displayed. For example, in the Accounts category, we can see the `serhioshep` record.
    It is a Skype name of an account:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/80e41df6-cd01-41e0-8282-902b77c97f1a.png)'
  prefs: []
  type: TYPE_IMG
- en: Categories of the main.db file.
  prefs: []
  type: TYPE_NORMAL
- en: 'However, there is no information in the Messages category. If you click on
    the Hex tab of this window, you can see that there is no data in this part of
    the examined database:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/045004a5-e6a2-4073-9c42-ea35915986fe.png)'
  prefs: []
  type: TYPE_IMG
- en: Data contained in the main.db file in Hex mode
  prefs: []
  type: TYPE_NORMAL
- en: Similar result were received when we examined the second `main.db` file.
  prefs: []
  type: TYPE_NORMAL
- en: 'What happened? There are two explanations:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Explanation one**: Despite the fact that these files are SQLite databases,
    they do not contain information about messages. Perhaps this happened because
    the device''s security settings did not allow this information to be transferred
    to the iTunes backup.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Explanation two**: These files really do not contain correspondence and the
    device shows the correspondence saved in the WAL-file, which was not transferred
    to the iTunes backup.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The solution is that we need to jailbreak the device. Jailbreaking can give
    us full access to the file system of the device so we can extract more data from
    the device. The `main.db` files will be available for analysis in unchanged form,
    and also the WAL-files will be available if they are present in the device's memory.
    This method will help us to extract the Skype correspondence.
  prefs: []
  type: TYPE_NORMAL
- en: Parsing SQLite databases with DB Browser for SQLite
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DB Browser for SQLite is a free tool that can be used for SQLite database analysis.
    It has great functionalities for such data analysis.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open the DB Browser for the SQLite program website in your browser. Select the
    version of the program that is suitable for your operating system and download
    it. Double-click the icon of the downloaded file and follow the instructions to
    install it.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Double-click the icon of the DB Browser for the SQLite program; it will start
    the program. You can create your SQLite database or analyze the one that already
    exists. In this chapter, we will describe how to analyze the contents of the `mmssms.db`
    file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click Open Database. Select the file, which you will examine. Click OK:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f911e4e2-3c01-44db-8ce4-406e6c5f27a2.png)'
  prefs: []
  type: TYPE_IMG
- en: Toolbar of the DB Browser for SQLite
  prefs: []
  type: TYPE_NORMAL
- en: 'The examined file will be uploaded in the program. The main window of the program
    has four tabs:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Database Structure: Displays the structure of the database.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Browse Data: Displays the data contained in the database.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'EditPramas: Parameters of the database analysis.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Execute SQL: GUI interface in which you can provide SQL commands.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7780ab28-e160-46ca-9622-ea71e2c7f1ad.png)'
  prefs: []
  type: TYPE_IMG
- en: Tabs of the main window of the program
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Database Structure tab, the database structure that was uploaded is
    displayed. In this case, the examined database contains two tables, `android_metadata` and
    `sms`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/eb9c68b3-d3f8-4baf-babf-3338d5183aaf.png)'
  prefs: []
  type: TYPE_IMG
- en: Structure of the examined database
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to the Browse Data tab and select the `sms` table from the drop-down menu.
    In the main window of the program, a table will be displayed showing the sequence
    number of a record, the SMS text, the phone number, type (incoming SMS or outgoing),
    date, sending date, status (if the SMS message is read or not), and so on:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5801eb16-132d-4b64-affc-c1df149a7183.png)'
  prefs: []
  type: TYPE_IMG
- en: Data contained in the sms table
  prefs: []
  type: TYPE_NORMAL
- en: As can be seen in the figure, it is not clear what format the values in the `date` and
    `date_sent` columns are specified in. Interpretation of these values can cause
    difficulties for an inexperienced expert. Also, remember the number of records
    in this table (2,798), as it will be important for us when we describe Oxygen
    Forensic SQLite Viewer.
  prefs: []
  type: TYPE_NORMAL
- en: There’s more…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Besides the SQLite databases, data may be contained in the WAL-files. WAL files
    are Write Ahead Logs. They contain some pages from a SQLite database. You should
    also analyze available WAL-files if you want to extract maximum data from a mobile
    device.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'DB Browser for the SQLite website: [http://sqlitebrowser.org/](http://sqlitebrowser.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The website of another free tool for SQLite databases analysis, Sqliteman:
    [https://sourceforge.net/projects/sqliteman/](https://sourceforge.net/projects/sqliteman/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The program for WAL-files analysis, Walitean:  [https://github.com/n0fate/walitean](https://github.com/n0fate/walitean)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Parsing SQLite databases with Oxygen Forensic SQLite Viewer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Oxygen Forensic program has been already described previously in [Chapter
    1](../Text/5aee1bd3-1728-4cef-ba49-96c69133fbba.xhtml), *SIM Cards Acquisition
    and Analysis*. This program has an Oxygen Forensic SQLite Viewer module, which
    can be used for SQLite database viewing and analysis.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Oxygen Forensic SQLite Viewer can be started by completing three steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Double-click the `OxySQLiteViewer64.exe` file, which is located at the following
    path: `‘C:\Program Files (x86)\Oxygen Software\Oxygen Forensic Detective’`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Double-click the Oxygen Forensic program icon. In the toolbar of the program,
    select Tools and then SQLite Database Viewer:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/77b3ecf1-1cef-4889-b675-7b8c0bda7afb.png)'
  prefs: []
  type: TYPE_IMG
- en: Tools menu
  prefs: []
  type: TYPE_NORMAL
- en: In the main Case window, click the File Browser section. In the opened window
    of the section, select the Database files tab. In this window, all the databases
    including deleted ones will be displayed. Select the database you want to examine.
    Left click on it. In the drop-down window select Open in SQLite Viewer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Double-click the file of the `OxySQLiteViewer64.exe` program, which is located
    in the `C:\Program Files (x86)\Oxygen Software\Oxygen Forensic Detective` path.
    In the toolbar of the program, select File and then Open. Select the file you
    want to examine and click OK. In order to compare the functionality of the programs,
    we will describe the analysis of the same `mmssms.db` file.
  prefs: []
  type: TYPE_NORMAL
- en: 'The window of the program is divided into three areas:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Area 1**: Tables bar-In this bar, the structure of SQLite database files,
    which are uploaded to the program, is displayed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/0145facb-7b81-4cb8-9a9c-3ad9f9d2b7b2.png)'
  prefs: []
  type: TYPE_IMG
- en: Structure of the mmssms.db file
  prefs: []
  type: TYPE_NORMAL
- en: As can be seen in the screenshot, besides 2,798 records that the database contains,
    the program managed to restore 13 more records.
  prefs: []
  type: TYPE_NORMAL
- en: '**Area 2**: The main working area of the program where the data is displayed:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/b0514309-ac45-493d-a2d4-975fc905f42e.png)'
  prefs: []
  type: TYPE_IMG
- en: View of the main working window of the Oxygen Forensic SQLite Viewer program
  prefs: []
  type: TYPE_NORMAL
- en: 'As can be seen in the screenshot, new additional records appeared in the table,
    and if you click the Blocks containing deleted data tab, you will see that these
    blocks contain text, which was probably transferred there from SMS messages that
    the program did not manage to restore:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a83ab1d7-eb9a-43dc-b2e3-f7a0011e903e.png)'
  prefs: []
  type: TYPE_IMG
- en: A fragment of the SMS message contained in the Blocks containing deleted data
    tab
  prefs: []
  type: TYPE_NORMAL
- en: 'The main window of the program also contains the following tabs:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Table structure: Shows the structure of the analyzed SQLite database'
  prefs: []
  type: TYPE_NORMAL
- en: 'SQL Editor and Visual Query Builder: Allow you to specify SQL commands to analyze
    similar databases'
  prefs: []
  type: TYPE_NORMAL
- en: '**Area 3**: The bar, which is located on the right, automatically converts
    the value of a cell using several algorithms. It is very convenient to use for
    converting the examined database''s cells values:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/e21a7b6e-e84f-411a-be61-1a97e616dfed.png)'
  prefs: []
  type: TYPE_IMG
- en: The appearance of the left panel
  prefs: []
  type: TYPE_NORMAL
- en: As can be seen in the figure, the value of the `date` cells in the examined
    database are stores in the Unix Epoch Time (ms) format. The value, contained in
    the examined cell, is `01.10.2016 2:25:23`.
  prefs: []
  type: TYPE_NORMAL
- en: There’s more…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Summing up what was said earlier, we can say that with the use of specialized
    SQLite databases editors, experts extract not only more data by restoring deleted
    records, but they also restore fragments from other areas of databases that may
    be interesting to them. Using SQL Editor and Visual Query Builder, you can write
    scripts that will automatize in-depth analysis of such databases.
  prefs: []
  type: TYPE_NORMAL
- en: Parsing SQLite databases with SQLite Wizard
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The UFED program has already been described previously in [Chapter 4](../Text/51f79a41-d9dd-4c2d-96c4-412c7c5130bd.xhtml),
    *Windows Phones and BlackBerry Acquisition*. This program has the SQLite Wizard
    module, which can be used for data extraction from SQLite databases.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Unfortunately, the SQLite Wizard module cannot be started individually, and
    before using it, an expert has to analyze extracted data from a mobile device
    via UFED Physical Analyzer. When the analysis is done, click the category:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c75fbe9d-0ed7-45dc-8401-eb044608f86f.png)'
  prefs: []
  type: TYPE_IMG
- en: Databases category
  prefs: []
  type: TYPE_NORMAL
- en: 'In the main window of the program, the tab will be displayed that contains
    information about SQLite databases extracted from the examined mobile device.
    The window will also display information on whether the database was analyzed
    via UFED Physical Analyzer or not:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/eb8ecda8-2d8a-49b3-820b-7b9e9d3d3322.png)'
  prefs: []
  type: TYPE_IMG
- en: Information about databases displayed in the main window of UFED Physical Analyzer
  prefs: []
  type: TYPE_NORMAL
- en: Viewing this window, an expert will face an unpleasant discovery. It turns out
    that most of the extracted SQLite databases cannot be analyzed, meaning that some
    of the data, sometimes very important data, can be lost.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As an example, we will describe the analysis of the `contacts2.db_backup` database.
    In the main window of the UFED Physical Analyzer program, click the right mouse
    button on the file. In the drop-down menu, select SQLite Wizard. The opened window
    will prompt you to fill in the Application and Name fields. Fill them in and click
    Next.
  prefs: []
  type: TYPE_NORMAL
- en: In the next window, the Query builder tab will be opened, in which the structures
    of the tables that are included in the examined file will be displayed. Add them
    to the desktop of the program by double-clicking on them. On the desktop, you
    can specify how the tables should be related. As the structure of the examined
    database is known, there is no need to make additional manipulations. Click the
    Next button.
  prefs: []
  type: TYPE_NORMAL
- en: 'SQLite Wizard contains a great number of templates that make an expert’s work
    much easier. Click on the drop-down menu and select the Contacts template:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d8df6042-48bf-4657-8745-8888d77daa3c.png)'
  prefs: []
  type: TYPE_IMG
- en: SQLite WizardR17 templates
  prefs: []
  type: TYPE_NORMAL
- en: In the upper part of the window, there will be rectangles, which will display
    the categories of the Contacts database; the table containing the values will
    be presented below. Drag the rectangles with the categories to the columns that
    correspond to them. It is fine if some rectangles with categories remain unused.
    Click the Next button.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the new window, you can specify the settings: whether to use the newly generated
    SQLite database analysis scheme for this analysis, or whether to use this analysis
    scheme for all subsequent examinations of mobile devices.'
  prefs: []
  type: TYPE_NORMAL
- en: You can close the SQLite Wizard by clicking the Close button, or run the analysis
    using the new `contacts2.db_backup` database analysis algorithm by clicking the
    Run button. At the end of the analysis, the extracted data will be added to what
    was received earlier.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Mobile forensics: UFED vs Magnet Acquire*, [https://www.digitalforensics.com/blog/mobile-forensics-ufed-vs-magnet-acquire/](https://www.digitalforensics.com/blog/mobile-forensics-ufed-vs-magnet-acquire/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
