- en: Data Acquisition from iOS Backups
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we covered techniques to acquire data from an iOS device,
    which included logical and filesystem acquisition. This chapter covers techniques
    to acquire a backup of files from the device onto a computer or iCloud, using
    Apple's synchronization protocol.
  prefs: []
  type: TYPE_NORMAL
- en: The physical acquisition of an iOS device provides the most data in an investigation,
    but you can also find a wealth of information in iOS backups. iOS device users
    have several options to back up the data present on their devices. Users can choose
    to back up the data to their computer, using the Apple iTunes software, or to
    the Apple cloud storage service known as iCloud. Every time an iPhone is synced
    with a computer or to iCloud, it creates a backup by copying the selected files
    from the device. The user can determine what is contained in the backup, so some
    backups may be more inclusive than others. Also, the user can back up to both
    a computer and iCloud and the data derived from each location may differ. This
    often occurs due to the limitations of iCloud's free storage. The user may simply
    back up photos and contacts to iCloud but may take a complete backup of all the
    data on their computer. As previously mentioned, physical acquisition provides
    the best access to all data on the iOS device; however, backups may be the only
    available source of digital evidence, especially if we are dealing with the most
    recent iOS devices.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Working with iTunes backups
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating and analyzing backups with iTunes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extracting unencrypted backups
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Handling encrypted backup files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with iCloud backups
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with iTunes backups
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A wealth of information is stored on any computer that has been previously synced
    with an iOS device. These computers, commonly referred to as host computers, can
    have historical data and passcode bypass certificates. In a criminal investigation,
    a search warrant can be obtained to seize a computer that belongs to a suspect,
    in order to access the backup and lockdown certificates. For all other cases,
    consent or permissible access is required. iOS backup file forensics mainly involves
    analyzing an offline backup produced by an iPhone or an iPad. Apple Watch data
    will be contained within the iPhone backup to which it is synced.
  prefs: []
  type: TYPE_NORMAL
- en: The iTunes backup method is also useful in cases where other acquisition types
    are not feasible. In this situation, you essentially create an iTunes backup of
    the device and analyze it using forensic software. Thus, it is important for you
    to completely understand the backup process and the tools involved, to ensure
    tools are capable of creating a forensic backup without contaminating the devices
    with other existing data in iTunes.
  prefs: []
  type: TYPE_NORMAL
- en: iPhone backup files can be created using the iTunes software, which is available
    for the macOS and Windows platforms. iTunes is a free utility provided by Apple
    for data synchronization and management between iOS devices and the computer.
    iTunes uses Apple's proprietary synchronization protocol to copy data from the
    iOS device to a computer. For example, an iPhone can be synced with a computer
    using a cable or Wi-Fi. iTunes provides an option for an encrypted backup, but,
    by default, it creates an unencrypted backup whenever an iPhone is synced. Encrypted
    backups, when cracked, provide additional access to data stored on the iOS device.
    This will be discussed later in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Users often create backup files to protect their data in the event that their
    device is damaged or lost. Either a forensic backup is created to act as the best
    evidence or data is simply extracted from existing iOS backup files to search
    for legacy information. For example, if you are under investigation and you delete
    files or wipe your iPhone, your backup files on your iCloud and your Mac still
    exist. Depending on whether iTunes or iCloud was used, multiple backups for the
    same device may exist. You will have to analyze each backup forensically to uncover
    artifacts relating to the investigation.
  prefs: []
  type: TYPE_NORMAL
- en: iTunes is configured to automatically initiate the synchronization process once
    the iOS device is connected to the computer. To avoid unintended data exchange
    between the iOS device and the computer, disable the automatic synchronization
    process before connecting your evidence to the forensic workstation. The screenshot
    in *Step 2* of the following process illustrates the option that disables automatic
    syncing in iTunes version 12.9.4.102.
  prefs: []
  type: TYPE_NORMAL
- en: 'To disable auto-syncing in iTunes, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Edit | Preferences | Devices.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Check Prevent iPods, iPhones, and iPads from syncing automatically and click
    on the OK button, as illustrated in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cd4a3226-ceaa-48e8-8d6b-493c80029190.png)'
  prefs: []
  type: TYPE_IMG
- en: Disabling automatic syncing in iTunes
  prefs: []
  type: TYPE_NORMAL
- en: As seen in the preceding screenshot, iOS backup files exist on the system. If
    this were a forensic workstation, these backup files wouldn't exist or would be
    permanently removed to prevent cross-contamination.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once you verify the synchronization settings, connect the iOS device to the
    computer using a **Universal Serial Bus** (**USB**) cable. If the connected device
    is not protected with a passcode or it was already connected to the computer recently,
    iTunes immediately recognizes the device; otherwise, you''ll have to enter the
    passcode. This can be verified by the iPhone icon displayed on the left-hand side of
    the iTunes interface, as illustrated in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/745e839b-d893-42fd-93d4-a040087edd43.png)'
  prefs: []
  type: TYPE_IMG
- en: An iPhone recognized by iTunes
  prefs: []
  type: TYPE_NORMAL
- en: 'Before iTunes can access the iPhone, you must enable Trust between the computer
    and the phone. You will be prompted to press Continue on the computer (as highlighted
    in the following screenshot) and select Trust on the iPhone. With iOS 11, you
    must also enter the device''s passcode:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/442913d1-f1ac-4726-a652-08f50317b151.png)'
  prefs: []
  type: TYPE_IMG
- en: iTunes prompts for access permissions
  prefs: []
  type: TYPE_NORMAL
- en: Once iTunes recognizes the device, a single click on the iPhone icon displays
    the iPhone summary, including the iPhone's name, capacity, firmware version, serial
    number, free space, and phone number. The iPhone Summary page also displays the
    options to create backups. The process of creating a backup will be discussed
    in the following section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, we are ready to start backing up the device. The next section will walk
    you through this process.
  prefs: []
  type: TYPE_NORMAL
- en: Creating and analyzing backups with iTunes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we are going to walk you through backing up an iOS device
    with Apple iTunes. We are using iTunes version 12.10.2.3 and an iPhone running
    iOS version 13.2\. Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Connect the device and click on the iPhone icon displayed on the left-hand side
    of the iTunes interface.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Go to the Backups section, where you can choose the backup destination (local
    computer or iCloud), and whether it''s encrypted, as illustrated in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b8421d5d-0ef2-4c07-a5a5-5b5146fb406e.png)'
  prefs: []
  type: TYPE_IMG
- en: iTunes Backups section
  prefs: []
  type: TYPE_NORMAL
- en: Encrypted iTunes backups contain data that unencrypted ones don't, including
    passwords, Wi-Fi settings, and web browsing history, so make sure you are creating
    encrypted backups for forensic purposes.
  prefs: []
  type: TYPE_NORMAL
- en: Click on the Back Up Now button and wait for the process to complete. Once it's
    complete, the latest backup date and time will be changed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you want to use iTunes and save the backup to an external drive, observe
    the following instructions (we are using iTunes version 12.10.2.3 and Windows
    10):'
  prefs: []
  type: TYPE_NORMAL
- en: Rename the original backup folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect the external drive and create a backup folder on it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open Command Prompt and type the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Now, you can create a regular local backup, and it will be saved to your external
    drive.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, we have the backup ready for further analysis. Let's look inside in order
    to understand its structure.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the backup structure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When the iPhone is backed up to a computer, the backup files are stored in
    a backup directory, which exists as a 40-character hexadecimal string and corresponds
    to the **Unique Device Identifier** (**UDID**) of the device. The newest devices
    have changed the UDID format—now it''s a 24-character string, so their backups
    are named accordingly. The backup process may take a considerable amount of time,
    depending on the size of the data stored on the iPhone during the first backup.
    The location of the backup directory in which your backup data is stored depends
    on the computer''s operating system. The following table displays a list of the
    common operating systems and the default locations of the iTunes backup directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Operating system** | **Backup directory location** |'
  prefs: []
  type: TYPE_TB
- en: '| Windows XP | `C:\Documents and Settings\<username>\Application Data\Apple
    Computer\MobileSync\Backup\` |'
  prefs: []
  type: TYPE_TB
- en: '| Windows Vista/7/8/10 | `C:\Users\<username>\AppData\Roaming\Apple Computer\MobileSync\Backup\`
    |'
  prefs: []
  type: TYPE_TB
- en: '| macOS | `~/Library/Application Support/MobileSync/Backup/`(`~` represents
    the home folder) |'
  prefs: []
  type: TYPE_TB
- en: During the first sync, iTunes creates a backup directory and takes a complete
    backup of the device. Currently, on subsequent syncs, iTunes only backs up the
    files that are modified on the device and updates the existing backup directory.
    This has not always been true since, in the past, a new backup was created every
    time the iOS device was backed up. Also, when a device is updated or restored,
    iTunes automatically initiates a backup and takes a *differential backup*. A differential
    backup has the same name as the backup directory but is appended with a dash (`-`),
    the **International Organization for Standardization** (**ISO**) date of the backup,
    a dash (`-`), and the time in a 24-hour format with seconds (`[UDID]+ '-' + [Date]+'-'+[Time
    stamp]`).
  prefs: []
  type: TYPE_NORMAL
- en: The iTunes backup may make a copy of everything on the device, including contacts,
    **Short Message Service** (**SMS**) messages, photos, calendars, music, call logs,
    configuration files, documents, the keychain, network settings, offline web application
    cache, bookmarks, cookies, application data (if selected), and more. For example,
    emails and passwords will not be extracted if the backup is not encrypted. The
    backup also contains device details, such as the serial number, UDID, **Subscriber
    Identification Module** (**SIM**) details, and phone number. This information
    can also be used to prove a relationship between the backup and the mobile device.
  prefs: []
  type: TYPE_NORMAL
- en: 'The backup directory contains four standard files, along with the individual
    files (up to iOS 9) or folders (iOS 10 and newer). Up to iOS 9, these four files
    were `info.plist`, `manifest.plist`, `status.plist`, and `manifest.mbdb`, but
    starting from iOS 10, we have the following standard files:'
  prefs: []
  type: TYPE_NORMAL
- en: '`info.plist`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`manifest.plist`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`status.plist`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`manifest.db`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These files store details about the backup and the device from which it was
    derived.
  prefs: []
  type: TYPE_NORMAL
- en: info.plist
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `info.plist` file stores details about the backed-up device, and typically
    contains the following information:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Applications`: This is the list of applications installed on the device.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Build version`: This is the iOS build version number.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Device name and display name`: This is the name of the device, which typically
    includes the owner''s name.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`GUID`: This is the **Globally Unique Identifier** (**GUID**) of the device.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ICCID`: This is the **Integrated Circuit Card Identifier** (**ICCID**), which
    is the serial number of the SIM.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IMEI`: This is the **International Mobile Equipment Identity** (**IMEI**),
    which is used to uniquely identify the mobile phone.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Installed Applications`: This is the list of installed applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Last backup date`: This is the timestamp of the last successful backup.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`MEID`: This is the **M****obile Equipment Identifier** (**MEID**) of the device.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Phone Number`: This is the phone number of the device at the time of backup.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Product Name`: This is the name of the device (for example, iPhone X).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Product type and product version`: This is the device''s model and firmware
    version.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Serial Number`: This is the serial number of the device.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Target Identifier and Unique Identifier`: This is the UDID of the device.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`iTunes Files`: This contains information about photos, folders, voice memos,
    and iTunes preferences.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`iTunes Settings`: This contains information about deleted applications and
    applications library.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`iTunes version`: This is the version of iTunes used to create the backup.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let's now take a look at the `manifest.plist` file.
  prefs: []
  type: TYPE_NORMAL
- en: manifest.plist
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `manifest.plist` file describes the contents of the backup, and typically
    contains the following information:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Backup keybag`: `Backup keybag` contains a set of data protection class keys
    that are different from the keys in `System keybag`, and backed-up data is re-encrypted
    with the new class keys. Keys in `Backup keybag` facilitate the storage of backups
    in a secure manner.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Version`: This is the backup version.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Date`: This is the timestamp of when a backup was created or last updated.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ManifestKey`: This is the key used to encrypt `manifest.db` (wrapped with
    protection class 4).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`WasPasscodeSet`: This identifies whether a passcode was set on the device
    when it was last synced.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Lockdown`: This contains device details, the last backup computer''s name,
    and other remote syncing profiles.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Applications`: This is a list of third-party applications installed on the
    backed-up device, their version numbers, and bundle identifiers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IsEncrypted`: This identifies whether the backup is encrypted. For encrypted
    backups, the value is `True`; otherwise, it is `False`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next, we will look at the `status.plist` file.
  prefs: []
  type: TYPE_NORMAL
- en: status.plist
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The `status.plist` file stores details about the backup status, and typically
    contains the following information:'
  prefs: []
  type: TYPE_NORMAL
- en: '`IsFullBackup`: This identifies whether the backup was a full backup of the
    device.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`UUID`: This is the UUID of the device.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Date`: This is the timestamp of the last time the backup was modified.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`BackupState`: This identifies whether the backup is a new backup or one that
    has been updated.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`SnapshotState`: This identifies whether the backup process has finished successfully.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, we will look at the `manifest.db` file.
  prefs: []
  type: TYPE_NORMAL
- en: manifest.db
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '`manifest.db` is an SQLite database that contains a list of all the files and
    folders extracted from the iPhone via the backup mechanism. The `Files` table
    of the database includes the following columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '`fileID`: This is a **Secure Hash Algorithm 1** (**SHA1**) hash of the domain,
    plus the `-` symbol and file or folder relative path. For example, `ae94e0607ca39a88c18aca095cb5b4f8471291a0` is
    the SHA1 hash for `CameraRollDomain-Media/PhotoData/Thumbnails/V2/DCIM/102APPLE`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`domain`: This is the domain to which the file or folder belongs (all files
    in iOS are divided into multiple domains—for example, `CameraRollDomain` and `HomeDomain`).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`relativePath`: This is the relative path to the file (including the filename)
    or folder.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`flags`: These are the file flags.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`file`: This is an embedded `.plist` file. These `.plist` files include the
    following important pieces of information, among others:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`LastModified`: This is the file''s last modification timestamp in Unix format.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Birth`: This is the file creation timestamp in Unix format. The fields are
    shown in the following screenshot:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/2a09529d-3480-464c-8afb-0e7d014da7e5.png)'
  prefs: []
  type: TYPE_IMG
- en: The manifest.db contents
  prefs: []
  type: TYPE_NORMAL
- en: 'You can easily export this `.plist` embedded binary using, for example, **DB
    Browser for SQLite** (**DB4S**). To do this, observe the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open `manifest.db` using the Open Database button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the Browse Data tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on a cell from in the file column.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On the Edit Database Cell pane, use the Export button to save the data as a
    `.plist` file, as illustrated in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f332d4d6-18d8-4cb4-9e3d-a2179fa99a87.png)'
  prefs: []
  type: TYPE_IMG
- en: Exporting an embedded .plist file with DB4S
  prefs: []
  type: TYPE_NORMAL
- en: 'Since iOS 10, files are no longer named with 40-character hexadecimal strings.
    Instead, you will see a list of folders named with 2-character hexadecimal strings,
    which contain the files you used to see in previous versions, as illustrated in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/abd922f2-d27c-4c4b-9a20-55caa7dae694.png)'
  prefs: []
  type: TYPE_IMG
- en: iPhone backup files
  prefs: []
  type: TYPE_NORMAL
- en: Now that you understand the backup structure, let's learn how to extract valuable
    data from it.
  prefs: []
  type: TYPE_NORMAL
- en: Extracting unencrypted backups
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are many free and commercial tools available to analyze data from unencrypted
    backups. These tools analyze the `manifest.db` database, restore the filenames,
    and create the file structure that users see on the iOS device. Some popular tools
    include iBackup Viewer, iExplorer, and commercial forensic tools such as Belkasoft
    Evidence Center, Magnet AXIOM, and UFED Physical Analyzer.
  prefs: []
  type: TYPE_NORMAL
- en: iBackup Viewer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: iBackup Viewer is a free tool for both Windows and macOS that can be downloaded
    from [http://www.imactools.com/iphonebackupviewer/](http://www.imactools.com/iphonebackupviewer/).
  prefs: []
  type: TYPE_NORMAL
- en: The tool expects the backup to be located in the default location, but you can
    change it to the location of your choice—for example, an external drive.
  prefs: []
  type: TYPE_NORMAL
- en: 'To extract the backup, observe the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If the backup you want to analyze is not saved in the default location, click
    on the Preferences hyperlink on the main screen and choose the correct location,
    as illustrated in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7d721288-26e8-4efc-8ba7-e9980bb11f08.png)'
  prefs: []
  type: TYPE_IMG
- en: Choosing the backup location
  prefs: []
  type: TYPE_NORMAL
- en: You will see the backups available in the location you chose. Click on the one
    you want to examine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You will see potential evidence sources that are available, including contacts,
    call history, messages, the calendar, notes, voicemails, and browsing history,
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4557fd56-0717-4fc1-a19b-719d96b052e9.png)'
  prefs: []
  type: TYPE_IMG
- en: Potential evidence sources
  prefs: []
  type: TYPE_NORMAL
- en: 'It''s important to note that you can browse the backup as a filesystem, using
    the Raw Data mode (the last icon in the previous screenshot), as shown in the
    following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/205a6416-096a-4760-8cc8-31c961d20547.png)'
  prefs: []
  type: TYPE_IMG
- en: The Raw Data mode
  prefs: []
  type: TYPE_NORMAL
- en: With the help of this tool, you can easily view and export files of interest.
    Of course, it's not the only tool capable of solving such tasks. Let's look at
    another one—iExplorer.
  prefs: []
  type: TYPE_NORMAL
- en: iExplorer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A free version of iExplorer is available at [https://macroplant.com/iexplorer](https://macroplant.com/iexplorer).
    This tool supports both Windows and macOS and is capable of browsing iTunes backups,
    too. Here is how to use it:'
  prefs: []
  type: TYPE_NORMAL
- en: Launch iExplorer and click on Browse iTunes Backups.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To add a backup from a custom location, click on Add/Modify Backup Location.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, click on the Add Backup Location button and choose the path, as illustrated
    in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b71ea292-3321-478a-908f-53190c144262.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding a custom path
  prefs: []
  type: TYPE_NORMAL
- en: The backups from your custom location should now be available.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Also, there is an interesting option—iExplorer can gather SQLite databases
    for you. To do this, click on the Raw Databases button to take you to the following
    screen (you will learn more about SQLite forensics in the following chapter):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/76857736-da9b-4ba6-88a7-117ddc97edb9.png)'
  prefs: []
  type: TYPE_IMG
- en: iExplorer Raw Databases option
  prefs: []
  type: TYPE_NORMAL
- en: You can also browse the backup as a list of files and folders with the help
    of iExplorer; use the left pane for this. Also, you can use the Backup Explorer button
    and then the main pane to browse the backup.
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, there are enough tools capable of extracting valuable pieces
    of data from an iTunes backup, even if it's encrypted. Of course, it's usually
    possible if you know the password. But what if you don't? You will learn how to
    bypass it in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Handling encrypted backup files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For encrypted backups, the backup files are encrypted using the **Advanced Encryption
    Standard-256** (**AES-256**) algorithm in the **Cipher Block Chaining** (**CBC**)
    mode, with a unique key and a null **initialization vector** (**IV**). The unique
    file keys are protected with a set of class keys from `Backup keybag`. The class
    keys in `Backup keybag` are protected with a key derived from the password set
    in iTunes through 10,000 iterations of the **Password-Based Key Derivation Function
    2** (**PBKDF2**). In iOS 10.2 this mechanism was upgraded, so now, there are 10,000,000
    iterations.
  prefs: []
  type: TYPE_NORMAL
- en: Many free and commercial tools provide support for encrypted backup file parsing
    if the password is known. Unfortunately, it's not always true, so sometimes forensic
    examiners have to crack such passwords. The next section will walk you through
    this process, with Elcomsoft Phone Breaker.
  prefs: []
  type: TYPE_NORMAL
- en: Elcomsoft Phone Breaker
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Elcomsoft Phone Breaker** is a **graphics processing unit** (**GPU**)-accelerated
    commercial tool from Elcomsoft, developed for the Windows platform. The tool can
    decrypt an encrypted backup file when the backup password is not available. The
    tool provides an option to launch a password brute-force attack on the encrypted
    backup if the backup password is not available. Elcomsoft Phone Breaker tries
    to recover the plain-text password that protects the encrypted backup, using a
    dictionary and brute-force attacks. Passwords that are relatively short and simple
    can be recovered in a reasonable amount of time. However, if the backup is protected
    with a strong and complex password, breaking it can take forever.'
  prefs: []
  type: TYPE_NORMAL
- en: The tool is available here (including free trial version): [https://www.elcomsoft.com/eppb.html](https://www.elcomsoft.com/eppb.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'To brute-force the backup password, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Launch the Elcomsoft Phone Breaker tool and the tool''s main screen will appear,
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cd84841d-8b0d-4615-8c57-977ebfcde583.png)'
  prefs: []
  type: TYPE_IMG
- en: Elcomsoft Phone Breaker's main screen
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Password Recovery Wizard | Choose source | iOS device backup. Navigate
    to the backup file you want to crack, and select the `Manifest.plist` file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Configure the brute-force pattern in the Attacks section and click on the Start
    button to start the brute-force attack, as illustrated in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/05e7ff98-bf10-4a8c-9504-19f447e30d9a.png)'
  prefs: []
  type: TYPE_IMG
- en: Password recovery process
  prefs: []
  type: TYPE_NORMAL
- en: If the brute-force attack is successful, the tool displays the password on the
    main screen.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have an iPhone running iOS 11 or later, and its passcode, you can reset
    the actual password and make a backup with a new known password. Here is how to
    do it:'
  prefs: []
  type: TYPE_NORMAL
- en: On the iPhone, go to Settings | General | Reset.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose Reset All Settings and enter the device's passcode. It's important to
    note that no data will be deleted.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the settings are reset, you can create a new backup with a password of
    your choice.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If the Screen Time password is set, you will need it as well to reset the backup
    password.
  prefs: []
  type: TYPE_NORMAL
- en: Working with iCloud backups
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: iCloud is a cloud storage and cloud computing service by Apple, launched in
    October 2011\. The service allows users to keep data such as calendars, contacts,
    reminders, photos, documents, bookmarks, applications, notes, and more in sync
    across multiple compatible devices (iOS devices running with iOS 5 or later; computers
    with macOS X 10.7.2 or later; and Microsoft Windows), using a centralized iCloud
    account. The service also allows users to wirelessly and automatically back up
    their iOS devices to iCloud. iCloud also provides other services, such as *Find
    My iPhone* (to track a lost phone and wipe it remotely) and *Find My Friends*(to
    share locations with friends and notify the user when a device arrives at a certain
    location).
  prefs: []
  type: TYPE_NORMAL
- en: Signing up with iCloud is free, and is simple to perform with an Apple ID. When
    you sign up for iCloud, Apple grants you access to 5 GB of free remote storage.
    If you need more storage, you can purchase the upgrade plan. To keep your data
    secure, Apple forces users to choose a strong password when creating an Apple
    ID to use with iCloud. The password must have a minimum of eight characters, including
    a number, an uppercase letter, and a lowercase letter.
  prefs: []
  type: TYPE_NORMAL
- en: 'iOS devices running on iOS 5 and later allow users to back up the device settings
    and data to iCloud. Data backed up includes photos, videos, documents, application
    data, device settings, messages, contacts, calendars, emails, and keychain, as
    shown in the following screenshot. You can turn on iCloud backup on your device
    by navigating to Settings | Passwords & Accounts | iCloud | iCloud:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8642cddc-4b29-4b88-a86c-aa6eff0ce81c.png)'
  prefs: []
  type: TYPE_IMG
- en: iCloud backup options on the iPhone
  prefs: []
  type: TYPE_NORMAL
- en: iCloud can automatically back up your data when your phone is plugged in, locked,
    and connected to Wi-Fi. That is to say, iCloud backups represent a fresh and near-real-time
    copy of information stored on the device, as long as space is available to create
    a current backup.
  prefs: []
  type: TYPE_NORMAL
- en: You can also initiate an iCloud backup from a computer by connecting the device
    to iTunes and choosing the iCloud option. iCloud backups are incremental; that
    is, once the initial iCloud backup is completed, all the subsequent backups only
    copy the files that are changed on the device. iCloud secures your data by encrypting
    it when it is transmitted over the internet, storing it in an encrypted format
    on the server, and using secure tokens for authentication.
  prefs: []
  type: TYPE_NORMAL
- en: Apple's built-in apps (for example, Mail and Contacts) use a secure token to
    access iCloud services. Using secure tokens for authentication eliminates the
    need to store the iCloud password on devices and computers.
  prefs: []
  type: TYPE_NORMAL
- en: Extracting iCloud backups
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Online backups stored on the iCloud are commonly retrieved when the original
    iOS device is damaged, upgraded, or lost. To extract a backup from iCloud, you
    must know the user's Apple ID and password. With the known Apple ID and password,
    you can log on to [https://www.icloud.com/](https://www.icloud.com/) and get access
    to contacts, notes, emails, calendars, photos, reminders, and more. You can also
    use forensic tools to extract data from iCloud. For example, you can use **Belkasoft
    Acquisition Tool**, a free tool from Belkasoft that can be downloaded from: [https://belkasof](https://belkasoft.com/get)[t.com/get](https://belkasoft.com/get).
  prefs: []
  type: TYPE_NORMAL
- en: 'To extract the iCloud data, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Launch Belkasoft Acquisition Tool.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose the Cloud option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose iCloud.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Type the Apple ID login and password, and click Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Choose the artifacts you want to download and the target folder in which you
    want to place them, as illustrated in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/39f11047-23d1-406a-be2f-7f7502db302d.png)'
  prefs: []
  type: TYPE_IMG
- en: Data types available for downloading
  prefs: []
  type: TYPE_NORMAL
- en: Enter the verification code.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Wait for the process to complete. You'll find the files in the folder you've
    chosen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you prefer full backups, the best choice is Elcomsoft Phone Breaker.
  prefs: []
  type: TYPE_NORMAL
- en: 'To download the iCloud backup, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Launch Elcomsoft Phone Breaker.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose the Backups option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the Apple ID and password, or use a previously extracted token.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If Apple ID is protected with **two-factor authentication** (**2FA**), enter
    the code in the corresponding field.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Choose the backup you want to download, as illustrated in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/166f5a2c-ef6d-41c2-a2bc-4322af253536.png)'
  prefs: []
  type: TYPE_IMG
- en: Choosing the backup for downloading
  prefs: []
  type: TYPE_NORMAL
- en: Once downloading is completed, you can analyze the backup with your tool of
    choice—for example, one of the tools discussed throughout this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: iOS device backups contain essential information that may be your only source
    of evidence. Information stored in iOS backups includes photos, videos, contacts,
    emails, call logs, user accounts and passwords, applications, and device settings.
    This chapter explained how to create backup files and retrieve data from iTunes
    and iCloud backups, including encrypted backup files, wherever possible.
  prefs: []
  type: TYPE_NORMAL
- en: The following chapter, [Chapter 5](4f92f4a2-f8f9-4274-96eb-da9174fc6772.xhtml),
    *iOS Data Analysis and Recovery*, goes further into the forensic investigation
    by showing you how to analyze the data recovered from the backup files.
  prefs: []
  type: TYPE_NORMAL
