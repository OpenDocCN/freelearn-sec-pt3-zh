["```\npublic class SampleTablePlugin extends ProgramPlugin {\n```", "```\n    private SampleTableProvider provider;\n```", "```\n    private Function currentF\tunction;\n```", "```\nclass SampleTableModel extends ThreadedTableModelStub<FunctionStatsRowObject> {\n```", "```\n    private SampleTablePlugin plugin;\n```", "```\n    SampleTableModel(SampleTablePlugin plugin) {\n```", "```\nimport ghidra.program.model.address.Address;\n```", "```\nimport ghidra.program.model.listing.Function;\n```", "```\npublic class FunctionStatsRowObject {\n```", "```\n    private final Function function;\n```", "```\n    private final String algorithmName;\n```", "```\n    private int score;\n```", "```\n    FunctionStatsRowObject(Function function, String algorithmName, int score) {\n```", "```\npublic class SampleTableProvider extends ComponentProviderAdapter implements OptionsChangeListener {\n```", "```\n    private SampleTablePlugin plugin;\n```", "```\n    private JComponent component;\n```", "```\n    private GFilterTable<FunctionStatsRowObject> filterTable;\n```", "```\n    private SampleTableModel model;\n```", "```\n    private List<FunctionAlgorithm> discoveredAlgorithms;\n```", "```\n    private GCheckBox[] checkBoxes;\n```", "```\n    private GhidraFileChooserPanel fileChooserPanel;\n```", "```\n    private boolean resetTableData;\n```", "```\n    public SampleTableProvider(SampleTablePlugin plugin) {\n```", "```\npublic interface FunctionAlgorithm extends ExtensionPoint {\n```", "```\n    public int score(Function function, TaskMonitor monitor) throws CancelledException;\n```", "```\n    public String getName();\n```", "```\n}\n```", "```\nimport ghidra.program.model.address.AddressSetView;\n```", "```\nimport ghidra.program.model.listing.Function;\n```", "```\nimport ghidra.util.task.TaskMonitor;\n```", "```\npublic class SizeFunctionAlgorithm implements FunctionAlgorithm {\n```", "```\n    @Override\n```", "```\n    public String getName() {\n```", "```\n        return \"Function Size\";\n```", "```\n    }\n```", "```\n    @Override\n```", "```\n    public int score(Function function, TaskMonitor monitor) {\n```", "```\n        AddressSetView body = function.getBody();\n```", "```\n        return (int) body.getNumAddresses();\n```", "```\n    }\n```", "```\n}\n```", "```\n    public SkeletonAnalyzer() {\n            super(\"My Analyzer\", \"Analyzer description goes here\", AnalyzerType.BYTE_ANALYZER);\n    }\n    ```"]