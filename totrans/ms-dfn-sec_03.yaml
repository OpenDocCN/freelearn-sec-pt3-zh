- en: '*Chapter 2***: Managing Threats, Vulnerabilities, and Risks**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*"You can never eliminate all risks – focus on identifying highest risks and
    mitigate or remove".*'
  prefs: []
  type: TYPE_NORMAL
- en: '*– Dianne Johansen - Security IT Director | IBM*'
  prefs: []
  type: TYPE_NORMAL
- en: As a cybersecurity professional, you will have to deal with a plurality of vulnerabilities,
    threats, and risks. These three terms are normally used synonymously; however,
    they are very different, and it is very important that you understand how to approach
    and manage them.
  prefs: []
  type: TYPE_NORMAL
- en: Now, you need to understand that*there are no risk-free systems* and your infrastructure
    and systems could (and will) fail at any time. Therefore, you must be prepared
    to ensure that your business continues (or resumes) operations if there is a disaster.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this second chapter, we will cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: What a vulnerability assessment is and how to create one
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The most common types of vulnerabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An overview of USB HID vulnerabilities and devices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The best mechanisms to keep your infrastructure protected against vulnerabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing cybersecurity risks like a master
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An overview of the NIST Cybersecurity Framework
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating an effective **Business Continuity Plan** (**BCP**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing a best-in-class **Disaster Recovery Plan** (**DRP**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can enhance your reading by using a device with internet access to check
    some of the web resources provided. However, this chapter contains all that you
    need for a full learning experience.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding cybersecurity vulnerabilities and threats
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All systems, processes, infrastructures, and environments have vulnerabilities.
    Those vulnerabilities are normally caused by design flaws, bugs, bad implementations,
    a lack of updates, and many other causes that attackers (or threat agents) will
    leverage in order to gain access to your systems and/or cause disruption.
  prefs: []
  type: TYPE_NORMAL
- en: '*The question is not whether a system has vulnerabilities, but who will discover
    them first?*'
  prefs: []
  type: TYPE_NORMAL
- en: Performing a vulnerability assessment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As a cybersecurity expert, you must be on the constant search for new vulnerabilities
    in order to keep your infrastructure secure.
  prefs: []
  type: TYPE_NORMAL
- en: The process of performing this search is called **v****ulnerability assessment**.
  prefs: []
  type: TYPE_NORMAL
- en: There are two main ways to do it. The first is to use offensive techniques (such
    as penetration testing), and the second one is more like a defensive technique
    based on the identification of known vulnerabilities on your infrastructure by
    searching for all the vulnerabilities associated with the systems and products
    that you have.
  prefs: []
  type: TYPE_NORMAL
- en: One of the best places to visit to find those vulnerabilities is the **Common
    Vulnerabilities and Exposures** (**CVE**) website, which you can view at [https://cve.mitre.org/](https://cve.mitre.org/).
  prefs: []
  type: TYPE_NORMAL
- en: This website has more than 130,000 vulnerabilities that are present on almost
    all major systems (including both software and hardware).
  prefs: []
  type: TYPE_NORMAL
- en: '*Now, let me ask you, have you ever checked whether your printer is vulnerable?*
    Well, there are more than 200 vulnerabilities related to printers on this page;
    some of them are related to **denial of service**, **remote code execution**,
    **buffer overflow**, and more. So, if you haven''t check whether the printers
    you manage are vulnerable, *do it now*!'
  prefs: []
  type: TYPE_NORMAL
- en: '*Do you or your company have a web page created in Joomla?* If yes, you will
    be surprised to know that there are more than 1,200 vulnerabilities listed there
    that are related to Joomla and that is just for Joomla because there are many
    more vulnerabilities for other CMS softwares:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.1 – Joomla vulnerabilities'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.1_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.1 – Joomla vulnerabilities
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, in *Figure 2.1*, the vulnerabilities are sorted by the date
    of discovery. However, in the description, those vulnerable can be related to
    older versions (such as version 3.9) or even newer versions (such as version 5.2.8).
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Many of these vulnerabilities are fixed through patches or updates (that is
    why it's so important to keep your systems up to date). However, there are many
    others that might not have a patch and will require you to perform some changes
    to the configuration in order to remove the vulnerability.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's review the process that you need to follow to properly manage the
    vulnerabilities on your infrastructure like a pro!
  prefs: []
  type: TYPE_NORMAL
- en: The vulnerability assessment process
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Each company has its own unique way in which to perform a vulnerability assessment;
    however, most of them are based on the following stages.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability identification
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This step is about how you identify the vulnerabilities on your systems and
    networks. Here, you can use well-known tools such as vulnerability scanners or
    even a penetration test to perform an effective identification.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Once you identify a vulnerability, it is time to analyze it and gather as much
    information about it as possible. For example, you need to consider the following
    questions: *how much will it cost me if that vulnerability is exploited against
    my company?; how many people will be affected?; and what is the source of the
    vulnerability?*.'
  prefs: []
  type: TYPE_NORMAL
- en: It is very common to perform a **Root Cause Analysis** (**RCA**) to find the
    root cause of the vulnerability and the associated cost to fix it.
  prefs: []
  type: TYPE_NORMAL
- en: Risk assessment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is about performing a risk assessment to evaluate the risk in terms of
    probability and impact (both qualitative and quantitative). But it is also used
    to determine other factors such as cost analysis, mitigation analysis, and more.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability remediation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Once you have all of those analyses, you must proceed with the implementation
    of the *best remediation* (or, at the very least, the one selected by upper management)
    to reduce the risk associated with the vulnerability:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.2 – The vulnerability assessment process'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.2_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.2 – The vulnerability assessment process
  prefs: []
  type: TYPE_NORMAL
- en: Notice that this process is *iterative* because any given remediation might
    introduce a new vulnerability into your infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: When should you check for vulnerabilities?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You must constantly be on the lookout for new vulnerabilities; however, there
    are some events in which you must do an assessment to find new vulnerabilities.
    Here are some examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Before the purchase of any devices, systems, or software**: Make sure that
    the manufacturer constantly releases patches for known vulnerabilities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Every time a new system is acquired**: There will be cases when a new system
    is acquired without your consent. So, in those cases, you will need to make sure
    that any vulnerability is fixed before implementation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**When a new business is acquired**: This is to ensure their security policies
    match your security policies.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**When a new office/branch location is opened**: This is to check for vulnerabilities
    related to availability (or the redundancy of services) as well as physical security
    vulnerabilities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**When moving to another physical location**: This is similar to the previous
    example. You need to make sure the new location does not add any new vulnerabilities
    regarding availability and physical security.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**The contract of a new contractor**: This is to make sure they don''t bring
    equipment that could bring vulnerabilities to your environment; for example, a
    third party that is hired to perform a job in your company should not be using
    a non-supported operating system (such as Windows XP).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, let's do an in-depth review of the most common types of vulnerabilities
    that you could face as a cybersecurity professional.
  prefs: []
  type: TYPE_NORMAL
- en: Types of vulnerabilities
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are many types of vulnerabilities. However, here, I will try to summarize
    the most important ones.
  prefs: []
  type: TYPE_NORMAL
- en: Software vulnerabilities
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Bugs, design flaws, backdoors, and zero-day are among the most common software
    vulnerabilities that you will face. The good thing is that there are several tools
    aimed at searching for those vulnerabilities, and we will review them in greater
    depth in [*Chapter 13*](B16290_13_Final_JC_ePub.xhtml#_idTextAnchor308), *Vulnerability
    Assessment Tools*.
  prefs: []
  type: TYPE_NORMAL
- en: User vulnerabilities
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Users are one of the most vulnerable factors in any organization and there are
    many reasons for this; for instance, you can have users who use a weak password,
    users who use the same passwords in all systems (both personal and professional),
    and users who leave unlocked systems unattended. The list goes on.
  prefs: []
  type: TYPE_NORMAL
- en: However, this is very complex, so we will be addressing this vulnerability in
    more detail, including how you can protect against it, in [*Chapter 4*](B16290_04_Final_JC_ePub.xhtml#_idTextAnchor092),
    *Patching Layer 8*.
  prefs: []
  type: TYPE_NORMAL
- en: Physical vulnerabilities
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As if you don't have enough to take care of, you also need to check for vulnerabilities
    related to the building or campus where your systems are located. For example,
    you need to make sure that the building is not vulnerable to a given weather condition,
    which could disrupt your systems (such as flooding or water leaks). Additionally,
    you also need to evaluate the vulnerabilities related to your physical access
    systems; we will cover that in more detail in [*Chapter 9*](B16290_09_Final_JC_ePub.xhtml#_idTextAnchor213),
    *Deep Diving into Physical Security*.
  prefs: []
  type: TYPE_NORMAL
- en: Web vulnerabilities
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is imperative that you check your web-facing devices and systems to see what
    others see and find any vulnerability so that you can patch it before someone
    else exploits it. There are several ways to find those web vulnerabilities, and
    we will explore many of them throughout this book. One very simple method that
    you can leverage to check whether your web resources are exposed is the **Google
    Hacking Database** (**GHDB**). This is a compilation of Google search keys (known
    as **dorks**) that enable you to leverage the Google search engine to discover
    exposed documents and information on websites and devices connected to the internet
    and indexed by Google.
  prefs: []
  type: TYPE_NORMAL
- en: There are thousands of possible dorks that you can use to find vulnerabilities
    in your web resources, which could expose sensitive information such as usernames,
    passwords, directories, config files, tables, databases, documents, and more.
  prefs: []
  type: TYPE_NORMAL
- en: Do you want to learn more about the GHDB?
  prefs: []
  type: TYPE_NORMAL
- en: 'On this page, you can find more than 5,000 dorks ready for you to use. I am
    sure that you will be shocked by what you find here: [https://www.exploit-db.com/google-hacking-database](https://www.exploit-db.com/google-hacking-database).'
  prefs: []
  type: TYPE_NORMAL
- en: There is a super cool application, called **Damn Vulnerable Web Application**
    (**DWWA**), that you can use to see and explore web vulnerabilities *in a controlled
    environment*. If you want to know more about this great application, jump to [*Chapter
    12*](B16290_12_Final_JC_ePub.xhtml#_idTextAnchor287), *Mastering Web App Security*.
  prefs: []
  type: TYPE_NORMAL
- en: IoT vulnerabilities
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: IoT is a booming technology and almost all companies have some type of IoT implementation
    in their infrastructure. Therefore, it is very important that you analyze all
    IoT implementation to check for vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Sometimes, those devices are installed without the authorization of the security
    team, and the main risk is when they are left with default credentials. So, make
    sure all IoT implementation (even if it's just some gadgets) are properly configured.
  prefs: []
  type: TYPE_NORMAL
- en: There are several websites that crawl the internet to look for vulnerable web
    pages. You can find a variety of sites that vary from pages that scan the internet
    for webcams with default passwords (such as [www.insecam.org](https://www.insecam.org))
    to more robust pages that scan several ports to find vulnerabilities on exposed
    systems.
  prefs: []
  type: TYPE_NORMAL
- en: 'One of the best websites to do that is [www.shodan.io](https://www.shodan.io).
    This search engine allows you to find vulnerabilities on websites, IoT devices,
    webcams, databases, **industrial control systems** (**ICSes**), routers, network
    devices, and more. With a quick search, you will be impressed by the *huge* number
    of devices with default credentials on the web:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.3 – Shodan''s search categories'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.3_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.3 – Shodan's search categories
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, in *Figure 2.2*, you can even search by categories on [Shodan.io](https://Shodan.io)
    to find vulnerable *devices, cams, Databases, and even ICS systems* (we will review
    them in more detail in the following section).
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: You can use [Shodan.io](http://Shodan.io) to look for vulnerabilities on your
    sites, systems, and devices exposed to the internet. The search engine allows
    you to look by URL, IP address, subnet, type of device, country, and more.
  prefs: []
  type: TYPE_NORMAL
- en: I will expand this topic with many examples (including how to leverage IoT-enabled
    devices for security) in [*Chapter 10*](B16290_10_Final_JC_ePub.xhtml#_idTextAnchor231),
    *Applying IoT Security*.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerabilities on SCADA/ICS
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If your company does any type of manufacturing; has a smart building; uses smart
    systems to manage energy, waste, and water; or is in the business of smart cities,
    then it is very possible that they have some SCADA systems.
  prefs: []
  type: TYPE_NORMAL
- en: Those systems are critical, and you need to ensure that they are protected as
    the impact of an attack on those systems is usually devastating for the company.
    One good example of the impact of this type of attack is **Stuxnet**. This state-backed
    attack was able to disrupt a nuclear power plant by targeting their SCADA systems.
  prefs: []
  type: TYPE_NORMAL
- en: 'These systems are very complex, and, depending on the vendor, they can be very
    different from each other, making the task of securing them quite complex. However,
    there are some steps or best practices that you can apply to secure these systems:'
  prefs: []
  type: TYPE_NORMAL
- en: If possible, schedule maintenance services performed by the vendor, and make
    sure those services include a vulnerability assessment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Keep the devices up to date with the latest updates.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understand the protocols used by the system and look for associated vulnerabilities.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Delete or disable unused users on the systems.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable the features that are not in use by your organization to reduce the
    number of risks and possible vulnerabilities.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid the use of third-party plugins if not approved by the vendor.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable remote access connections or mobile applications if not in use.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable unused APIs.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apply network segmentation and isolate those devices from other web-facing systems.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Restrict physical access to the management consoles of the devices.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make sure that all default users and passwords are changed for strong credentials.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If your organization does not have any experience with these systems, the best
    practice is to hire a third-party company to either provide your team with training
    about how to secure those systems or have a contract with them in order to keep
    those systems secure.
  prefs: []
  type: TYPE_NORMAL
- en: Supplier vulnerabilities
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Remember that the availability of your systems relies on your suppliers, so
    you need to analyze them to uncover any possible vulnerabilities associated with
    those suppliers (such as the internet provider, cloud provider, hardware provider,
    and more).
  prefs: []
  type: TYPE_NORMAL
- en: Client vulnerabilities
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There could be cases in which you will have to connect your systems to the network
    or infrastructure of a partner or client; in those cases, you need to perform
    a detailed vulnerability assessment of those foreign systems to ensure they do
    not add additional vulnerabilities to your infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: Dependencies
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One very important aspect to consider when doing a vulnerability assessment
    is identifying our system or infrastructure dependencies and then analyzing those
    dependencies to uncover any potential vulnerabilities. One clear example of this
    is a system that might consume artificial intelligence (such as a chatbot) through
    an API connection that, if down, will not work properly or can be spoofed.
  prefs: []
  type: TYPE_NORMAL
- en: Process vulnerabilities
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Imagine that your company does *not* have a process regarding what to do when
    an employee leaves the company. In this scenario, one system administrator might
    just disable the user (which creates a residual risk), while another might delete
    the user (which could be a problem because you leave no traceability to that user).
    Therefore, both scenarios could cause a problem. This is why a missing, incomplete,
    or poorly designed **Identity and Access Management** process is, itself, a big
    vulnerability.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Starting a vulnerability assessment is probably the hardest part of the process
    because you might not know where to start. Here, my recommendation will be to
    first outline the **vulnerability types** as categories and then start looking
    for vulnerabilities in those areas. That will serve you as a starting point, but
    it will also help you to avoid leaving an entire category unassessed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, it is time to learn about one of the *biggest vulnerabilities* that is
    being exploited by attackers with physical access to a system: **USB HID Vulnerabilities**.'
  prefs: []
  type: TYPE_NORMAL
- en: USB HID vulnerabilities
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This vulnerability should, ideally, have been a subtopic of the *Types of vulnerabilities*
    section. However, I decided to create an entire section dedicated to these vulnerabilities
    because they are a very common and *dangerous* vulnerability that is present in
    almost all companies and infrastructures. Therefore, it is key that you clearly
    understand them and be prepared to apply a plurality of methods, systems, strategies,
    and techniques to effectively protect your company against them.
  prefs: []
  type: TYPE_NORMAL
- en: A real and dangerous threat
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'What makes this vulnerability so relevant is that it is present in almost all
    systems regardless of the operating system. In fact, the chances are that all
    your systems (including computers, tablets, laptops, and even servers) have this
    vulnerability:'
  prefs: []
  type: TYPE_NORMAL
- en: '*"USB HID-based vulnerabilities are considered one of the worst IT threats
    ever discovered."*'
  prefs: []
  type: TYPE_NORMAL
- en: '*– Rhonda Childress*'
  prefs: []
  type: TYPE_NORMAL
- en: 'The reason is that it leverages two factors that are present in almost all
    systems: **a USB connection and HID drivers**.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Another factor that makes this threat even more dangerous (and relevant) is
    the price of the hardware needed. In fact, to leverage this vulnerability, you
    just need a board with the ATMEGA 32U4 chipset, which (as shown in *Figure 2.4*)
    can be found on several cheap boards (below $5):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.4 – ATMEGA 32U4 boards'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.4_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.4 – ATMEGA 32U4 boards
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's take a deeper look at the technical side of this attack and some
    examples.
  prefs: []
  type: TYPE_NORMAL
- en: What are HID drivers?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Almost all systems will allow human inputs (that is, interactions with the system),
    and that is done through a device such as a mouse or a keyboard. Therefore, to
    make our life easier, a set of generic drivers were created and loaded in all
    operating systems to make almost all keyboards and mice truly **Plug and Play**
    devices. This was very convenient for users until they were exploited by attackers
    to perform keystroke attacks.
  prefs: []
  type: TYPE_NORMAL
- en: The beginning of USB HID attacks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When working as a system administrator, my friend and founder of Hak5 Darren
    Kitchen was tired of typing the same commands to fix devices. So, he programmed
    a development board to emulate the typing for him; thus, the *keystroke injection
    attack was born*.
  prefs: []
  type: TYPE_NORMAL
- en: How does the attack work?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is very simple; when the malicious USB device is connected, the device
    presents itself as an HID device (either a keyboard or a mouse), and since HID
    devices are trusted by default, the malicious device will now have full access
    to inject any code or commands into the target system. However, since this is
    a low-level attack, the code needed to inject the keystrokes was a bit complex,
    that was, until the arrival of the **USB Rubber Ducky** and **Rubber Ducky Scripts**.
  prefs: []
  type: TYPE_NORMAL
- en: Types of USB HID attacks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: While the **UBS Rubber Ducky** was the first commercial device that leverages
    this vulnerability, nowadays, many other devices can be used to leverage this
    vulnerability. Here, we will explore the most famous ones.
  prefs: []
  type: TYPE_NORMAL
- en: USB Rubber Ducky
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '*"Looks like a flash drive – types like a keyboard".*'
  prefs: []
  type: TYPE_NORMAL
- en: 'A few years ago, Darren Kitchen from Hak5 introduced the **USB Rubber Ducky**,
    a USB device that is capable of exploiting this USB vulnerability and allows you
    to inject almost any payload onto the target machine:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.5 – The USB Rubber Ducky specification'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.5_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.5 – The USB Rubber Ducky specification
  prefs: []
  type: TYPE_NORMAL
- en: 'While this tool was created for system administrators and penetration testers,
    the risk of this device being used by an attacker is very high:'
  prefs: []
  type: TYPE_NORMAL
- en: '*"As we know from experience, trust is difficult to build and easy to break.
    The USB Rubber Ducky – with its flash drive appearance – breaks trust by deceiving
    the human operator into thinking it''s innocuous. Likewise – by mimicking a keyboard
    – it deceives the computer into thinking it''s a human. A simple lie is so effective
    when computers, by design, are built to inherently trust humans – and to be perfectly
    honest, I don''t want to live in a world where they don''t."*'
  prefs: []
  type: TYPE_NORMAL
- en: '*– Darren Kitchen*'
  prefs: []
  type: TYPE_NORMAL
- en: USB Rubber Ducky scripts
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'One of the best contributions to the penetration testing and system administrator
    community was the introduction of the **Ducky Scripts**, a super simple (and elegant)
    language that allows you to write payloads for a plurality of *malicious USB HID
    devices* using any text editor:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.6 – Ducky Script Sample'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.6_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.6 – Ducky Script Sample
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, in the preceding screenshot, creating Ducky Script is very easy
    and intuitive. In this example, you use **REM** to add a comment, then add a **Delay**
    of 3,000 milliseconds, which is a good practice on these kinds of scripts because
    it waits 3 seconds before executing the actions. This allows enough time for Windows
    to load all of the drivers and make sure that the device is ready when executing
    the attack.
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, it opens Command Prompt (**Windows + R**) and adds another small delay
    (to make sure the system has enough time to open the *run* window). Then, it injects
    some *keystrokes* to open a program with a given set of parameters. In this example,
    we open **Internet Explorer** in kiosk mode (full screen) and then open a page
    that emulates a system update, as shown in the following screenshot (an update
    from Steam):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.7 – A fake update screen'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.7_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.7 – A fake update screen
  prefs: []
  type: TYPE_NORMAL
- en: This is a harmless example that could just cause some panic to the user, but
    without any real damage. However, an attacker can perform a lot of very dangerous
    attacks using this kind of device, such as exfiltrating your data to a remote
    server, executing a reverse shell, stealing user credentials, and more.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: 'Do you want to know more about Ducky Script? Here is the link to the official
    Git Wiki where you can learn more about how to create your own script along with
    many examples, including DNS poisoning attacks, OSX attacks, and more: [https://github.com/hak5darren/USB-Rubber-Ducky/wiki](https://github.com/hak5darren/USB-Rubber-Ducky/wiki).'
  prefs: []
  type: TYPE_NORMAL
- en: While the USB Rubber Ducky was the pioneer device that leveraged this vulnerability,
    there are many other devices that also leverage USB HID vulnerabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Bash Bunny
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Bash Bunny by Hak5 is one of the world's most advanced USB attack platforms.
    This small and powerful USB enables the attacker to perform a plurality of attacks
    with a single device. So, while the USB Rubber Ducky just has capabilities to
    inject keystrokes, the Bash Bunny has additional capabilities such as USB ethernet
    control, mass storage, and a serial console (essentially, the device is a small
    Unix box). To make this even more dangerous, the Bash Bunny allows the attacker
    to combine all of the preceding capabilities, making this device a serious threat
    to your infrastructure. If you want to know more, please refer to [http://www.bashbunny.com](http://www.bashbunny.com).
  prefs: []
  type: TYPE_NORMAL
- en: WHID Injector
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Previous examples have a limitation because attacks need to be preloaded on
    the device, but what if you want to inject your payloads remotely? Well, this
    is exactly what you can do with the **WHID** ([https://github.com/whid-injector/WHID](https://github.com/whid-injector/WHID)).
  prefs: []
  type: TYPE_NORMAL
- en: The WHID is based on inexpensive (but powerful) hardware that works over the
    *ESPloitV2* software to perform the remote injection of commands. To make the
    attackers' lives easier, you can use an app to control the injections remotely.
    The app is available on **nethunter** at [https://store.nethunter.com/en/packages/whid.usb.injector/](https://store.nethunter.com/en/packages/whid.usb.injector/).
  prefs: []
  type: TYPE_NORMAL
- en: P4wnpi
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This is a very cool project that uses a **Raspberry Pi Zero** (which is a wonderful
    IoT-enabled single-board computer) to perform a plurality of USB HID attacks:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.8 – The Raspberry Pi Zero with a USB A port'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.8_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.8 – The Raspberry Pi Zero with a USB A port
  prefs: []
  type: TYPE_NORMAL
- en: One of the characteristics that make this attack very dangerous is that the
    **Raspberry Pi Zero W** has Wi-Fi capabilities built-in, enabling the attacker
    to execute actions remotely and even exfiltrate data to an external server in
    real time.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Would you like to create your own cybersecurity device using an IoT-enabled
    Raspberry Pi? If yes, then I will show you how to do it in [*Chapter 10*](B16290_10_Final_JC_ePub.xhtml#_idTextAnchor231),
    *Applying IoT Security*.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to increase your cybersecurity skills and become a cybersecurity
    researcher, then I highly encourage you to use IoT devices such as a **Raspberry
    Pi** or an **ESP8266** to perform your own testing.
  prefs: []
  type: TYPE_NORMAL
- en: USB Harpoon
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You might be thinking that connecting a USB drive could be very suspicious (which
    is true), but that can be solved with a few social engineering skills.
  prefs: []
  type: TYPE_NORMAL
- en: However, to overcome that limitation, researchers embedded a **BadUSB** device
    into a charging cable to masquerade the attack and create this new threat called
    the **USB Harpoon.**
  prefs: []
  type: TYPE_NORMAL
- en: '*Now you can start being paranoid every time you see a USB cable in your company
    because even the cable used to power up a USB fan can be a* **USB Harpoon**.'
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerable USB dongles
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Researchers have found some vulnerabilities on a number of USB dongles, which
    will enable an attacker to inject keystrokes. This is a more dangerous scenario
    because the attacker will leverage a legitimate USB HID device to perform the
    attack. Please refer to CVE-2019-13052, CVE-2019-13053, CVE-2019-13054, and CVE-2019-13055.
  prefs: []
  type: TYPE_NORMAL
- en: USB Samurai
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Simply, you can combine the power of the WHID, the stealth of the USB Harpoon,
    and the vulnerabilities on USB dongles, and you will have a USB Samurai! This
    is a dangerous device that looks like a standard USB cable but enables an attacker
    to inject remote keystrokes to the victim''s computer (all under *$5*):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.9 – USB Samurai components'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.9_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.9 – USB Samurai components
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 2.9* shows the basic components of the USB Samurai: a normal USB type
    A cable along with a vulnerable USB universal keyboard dongle.'
  prefs: []
  type: TYPE_NORMAL
- en: Smartphone-based USB HID attacks
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To make the USB HID vulnerability even more dangerous, attackers can now leverage
    *USB OTG capabilities* on smartphones to perform USB HID attacks.
  prefs: []
  type: TYPE_NORMAL
- en: To achieve this, the attacker will use **Nethunter**, which is a Kali Linux
    distribution for Android devices (cellphones and tablets). To find out more about
    this attack, please visit the official repository at [https://github.com/offensive-security/kali-nethunter/wiki/NetHunter-HID-Attacks](https://github.com/offensive-security/kali-nethunter/wiki/NetHunter-HID-Attacks).
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: 'If they are familiar with Rubber Ducky attacks, an attacker can use a tool
    on **Nethunter**, called **DuckHunter HID**, which will allow them to quickly
    and easily *convert USB Rubber Ducky Script into NetHunter HID Attacks format*:
    [https://www.kali.org/docs/nethunter/nethunter-duckhunter/](https://www.kali.org/docs/nethunter/nethunter-duckhunter/).'
  prefs: []
  type: TYPE_NORMAL
- en: There is even another tool that attackers can execute on the smartphone that
    leverages this HID vulnerability, called a **BadUSB MITM attack**. Here, the attacker
    can launch a man-in-the-middle attack by just connecting to the target machine
    using a USB OTG cable.
  prefs: []
  type: TYPE_NORMAL
- en: To learn more, please refer to [https://www.kali.org/docs/nethunter/nethunter-badusb/](https://www.kali.org/docs/nethunter/nethunter-badusb/).
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: There are many other attacks available on **Nethunter**. You can view their
    official site to learn more about them at [https://www.kali.org/kali-linux-nethunter/](https://www.kali.org/kali-linux-nethunter/).
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, in the examples we have presented, there are far too many possibilities
    and far too many options available for an attacker to leverage this vulnerability.
    Therefore, being aware of this vulnerability is the very first step for you to
    effectively protect against them.
  prefs: []
  type: TYPE_NORMAL
- en: A false sense of security
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'I am shocked at how companies have not realized the danger of USB HID vulnerabilities.
    In fact, most companies have the USB ports of their employees who give face to
    face services to external customers completely exposed! Even more crazy is that
    I have witnessed many banks having the computers of customer service agents on
    a desktop, which completely exposes the USB port to the public:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.10 – Small form factor PC with one exposed USB port facing the customer'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.10_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.10 – Small form factor PC with one exposed USB port facing the customer
  prefs: []
  type: TYPE_NORMAL
- en: 'Therefore, I decided to talk with the CTO of the bank to understand the reasoning
    (if any) for *exposing the USB* ports of the computers of client-facing employees
    by having them over the desktop. His response was astonishing: *"Having the computer
    over the desktop helps in terms of maintenance because the computers get less
    dust."* At first, I thought that his response was a joke, but after a few seconds
    of uncomfortable silence, I sadly realized that it was not.'
  prefs: []
  type: TYPE_NORMAL
- en: 'My next question was to ask whether he was aware of the risk that it represents,
    and his reply was this: *"Do not worry about the USB, they are disabled, so there
    is no risk if someone connects a USB drive."* Then, I realized that his vulnerability
    assessment was based on USB mass storage attacks but not against USB keystroke
    attacks.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Knowing that there was a good chance that those computers were vulnerable to
    USB HID attacks, I asked for permission to connect my USB drive, and he agreed
    with a smile on his face (as though he knew that I was wasting my time). At that
    point, I always carry a USB Rubber Ducky with a simple script that does two simple
    tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: Change the background to an image that looks like it was infected by a virus.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Kill `explorer.exe` to make it look as though all of the desktop files have
    gone.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This happened very quickly. At first, he seemed shocked, then he looked at me,
    and before I had the opportunity to explain to him what had happened, I was kicked
    out of the bank!
  prefs: []
  type: TYPE_NORMAL
- en: The problem was that his lack of understanding of USB vulnerabilities gave him
    a false sense of security, which made him (and the bank) even more vulnerable
    to USB HID attacks.
  prefs: []
  type: TYPE_NORMAL
- en: 'I later discovered that he was, in fact, just using a Windows policy (as shown
    in the following screenshot) to block mass storage USB drives. Of course, that
    will not protect him against any USB HID attacks:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.11 – Disabling mass storage device classes on Windows systems'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.11_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.11 – Disabling mass storage device classes on Windows systems
  prefs: []
  type: TYPE_NORMAL
- en: To understand why this happened, we need to understand how the USB protocol
    works.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the USB protocol
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Every time you connect a USB device, first, it will identify the speed of the
    device. Then, it will get the device descriptors, which, essentially, help with
    the identification of the device.
  prefs: []
  type: TYPE_NORMAL
- en: 'One of the descriptors is the USB class, which tells the computer what kind
    of device you are connecting to; for example, consider the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Class 01h  audio device (such as speakers)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Class 03h  HID device (such as a mouse, a keyboard, or a Rubber Ducky device)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Class 08h  mass storage (such as a USB drive or an external hard drive)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This is where the magic happens because, based on the example of the bank, they
    were protecting against devices Class 08h, but all Class 03h devices were able
    to connect directly without even a warning message.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: If you want to know more about the USB protocol, I suggest you take a look at
    [https://www.usb.org/sites/default/files/hid1_11.pdf](https://www.usb.org/sites/default/files/hid1_11.pdf).
    This document explains, in detail, all you need to know about how this protocol
    works and how it interacts with the host machine.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, we need to find a way to protect our systems against Class 03h (that
    is, USB HID devices).
  prefs: []
  type: TYPE_NORMAL
- en: Protecting against USB HID attacks
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: By now, you should be aware (and more likely worried) of the danger of USB HID
    vulnerabilities. So, now, it's time for me to give you some tools, techniques,
    and methods that you can implement to effectively defend your infrastructure against
    them.
  prefs: []
  type: TYPE_NORMAL
- en: Leveraging Windows security logs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Every time an external device is connected, Windows will generate a **Security
    Event** log entry with **Event ID 6416** ([https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-6416](https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-6416)).
  prefs: []
  type: TYPE_NORMAL
- en: Using this, you can look for traces of attacking devices (such as Rubber Ducky)
    to detect any attacks.
  prefs: []
  type: TYPE_NORMAL
- en: 'To achieve that, we need to take into account that most of the devices used
    in those attacks are based on two microcontrollers: the famous **atmega32u4**
    (which is present on the Arduino Nano, Arduino Micro, and Teensy) and the small
    **ATtiny8** (which is present on the Digispark and the Beetle USB).'
  prefs: []
  type: TYPE_NORMAL
- en: 'The good thing is that both are created by the same company, **ATMEL**, and
    that information is key because it will allow us to detect whether the device
    that is connected is a real keyboard or a tiny evil device:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Another option is to perform a search by the **device ID**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: To automate this process, you can also leverage a log monitoring system to search
    for the values mentioned previously and trigger some alerts.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs: []
  type: TYPE_NORMAL
- en: Be aware that all these values (the device ID, vendor ID, and more) can be spoofed.
    Therefore, while this is a good defense, it needs to be complemented with additional
    methods in order to protect you against even the most advanced attacks.
  prefs: []
  type: TYPE_NORMAL
- en: "As mentioned earlier, while most of the devices currently used for these attacks\
    \ are **ATMEL**-based, you might also need to check for other devices used for\
    \ these attacks \Lsuch as the **Raspberry Pi**, which uses a CPU from Broadcom."
  prefs: []
  type: TYPE_NORMAL
- en: Windows Defender
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can also use Windows Defender to detect a number of USB HID attacks.
  prefs: []
  type: TYPE_NORMAL
- en: Since these attacks are based on scripts, you can leverage their predictability
    to detect them based on a sequence of events.
  prefs: []
  type: TYPE_NORMAL
- en: 'The code is very simple; first, it monitors for new USB HID device connections.
    If a connection is detected, then it will check whether a Command Prompt or PowerShell
    window is open in the next *x* seconds. If yes, chances are that someone has plugged
    in a bad USB (or that a system administrator was desperate to open Command Prompt
    to test his new keyboard):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Do you recall the WHID device? Well, you can add one line of code to specifically
    detect that device by using their device ID:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Remember, this defense mechanism is based on the predictable nature of the attack;
    however, it has some flaws. For example, in the code provided, it will listen
    for a Command Prompt window to open in the next 10 seconds, but if the attacker
    has added a delay on the script of 11 seconds, then you are doomed.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to know more in regard to additional security settings using the
    Windows Defender **Advanced Threat Protection** (**ATP**), please refer to [https://docs.microsoft.com/en-us/windows/security/threat-protection/device-control/control-usb-devices-using-intune](https://docs.microsoft.com/en-us/windows/security/threat-protection/device-control/control-usb-devices-using-intune).
  prefs: []
  type: TYPE_NORMAL
- en: DuckHunt
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is a very cool script created by Pedro Sosa that fixed the preceding problem
    in a very clever way. Essentially, he modified a keystroke program, which he developed,
    to add a timestamp after each keystroke is detected.
  prefs: []
  type: TYPE_NORMAL
- en: With that information, you can determine the typing speed and whether the typing
    speed is above normal (let's say, between 10 and 20 characters in one second).
    Then, the system will flag that as an injection attack and block any USB HID inputs.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following is what a Ducky Script attack looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'This is an example of how **DuckHunt** will stop the Ducky Script (USB HID
    injection) attack:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: DuckHunt has many extra features. If you want to explore them, you can visit
    the official site at [https://github.com/pmsosa/duckhunt](https://github.com/pmsosa/duckhunt).
  prefs: []
  type: TYPE_NORMAL
- en: USB lock
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This is a very basic solution based on placing a lock mechanism to physically
    prevent the connection of new USB devices. However, this device has several downsides,
    including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: It has a high cost.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A lot of effort is required to implement it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A lot of effort is required to maintain it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is not suitable for remote workers or BYOD.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'It is not suitable for sellers or users who are constantly on the move or traveling:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 2.12 – An example of a USB lock mechanism'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.12_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.12 – An example of a USB lock mechanism
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, as you can see, in *Figure 2.12*, the key that is used for these
    devices is pretty basic, making most of those solutions very vulnerable to lock
    picking.
  prefs: []
  type: TYPE_NORMAL
- en: USB blocker
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When applying security measures to a systems, you need to make sure that the
    solution implemented does not affect the usability of the system and this may
    be the case.
  prefs: []
  type: TYPE_NORMAL
- en: This utility, provided by GIGABYTE, blocks the port by device type. This means
    that if you select to block HID, you won't be able to use your USB mouse and keyboard,
    which could be a very bad idea.
  prefs: []
  type: TYPE_NORMAL
- en: Protecting against vulnerable USB dongles
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is a very serious threat. So, first, make sure that you don't have vulnerable
    USB dongles on your personal devices (or even on your family and friends' devices).
  prefs: []
  type: TYPE_NORMAL
- en: 'On the other hand, on a corporate level, you can take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a list of the vulnerable devices (that is, just search for a vulnerable
    USB dongle to get the latest list).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Some vendors release a patch to fix the vulnerability. However, it will be very
    hard for you to ensure that all of the connected dongles are patched, so you should
    consider that when creating your policies.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make sure your company does not purchase vulnerable devices.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check whether there are vulnerable devices in your company assets and patch
    or replace them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Additionally, create (and distribute) a policy to restrict employees from using
    vulnerable devices on corporate assets (including the list of vulnerable devices
    and models).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By now, you should clearly understand the concept of **cybersecurity vulnerabilities**.
    However, identifying the vulnerabilities is just the first step in the game. Now,
    it's time to go ahead and understand how to manage, evaluate, respond, and monitor
    those vulnerabilities to improve the security of our infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: Managing cybersecurity risks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Risk management** is a very interesting topic, and there are hundreds of
    books and certifications about this topic. However, instead of giving you a lot
    of overwhelming information, I will try to summarize all the available knowledge
    regarding risk management, tropicalize it to the cybersecurity environment, and
    present you with just the right information you need in order to manage your risks
    like a pro!'
  prefs: []
  type: TYPE_NORMAL
- en: To make this simple, let's define a risk as an event that will have an impact
    on your systems or infrastructure if a given condition is met. Those events are
    normally triggered by a threat (or a threat agent) that leverages a given vulnerability.
  prefs: []
  type: TYPE_NORMAL
- en: Now, the process of identifying and analyzing the impact and the probability
    of that event happening is called risk management.
  prefs: []
  type: TYPE_NORMAL
- en: All systems and infrastructures have a plurality of associated risks, so it
    is crucial that you identify and mitigate them as early as possible.
  prefs: []
  type: TYPE_NORMAL
- en: There are many methodologies and frameworks to manage risks, and while most
    of them are very similar, the name of the concepts differ slightly; however, I
    will focus on the most recognized approaches to make this easier for you.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's view the details of each of the four steps (**risk identification**,
    **risk assessment**, **r****isk response**, and **risk monitoring**) to manage
    your cybersecurity risks like a *master*.
  prefs: []
  type: TYPE_NORMAL
- en: Risk identification
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, you need to *identify* the risks associated with your infrastructure
    or systems. Now, let me share some tips that will help you here:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Make a detailed and extensive inventory of your assets**: Most of the time,
    risks are not discovered because *ghosts* or legacy systems have not been identified,
    so it is key that you start by doing a thorough discovery of your assets to make
    sure that all your infrastructure and systems are covered.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**The ongoing discovery of new assets**: Remember that this is an ongoing task
    and that you need to regularly scan your environment and network to uncover any
    new devices that have been added to your infrastructure.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Asset evaluation**: A good practice here is to evaluate your assets to determine
    which are critical for your organization (that is, your crown jewels) so that
    you can justify a higher investment to defend them. This will also help you in
    terms of prioritization and risk analysis.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Don't do this alone; ask for help and support! It will be hard for you to come
    up with a complete list of risks from your desk, so instead, take advantage of
    the experience of the system administrators, IT personnel, and end users to help
    you discover potential risks.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'During this identification process, you will have to create a **risk register**,
    which is a database of all of the identified risks. There are hundreds of templates
    that you can use, and all of them vary in terms of their size and the number of
    columns used. However, you can create your own risk register using Excel. Just
    make sure you include the minimal factors, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Risk_ID**: The unique identifier of the risk.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Description**: A clear and concise description of the risk.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Risk_Owner**: The person who is in charge of monitoring the risk.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Risk_Trigger**: The event(s) that will convert the risk into an issue.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Risk_Category**: To help you better manage all risks, it''s recommended that
    you create groups of risks; for example, physical access, network, software, web
    apps, and more.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Probability** (**Qualitative**): Here, you can use 3 or 5 ratings (such as
    insignificant, low, medium, high, and critical).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Impact** (**Qualitative**): Rate the impact to the business if the risk is
    materialized.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Risk_Response**: Describe the kind of response you implemented to reduce
    the probability and/or impact of the risk (such as mitigate, transfer, and so
    on):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 2.13 – An example of a risk register'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.13_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.13 – An example of a risk register
  prefs: []
  type: TYPE_NORMAL
- en: There are many other fields that you can include, such as **Risk_Source**, in
    which you can specify whether the risk is coming from an internal or external
    threat (either man-made or environmental).
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have the risks identified, you need to assess them.
  prefs: []
  type: TYPE_NORMAL
- en: Risk assessment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As the name suggests, this step is about assessing the risk in terms of *probability*
    of occurrence and business *impact*.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two ways in which to do this type of assessment: qualitative and
    quantitative.'
  prefs: []
  type: TYPE_NORMAL
- en: Quantitative analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Let''s pause for a second to let me ask you a question:'
  prefs: []
  type: TYPE_NORMAL
- en: '*If you have an asset that costs $500,000, would you invest $75,000 to protect
    that asset?*'
  prefs: []
  type: TYPE_NORMAL
- en: That is a tricky question because, regardless of whether you answer is yes or
    no, what really matters here is that you support your answer with *numbers* as
    this will tell you whether you will be getting that budget or not.
  prefs: []
  type: TYPE_NORMAL
- en: The good news is that there are several tools and methodologies that you can
    use to give you those numbers. However, even better than this is knowing that
    you can use three simple formulas to gather those numbers.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, you need to determine the *value of the asset* that will be affected
    if the risk materializes. Second, you also need to determine *how much of the
    asset will be impacted*. For example, let''s imagine that, in the case of an earthquake,
    25% of your company''s data center is affected, so if the value of the data center
    is $100,000, then the damage caused by an earthquake will be $25,000\. This can
    be expressed with the following formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Single Loss Expectancy (SLE) = Asset Value * Exposure Factor*'
  prefs: []
  type: TYPE_NORMAL
- en: 'However, if you are trying to determine how much you should invest *by year*
    in response to that risk, then you will have to perform two more calculations:'
  prefs: []
  type: TYPE_NORMAL
- en: Determine how likely it is for that risk to materialize every 12 months, where
    1 means once per year, and once every 5 years is equal to = 1/5 (0.2). The resulting
    value is known as the **annualized rate of occurrence** (**ARO**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now that you know the cost of the risk and the probability of the risk occurring
    every 12 months, you can multiply those two values to determine the average cost
    of the risk by year: *Annual Loss Expectancy (ALE) = SLE * ARO*.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Important note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Remember my tricky question from earlier? Well, now you can use the preceding
    formulas to determine in which scenarios it will make sense to invest those $75,000
    on the remediations or controls (for instance, you don't want to apply a risk
    response that is more expensive than the cost of the materialization of the risk).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now, let's examine how you can categorize the risk not with numbers but with
    words, which is an easier and faster analysis.
  prefs: []
  type: TYPE_NORMAL
- en: Qualitative analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is a more subjective analysis, as it is based on the opinion of an expert
    (or group of experts) who provides a rating based on a scale. Normally, those
    scales are on 3 or 5 levels, but some companies use customized values.
  prefs: []
  type: TYPE_NORMAL
- en: 'The most common way to do this analysis is by using a 5 x 5 matrix to correlate
    the *probability* and *impact* to get the average criticality of the risk. As
    you can see, in the following table, a risk with a low probability but a high
    impact will be considered a moderate risk, while a risk with a high probability
    and a moderate impact will be considered a major risk:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.14 – A 5 x 5 risk matrix'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.14_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.14 – A 5 x 5 risk matrix
  prefs: []
  type: TYPE_NORMAL
- en: The value of the correlation (**Minor**, **Moderate**, **Major**, or **Severe**)
    is the one that will be used to rank the risk.
  prefs: []
  type: TYPE_NORMAL
- en: As mentioned earlier, this is a subjective assessment. So, a good practice will
    be to analyze groups in order to gather their inputs, as that might help to reduce
    the bias of the result.
  prefs: []
  type: TYPE_NORMAL
- en: Risk response
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'At this point, you know your risks and have them prioritized based on the probability
    of occurrence and business impact. Now, it is time to determine the best mechanism,
    strategy, or control for that risk and to make your life easier. The responses
    can be divided into four categories:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Mitigate**: This is the most common response; in fact, the word "mitigation"
    is often used synonymously with risk response because it is the default action
    that is considered when responding to a risk. Mitigation is based on the application
    of a control, system, mechanism, or strategy that is aimed to reduce the probability
    or impact of the risk to an acceptable level. Some examples of mitigation are
    the installation of **Biometric Access Control**, the installation of an **Intrusion
    Prevention System**, and performing a security test before releasing a system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Transfer**: There will be cases where the mitigation is either too expensive
    or difficult to implement (due to a lack of knowledge or resources). In those
    cases, you might want to transfer the risk to a third party. One typical example
    is to apply insurance (to recover the cost of the device) or to subcontract a
    service with a third party (for example, sometimes, it is cheaper to host your
    servers on a secure data center, rather than applying that level of security to
    your own data center).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Avoid**: Now, imagine that there is a new client-facing app with a beautiful
    GUI. However, you have done some research and have found that the system has several
    *unfixed vulnerabilities* identified that could expose client data. In this case,
    the best way to deal with this risk is to *avoid* purchasing the system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Accept**: This is the least recommended option, and it should only be used
    as a last resort when the other three options are not suitable. For example, if
    the risk of someone accessing a legacy server is very low and the impact is also
    very low because it is a testing server and the hosted data is not sensitive,
    and the cost of the mitigation is $100,000, then you might just decide to accept
    the risk and use your budget to support the response of more critical risks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Important note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: We talked about using insurance for hardware; however, you can also apply insurance
    to other non-tangible assets, such as the loss of data, and even to cover some
    other risks, such as data breaches or the liabilities that have originated from
    it.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Now, let's view the last step of this process, which is normally overlooked,
    but it is key to ensure that risks are current and managed on an ongoing basis.
  prefs: []
  type: TYPE_NORMAL
- en: Risk monitoring
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Risk management should be an iterative process, and this final step is aimed
    to ensure that risks are constantly **identified**, **evaluated**, and **addressed**.
    A risk evaluated as *minor* might change to *severe* over time, so the response
    should be also adjusted based on that change.
  prefs: []
  type: TYPE_NORMAL
- en: The NIST Cybersecurity Framework
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The NIST Cybersecurity Framework was designed to help cybersecurity professionals
    better assess and improve their capabilities to **identify**, **protect**, **detect**,
    **respond**, and **recover** from a cyber attack. This framework is based on the
    following five domains.
  prefs: []
  type: TYPE_NORMAL
- en: Identify
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The goal here is to understand our environment, including our assets, the business
    environment, governance, the risk management strategy, and more.
  prefs: []
  type: TYPE_NORMAL
- en: As you might have noticed, asset identification is key in regard to cybersecurity.
    However, I would like to highlight that while this might sound obvious, many companies
    have suffered attacks due to a lack of understanding and awareness of their own
    infrastructure, systems, and devices.
  prefs: []
  type: TYPE_NORMAL
- en: Protect
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that you know your environment, it''s time to protect it. The framework
    proposes the following mechanisms (these are self-explanatory, so there is no
    need to deep dive into them):'
  prefs: []
  type: TYPE_NORMAL
- en: Access control
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Awareness and training
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Information protection processes and procedures
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintenance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Protective technology
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Detect
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There will be many cases in which an attacker will be able to bypass your protection
    systems and layers, so, in those cases, you should be able to detect those threats.
    To achieve this, the framework suggests the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Detecting anomalies and events**: Detect all malicious activity in a timely
    manner, including the potential impact associated.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security continuous monitoring**: Maintain the monitoring of your IT systems
    and assets to identify any events and the effectiveness (or weaknesses) of the
    protective measures.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Detection processes**: Make sure you develop, update, and share all the processes
    and procedures aimed to detect cybersecurity events.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Respond
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This domain is about the application of appropriate actions to take against
    a given cybersecurity event:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Response planning**: Make sure that you have all the processes and procedures
    in place to ensure a timely and effective response to cybersecurity events.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Communications**: This is a critical (and, normally, forgotten) task regarding
    how you communicate any cybersecurity event with internal and external stakeholders.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Analysis**: This is an analysis of the responses to measure their effectiveness.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mitigation**: This refers to activities aimed to mitigate the impact of the
    cybersecurity event.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Improvements**: This uses the lessons learned to support a continuous improvement
    model.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recover
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'This domain is about the activities required to restore the business capabilities
    and services that have been impacted by a cybersecurity event:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Recovery planning**: All of the planning events are required to ensure the
    timely restoration of the systems and assets affected.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Improvements**: This refers to the improvement of all the planning events
    based on the lessons learned.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Communications**: This involves managing communications with internal and
    external stakeholders associated with the impacted systems (for instance, vendors,
    providers, victims, and more).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The first four domains are very similar to what we reviewed during the risk
    management process, so there is no need to expand on them. However, the last domain
    is very interesting and important because all companies should be prepared to
    face a disaster and ensure the continuity of their business after that, and that
    is what we will review in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an effective Business Continuity Plan (BCP)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*The question is not whether a disaster will happen, not even when it will
    happen, but if you will be prepared when it does happen*.'
  prefs: []
  type: TYPE_NORMAL
- en: By nature, human beings tend to think that negative situations will happen to
    everyone but themselves. The problem with that way of thinking is that even when
    they know about the histories of other companies that have lost everything after
    a cyber attack, only a few companies will invest in a plan to ensure the continuity
    of their business after a cyber incident.
  prefs: []
  type: TYPE_NORMAL
- en: 'The three main drivers for companies to create a *BCP* are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Those that are based on regulatory requirements from governments or international
    agencies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A contractual requirement from the clients
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Self-awareness of the value of the BCP
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now, I know how hard it is to get the funding and resources required to create
    an effective BCP, so here are some key points gathered by market research experts
    (such as the Gartner group, the US National Archives and Records Administration
    in Washington, the US **Federal Emergency Management Agency** (**FEMA**), Bloomberg,
    and the University of Texas), which highlight the results of companies becoming
    victims of security attacks and not having an effective continuity plan:'
  prefs: []
  type: TYPE_NORMAL
- en: 93% of companies that lost their data center for more than 10 days filed for
    *bankruptcy* within one year after the disaster.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 94% of companies suffering from a catastrophic data loss do not survive – 43%
    never reopen and 51% close within two years.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 50% of all tape backups fail to restore.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Companies that are not able to resume operations within 10 days of the disaster
    are not likely to survive.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Between 40% and 60% of small businesses never reopen their doors after a disaster.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Also, let me share some additional statistics regarding the BCP on big corporations:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.15 – BCP statistics'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.15_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.15 – BCP statistics
  prefs: []
  type: TYPE_NORMAL
- en: '*The numbers don''t lie: you can leverage these numbers to highlight the global
    cybersecurity landscape in order to get support and resources from executive stakeholders
    and sponsors to create/maintain your BCP/DRP.*'
  prefs: []
  type: TYPE_NORMAL
- en: Now, the first step toward creating a BCP is to have a deep understanding of
    the company (that is, its processes, departments, hierarchy, functions, and roles)
    and how any potential disruption can impact the capability of the company to continue
    its core business; this is called **Business Impact Analysis** (**BIA**).
  prefs: []
  type: TYPE_NORMAL
- en: Creating a Business Impact Analysis (BIA)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Again, there are many templates available on the internet that you can use to
    create a BIA. Some of them are very complex and might be overkill for medium-sized
    companies. On the other hand, there are very simplistic templates that might be
    a good fit for small to medium-sized companies, but they will not be granular
    or detailed enough for a big corporation. However, the important thing here is
    not the template, but how to fill it properly. Let's review all of the concepts
    that you need to understand to create a world-class BIA.
  prefs: []
  type: TYPE_NORMAL
- en: Mission essential functions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: All processes are important; however, you need to identify which are supporting
    processes and which are the essential processes required to run the business.
    For example, if your company manufactures cars, then the manufacturing process
    is essential and must be up and running to avoid losing money. In contrast, there
    are other supporting functions such as accounting that, although very important,
    a disruption of that process might not have the same impact.
  prefs: []
  type: TYPE_NORMAL
- en: The identification of critical systems
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You must identify the systems that are critical for your company. For example,
    an email server is very important for your company, but the company might still
    be able to run the core business even when the email server is down. However,
    on the other hand, if your company business is selling clothes online, then your
    company will lose money and clients every minute (or second) that the web page
    is down.
  prefs: []
  type: TYPE_NORMAL
- en: The recovery time objective (RTO)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The RTO represents the time that a company must spend to restore those processes,
    activities, or operations after suffering a disaster.
  prefs: []
  type: TYPE_NORMAL
- en: Defining the RTO is not a simple task because executives will always want to
    have this close to zero, but ultimately, the lower the RTO, the higher the cost
    associated. So, be realistic when defining this number to avoid shooting yourself
    on the foot.
  prefs: []
  type: TYPE_NORMAL
- en: 'Keep in mind that some executives will try to look for an overall RTO for the
    entire company. However, *you should define RTOs at a lower level* (by process,
    activity, department, or task) because that will help you to identify gaps or
    points in which more resources will be required to support it. For example, the
    RTO to restore the manufacturing line after a disaster must be lower than the
    RTO to restore email services. In the following table, you can see how to map
    a service to the criticality of the data managed and the associated RTO and RPO:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.16 – The RPO/RTO by the criticality of the data'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.16_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.16 – The RPO/RTO by the criticality of the data
  prefs: []
  type: TYPE_NORMAL
- en: Now, let's take look at the other important metric, the **recovery point objective**
    (**RPO**).
  prefs: []
  type: TYPE_NORMAL
- en: The recovery point objective (RPO)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This refers to how much data loss is acceptable after a disaster. In other
    words, how much data you need to recover after a disaster. However, here is the
    tricky part; even if we talk about data, that data is not measured in size but
    in time, so it is not about how many bits you recover, but to which point in time
    you must recover the data. For example, if you have an email server, then losing
    the emails received in the last hour may be acceptable, so an RPO of 1 hour is
    fine. In contrast, if you lose 1 hour of payment records, then that might not
    be acceptable. In that situation, the RPO will be between 1 and 10 seconds. In
    the following diagram, you can see the correlation between the RPO and the RTO:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.17 – An example of RPO and RTO'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.17_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.17 – An example of RPO and RTO
  prefs: []
  type: TYPE_NORMAL
- en: 'These two metrics are based on downtime and data loss. However, there is another
    important metric to determine the reliability of your systems and that is by measuring
    how frequently a system is expected to be down: the **mean time between failures**
    (**MTBF**).'
  prefs: []
  type: TYPE_NORMAL
- en: Mean time between failures (MTBF)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This metric is normally used by a manufacturer to determine the average product
    lifetime; however, this metric is very useful when you want to justify an investment
    to replace a *faulty* legacy system. For example, let's imagine you have 20 wireless
    access points that were installed on the same day. Then, you realize that one
    failed after 200 days, the second one after 400 days, and the third one after
    600 days. That means that in 1,200 days, you got three failures, so, by dividing
    that, you will get an MTBF for the wireless access points of 400 days.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: If you are in charge of cybersecurity, then it is your responsibility to detect
    *faulty* systems and provide alternatives to replace them before they cause a
    major disaster. This is because if that system causes an outage, then all fingers
    will point to you. So, be proactive!
  prefs: []
  type: TYPE_NORMAL
- en: Another useful metric is to determine the *average time it takes to perform
    a given maintenance activity*, such as rebooting a server or replacing hardware.
    This is important because you can use that time, in the future, to better forecast
    the time needed for said activity. This metric is called the **mean time to repair**
    (**MTTR**).
  prefs: []
  type: TYPE_NORMAL
- en: Mean time to repair (MTTR)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As its name suggests, this refers to the estimated time that it will take to
    restore, replace, or repair a system or device after a failure. This could be
    the time it takes your team to repair it (in-house) or the time it will take for
    the vendor to repair or replace it (based on a given SLA). The MTTR is associated
    with the impact to the business caused by the absence of that device. For example,
    replacing the hard drive in a laptop of an end user could take 3 days (to gather
    information regarding the hard drive, purchase the hard drive, and install the
    hard drive), while replacing the hard drive of a server might have a higher priority
    and the MTTR could be 1 hour (that is, the alert is received, the part is identified,
    and the part is replaced from the local inventory).
  prefs: []
  type: TYPE_NORMAL
- en: Availability
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Are you still wondering about the value of knowing the MTBF and the MTTR? Well
    besides the benefits mentioned earlier, you can also use them to calculate the
    availability of your service.
  prefs: []
  type: TYPE_NORMAL
- en: This is a very interesting metric that you can use to report the status of your
    systems to the upper management and justify any previous and future investments.
    For example, let's imagine that your web server went down twice in the last 400
    days (MTBF = 200 days) and that the MTTR was 3 hours (MTTR = 0.125 days). Therefore,
    if the device failed every 200 days and it takes 0.125 days to get it restored,
    then it means that availability is equal to `200 / (200 + 0.125)`, which means
    that, in this case, the availability of our web server is *99.9375%*.
  prefs: []
  type: TYPE_NORMAL
- en: '*Availability = MTBF / (MTBF + MTTR)*'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, is that 99.9375 good? Well, that depends on your business. However, data
    centers use a **Tiers** approach to determine their level of availability, so
    you can use those values as a point of reference:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Tier 1**: 99.671% availability (this is equal to 28.8 hours of downtime annually).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tier 2**: 99.741% availability (this is equal to 22 hours of downtime annually).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tier 3**: 99.982% availability (this is equal to 1.6 hours of downtime annually).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tier 4**: 99.995% availability (this is equal to 26.3 minutes of downtime
    annually).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Are you looking for a way to objectively support the decision about having a
    solution hosted in-house or with a third party? Well, you can analyze the current
    availability, and contrast that against the availability offered by the vendor
    to determine which solution is best for your business.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: A good way to enhance the availability of your infrastructure is by finding
    the devices that could jeopardize the uptime of your systems and infrastructure.
    Those devices are known as **single points of failure**.
  prefs: []
  type: TYPE_NORMAL
- en: A single point of failure
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As mentioned earlier, a key aspect to enhance the availability of your systems
    and infrastructure is by identifying the critical devices that could impact the
    *uptime of your systems*. Once identified, you must ensure that those systems
    have the highest level of security to reduce the risk associated with them, and,
    as you probably guessed, these devices must have the lowest MTBF and MTTR.
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, you need to take the necessary steps to ensure that redundancy
    is in place for those single-point-of-failure devices to avoid unplanned downtimes:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.18 – An example of a single point of failure'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.18_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.18 – An example of a single point of failure
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 2.18* is an example of how network devices are a common single point
    of failure.'
  prefs: []
  type: TYPE_NORMAL
- en: Who creates the BIA?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The creation of the BIA is a joint effort in which each leader of the department
    or unit is in charge of assessing their organization and creates the BIA. However,
    there should be someone leading and coordinating the creation of them, as well
    as providing guidance and support in terms of how to create it. Depending on the
    company structure, normally, that task relies on the risk manager or the BCP manager.
    However, if this role is not present in your organization, I suggest you take
    over this role because, ultimately, you will be the one to benefit the most from
    its creation.
  prefs: []
  type: TYPE_NORMAL
- en: Business Continuity Planning (BCP)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*The guide to the beginning of the end!*'
  prefs: []
  type: TYPE_NORMAL
- en: The goal of the BCP is to have a set of policies, processes, procedures, mechanisms,
    and tools that are ready to be used to reduce the impact of a disruptive event.
    Now, let's take a look at what you need to do to create a BCP.
  prefs: []
  type: TYPE_NORMAL
- en: Defining the scope and objectives
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A good plan is a well-defined plan. So, here, we will start by laying the ground
    for a good BCP:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Scope**: Determine the scope of the BCP (for instance, departmental, corporate,
    country base, and more).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Objectives**: Highlight the objective of the BCP based on corporate guidelines.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Assumptions**: Add any relevant assumptions that could be useful for readers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Document owner**: Outline who owns the document.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Document version**: Outline the current version of the document.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Distribution list**: Outline to whom should this document should be distributed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Identify key stakeholders**: Outline a list of stakeholders with their roles
    and responsibilities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Risk assessment
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You don''t have to create another risk assessment. Instead, this is about leveraging
    your risk assessment as one of the inputs for the BCP; just make sure it includes
    the following items:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Risk description**: Make sure the listed risks include clear descriptions
    that can be understood by others outside of the IT team.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Residual risks and secondary risks**: List any residual or secondary risks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Risks source**: Make sure the risks are categorized by the source (for example,
    environmental, man-made, and more).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Business impact analysis
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'We already know how to create a BIA (so, there is no need to review it again).
    However, there is a lot of debate regarding what needs to be created first: the
    BCP or the BIA (this is similar to the chicken and the egg dilemma).'
  prefs: []
  type: TYPE_NORMAL
- en: The general consensus from experts is that it is better to have the BIA created,
    as that is an input for the BCP. Another way to do this is to make them in parallel;
    however, the effort required to make both at the same time could be overwhelming.
  prefs: []
  type: TYPE_NORMAL
- en: Business continuity strategies
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This is probably the biggest aspect of the BCP, as this will contain all the
    strategies, processes, procedures, and other relevant information that supports
    the continuity of the business:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Definitions of the processes and procedures**: Define all the processes and
    procedures in place to ensure the continuity of the business after a cyber incident
    or service disruption.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Team responsibilities**: Determine the roles and responsibilities of the
    different teams related to business continuity.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Law and regulation requirements**: List all of the laws and regulations applicable
    and the associated impact in the case of a cyber incident.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Preventive controls and mitigations**: Mention what controls and mitigations
    are in place to ensure the continuity of the business.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Definition of the triggers**: Outline when to trigger the controls and mitigations
    to avoid business disruption.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Alternate sites** (**data**): List all the information related to alternative
    sites in the case of a disruption on the main systems.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Alternative locations** (**employees**): Include all the information related
    to an alternative location in which to move operations in the case of a service
    disruption.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Alternative providers and procurement**: Provide a list of available alternative
    providers of goods and services in the case of issues with current providers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Employee safety
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The priority of every company should *always* be the safety of their employees,
    so as a good practice, a BCP must include a section that contains, at the very
    least, the following items:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Evacuations**: All information related to the evacuation plans on the company
    locations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Emergency kits**: Information related to emergency kits (for instance, availability,
    location, contents, expiration dates, and more)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Roles and responsibilities**: The roles and responsibilities of the emergency
    response teams'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Emergency contacts**: The contact information of the members of the emergency
    response teams'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Communications
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The management of communications in the case of a cybersecurity incident is
    one of the most important aspects of how a company deals with an event. The lack
    of good planning here could damage one of the most precious assets of all organizations:
    their reputation and brand. Therefore, make sure you, at the very least, include
    the following in your plan:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Internal communications**: These are guidelines regarding how to manage communications
    if there is a cyber incident.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Stakeholder communications**: These are guidelines regarding how to manage
    communications with corporate stakeholders if there is a cyber incident.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Media communications**: These are guidelines regarding how to manage communications
    with external entities (such as the media, social media channels, and more) if
    there is a cyber incident.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Testing and reviews
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A company might invest a lot of resources to create a BCP. The plan might look
    great, and the boss may love it, but how do you know whether it will work? Well,
    here you need to consider the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Testing guidelines**: How the BCP will be tested and how the testing will
    be measured.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Testing schedule**: Determine when the testing will be performed (for example,
    how often) or what events will trigger a test.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Testing manager**: Who will be responsible for the test?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Updates and maintenance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Risks changes and threats evolve, so the BCP should also evolve. Therefore,
    make sure you include this section to keep the plan relevant and up to date:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Update policy**: Outline how, when, what, and who will be in charge of updating
    this BCP.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Revision history**: Include a version history of the changes to each version
    of the BCP.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you include all the preceding steps, then you will have a very detailed
    and powerful BCP that will help you to ensure that your company will survive after
    a service disruption or cyber incident. The following diagram shows the main causes
    of IT service disruption or downtime:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.19 – Common causes of downtime'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.19_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.19 – Common causes of downtime
  prefs: []
  type: TYPE_NORMAL
- en: But what happens if the BCP fails? For example, what would happen if the power
    generator fails? What if the alternate site is not accessible? That would be a
    disaster, and you need to be prepared for that. You can do that by having a **Disaster
    Recovery Plan** (**DRP**).
  prefs: []
  type: TYPE_NORMAL
- en: Implementing a best-in-class DRP
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Are you confused about the scope of the DRP and the BCP? Well, don't worry because
    that is very common. In fact, a quick search on the topic will show you that even
    authors don't agree on the boundaries of those two terms; however, let me try
    to make it as simple as possible.
  prefs: []
  type: TYPE_NORMAL
- en: 'The differences between the BCP and the DRP are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: The DRP can be considered as a subset of the overall BCP.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The DRP is about restoring a critical server in the case of a disaster (reactive).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The BCP is about preventing business downtime (proactive).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The BCP is business-related (processes), while the DRP is more IT-related (systems
    and data).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The BCP can be applied during normal operations to prevent disruptions, while
    DRP is just executed if there is a disaster.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now that we know the differences between the two, let's move ahead to understand
    how to create an efficient DRP.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a DRP
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here is an overview of the items that you must include when creating a DRP:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Scope**: Here, you must define the scope of the DRP. While, normally, companies
    just create an overall DRP, there are cases in which you will find benefits in
    creating segmented DRPs; for example, one for systems, one for networks, and one
    for data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Assumptions**: Identify all the assumptions that are relevant to this DRP.
    One example of a common assumption is that certain items are covered in the BCP
    (such as backups, redundancies, and failovers).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Activation criteria**: Identify the triggers to consider if an event is a
    disaster. For example, if there is a power outage and the mitigation strategy
    (such as secondary power generators) is not working.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scenarios and response strategies**: Here, you need to include a set of scenarios
    that can be considered as disasters and outline how to mitigate them to restore
    your business operations. For example, the local server is down and the secondary
    server on the cloud is not accessible.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Be creative! In fact, it''s better to consider some unusual scenarios such
    as a pandemic or a war (even if they might never happen) than not considering
    them and becoming affected by them. In the following diagram, you can view some
    example sources of disasters:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 2.20 – Possible triggers of disasters'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_2.20_B16290.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2.20 – Possible triggers of disasters
  prefs: []
  type: TYPE_NORMAL
- en: '**Disaster recovery requirements**: What do you need if there is a disaster?
    For example, this could include technical requirements, operational requirements,
    communication requirements, backup requirements, redundancy requirements, documentation
    requirements, regulation requirements, and client requirements.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Disaster recovery procedures**: What procedures need to be followed if there
    is a disaster? For example, they could include communication management, remote
    access procedures, access control (both physical and logical), and more.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Roles and responsibilities**: Who is responsible or accountable for various
    tasks if there is a disaster (that is, who will be in charge of networks? Who
    will be in charge of servers? And who will be in charge of VoIP?).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing the DRP
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A DRP is useless if you don''t know how to implement it. So, let''s take a
    look at some best practices when implementing a DRP:'
  prefs: []
  type: TYPE_NORMAL
- en: Make sure you have a plurality of providers (including some contracts or agreements)
    if you require a service in the case of a disaster. For example, make sure you
    have agreements (and the equipment) in place to obtain services from other ISPs
    if your secondary provider is also down. As my grandma says, *"Don't put all your
    eggs in the same basket."*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Periodically review the contracts and agreements with backup providers, as their
    services could change over time and you might not get what you need.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make sure you have an **Order of Restoration** to determine which systems will
    be restored first based on the business impact (RTO).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remember that the cost of a recovery site varies depending on the service type
    (for example, hot, warm, or cold), so make sure you distribute them accordingly
    to reduce costs (you don't want to host a test server on a hot site).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Analyze the providers of your providers. I remember one situation in which the
    DRP stated that if the secondary ISP was down, then move to ISP X. What we discovered
    during a test was that ISP X was subcontracting the services from our secondary
    ISP. This meant that a problem on the infrastructure of the secondary ISP would
    also impact ISP X, rendering our DRP useless.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Perform scheduled DRP tests to validate the effectiveness of it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Perform stress tests to validate whether the actions can support the number
    of people or services required. For example, during a test, you might check that
    you can connect to a secondary server, but does that server give you the required
    level of performance? Can it accept the number of connections that you need to
    restore the business?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Perform security tests to ensure that the minimum acceptable security level
    can be obtained with the proposed DRP.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you have multiple locations, test access to the secondary servers/systems
    from all locations (you need to make sure that your employees working from a beach
    in Costa Rica can also access the secondary systems/servers).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Test the *durability* of the secondary systems (proposed on the DRP) over an
    extended period of time and during different seasons. For example, you might test
    a satellite internet connection, and it could work fine if the sky is clear, but
    it might not provide you with the required level of service during cloudy weather
    or a storm.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get the required approvals (from the CEO, CTO, and CFO) before publishing the
    DRP. CTO approval is key to ensure that they agree with the technical decisions,
    CEO approval is key to ensure the DRP effectively covers the business, and CFO
    approval ensures that you have the budget required to implement and execute it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered a lot of very interesting and important topics that
    you can apply to your defense strategy.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we learned how to create a vulnerability assessment, including an overview
    of the most common types of vulnerabilities to help you create the best assessment.
    Then, we expanded into one of the core aspects of cyber defense: risk management.
    Here, we learned how to manage cybersecurity risks, and also looked at one of
    the most famous frameworks in cybersecurity: the NIST Cybersecurity Framework.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, as discussed in the previous chapter, *availability* is one of
    the core principles in cybersecurity. Therefore, to avoid downtime, we learned
    how to create a BCP, including a deep dive into its most important components:
    the BIA and the DRP.'
  prefs: []
  type: TYPE_NORMAL
- en: We also learned the details behind one of the most common and dangerous vulnerabilities,
    that is, the famous (or infamous) USB HID vulnerabilities. Here, we learned about
    the most common attack vectors that leverage this vulnerability, and also the
    tools and techniques we can use to prevent these types of attacks.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will expand this further and show you all the vulnerabilities
    associated with the weakest chain in cybersecurity, the user, and all the mechanisms,
    tools, and techniques that you can leverage to *patch the user*.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here is the official site of the **National Institute of Standards and Technology**
    (NIST), where you can check the latest version of the NIST Cybersecurity Framework:
    [https://www.nist.gov/cyberframework](https://www.nist.gov/cyberframework).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here, you can see the latest and greatest cybersecurity tools and gadgets that
    you can use when performing a vulnerability assessment: [https://hak5.org/](https://hak5.org/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Several sites show some vulnerable USB dongles, but most sites just show devices
    from the same brand. In this case, Wikipedia has the best compilation of vulnerable
    USB dongles, including several brands: [https://en.wikipedia.org/wiki/Logitech_Unifying_receiver](https://en.wikipedia.org/wiki/Logitech_Unifying_receiver).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you want to view another approach to risk management, then I suggest you
    take a look at the Orange Book from the UK government: [https://www.gov.uk/government/publications/orange-book](https://www.gov.uk/government/publications/orange-book).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This is a very good BIA template from Manchester City Council: [https://www.manchester.gov.uk/downloads/download/5700/mbcf_business_impact_analysis_template](https://www.manchester.gov.uk/downloads/download/5700/mbcf_business_impact_analysis_template).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is a thorough BCP template from Manchester City Council: [https://www.manchester.gov.uk/downloads/download/5701/mbcf_business_continuity_plan_template](https://www.manchester.gov.uk/downloads/download/5701/mbcf_business_continuity_plan_template).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is a very interesting BCP template that has been specifically designed
    for small businesses: [https://www.manchester.gov.uk/downloads/download/5792/business_continuity_guidance_to_support_small_businesses](https://www.manchester.gov.uk/downloads/download/5792/business_continuity_guidance_to_support_small_businesses).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Would you like to create your own solution against USB HID vulnerabilities?
    If so, then I suggest you review this document to gain a deeper understanding
    of the USB protocol (including descriptors, classes, and more): [https://www.ftdichip.com/Support/Documents/TechnicalNotes/TN_113_Simplified%20Description%20of%20USB%20Device%20Enumeration.pdf](https://www.ftdichip.com/Support/Documents/TechnicalNotes/TN_113_Simplified%20Description%20of%20USB%20Device%20Enumeration.pdf).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
