- en: '8'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Email Forensics – Investigation Techniques
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Email is just one portion of the global internet that has become a daily resource
    in the consumer and corporate realms. It has become one of the primary communication
    tools used by nearly every citizen of the industrialized world. Now that email
    has become part of everyone’s everyday lives, criminals will use this vector to
    commit crimes and collaborate with their co-conspirators.
  prefs: []
  type: TYPE_NORMAL
- en: It can be difficult for the digital forensic investigator to trace an email
    back to the source from its destination. Therefore, the digital forensic investigator
    will have to be educated in the methods and delivery systems of the email life
    cycle. When the digital forensic investigator successfully identifies the source
    of the email, that will lead to additional forensic investigations of the digital
    evidence that was found at the source.
  prefs: []
  type: TYPE_NORMAL
- en: Where can you find digital evidence relating to an email investigation? The
    local machine will have the destination version of the email, the email server(s),
    the device used to access the email, such as a cell phone, and logs from the internet
    service provider. The digital forensic investigator will have to know which tools
    can analyze emails and the compound files of the email box used by some email
    suites. Knowing how to present this information to a non-technical person will
    be crucial for conveying the relevance of the data that the examiner recovered.
    By the end of this chapter, you will understand the protocols used to send and
    receive emails, how to decode the email headers, and how to analyze client and
    web-based emails.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding email protocols
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Decoding emails
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding client-based email analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding WebMail analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding email protocols
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An email protocol is a standard used to allow two computer hosts to exchange
    email communication. When an email is sent, it travels from the sender’s host
    to an email server. The email server can forward the email through a series of
    relays until it arrives at an email server close to the recipient’s host. The
    recipient will receive a notification stating that an email is available; the
    recipient will then reach out to the email server to get the email.
  prefs: []
  type: TYPE_NORMAL
- en: Users typically use an email client to access emails. An email client can use
    different protocols to access the email. We will now discuss some email protocols
    you may encounter when conducting a digital forensics investigation.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding SMTP – Simple Mail Transfer Protocol
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SMTP is the protocol for email transmission. It is an internet standard based
    on RFC 821 but was later updated to RFC 3207, RFC 5321/5322.
  prefs: []
  type: TYPE_NORMAL
- en: '**Tip**'
  prefs: []
  type: TYPE_NORMAL
- en: RFC stands for Request for Comments. This is used on internet/communications
    technology to create standards. An RFC may come from different bodies, such as
    the Internet Architecture Board/Internet Engineering Task Force or an independent
    researcher. It was initially designed to track the development of the original
    ARPANET but has now evolved into a source of official documentation regarding
    internet specifications and communication protocols.
  prefs: []
  type: TYPE_NORMAL
- en: 'Mail servers use SMTP to send and receive email messages from all locations
    accessing the internet. Typically, you will find an SMTP server utilizing **Transmission
    Control Protocol** (**TCP**) port **25** on the network. The path from the sender
    to the recipient is outlined in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.1: SMTP map ](img/B18329_08_01.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.1: Diagram of an email sent by SMTP'
  prefs: []
  type: TYPE_NORMAL
- en: When the user sends an email, it will travel from the host to a series of SMTP
    servers until it reaches the destination SMTP server. The recipient will have
    to use a different protocol to retrieve the email, which is our next topic.
  prefs: []
  type: TYPE_NORMAL
- en: The next protocol we will discuss is POP3.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Post Office Protocol
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: POP3 is the standardized protocol that allows users to access their inbox and
    download emails. POP3 is specifically designed only to receive emails; the system
    does not allow users to send emails. This protocol enables the user to be offline
    when drafting, reading, or replying and can access the online mailbox on-demand
    at the user’s request. Be aware that the email you are conducting your digital
    forensic examination on may be the only copy. The user has the option to not leave
    a copy of the email on the server. Once the email has been downloaded, the system
    can remove it to reduce storage use on the server.
  prefs: []
  type: TYPE_NORMAL
- en: You will find POP utilizing port **110** on the network.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following diagram, you can see the general functionality of the SMTP-POP
    process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.2: SMTP-POP map ](img/B18329_08_02.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.2: SMTP-POP map'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, you can see the path the email takes, which is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: The email originates from the sender.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The SMTP server forwards it to the destination.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The recipient collects the email from the server. The recipient can decide if
    a copy of the email stays on the server or whether the email will be deleted when
    the user downloads the email from the server.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When we look at the next protocol, we will discuss functions similar to SMTP,
    but with some significant differences. We will discuss these differences in the
    next section.
  prefs: []
  type: TYPE_NORMAL
- en: IMAP – Internet Message Access Protocol
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**IMAP** is the **Internet Message Access Protocol** and is a standard protocol
    used by an email client to access emails on an email server. The protocol was
    designed to allow complete inbox management with multiple clients. In most cases,
    email messages will be left on the server until the user deletes them. IMAP is
    a newer protocol than POP, but both are still prevailing email standards in use
    today. The most significant difference between IMAP and POP is that POP retrieves
    the mailbox’s contents, and IMAP was designed as a remote access mailbox protocol.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following diagram, you can see the general functionality of the SMTP-IMAP
    process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.3: IMAP map ](img/B18329_08_03.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.3: IMAP map'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, you can see the path the email takes:'
  prefs: []
  type: TYPE_NORMAL
- en: The email originates from the sender.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The SMTP server forwards it to the destination.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The recipient collects the email from the server. A copy of the email stays
    on the server until the user explicitly deletes it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: All three protocols we just discussed are typically used in the email client-server
    relationship. Users also have another option when it comes to accessing emails
    known as web-based email, which is the topic of the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding web-based email
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Web-based email is a service the user accesses with a web browser. Standard
    webmail providers are Gmail, Yahoo Mail, and Outlook/Hotmail. Some internet service
    providers also provide an email account that the user can access with a web browser.
  prefs: []
  type: TYPE_NORMAL
- en: User-deleted emails stored on a web-based email server typically remain on the
    server until the system deletes them. A characteristic feature of web-based email
    is that when the user deletes an email, it is moved from the inbox into a **Deleted/Trash**
    folder and can still be accessed. However, after the email remains in the **Deleted**
    folder for a set timeframe, the system permanently deletes it from the user’s
    inbox.
  prefs: []
  type: TYPE_NORMAL
- en: We have gone over the different methods of how a user may access email services.
    However, once you have the email dataset available for examination, you may find
    the contents of the email encoded. So, how do you decode the contents of the email
    to determine whether a crime/violation has/has not been committed?
  prefs: []
  type: TYPE_NORMAL
- en: In the next topic, we will decode the email header so that you can make an informed
    choice about your investigative endeavors.
  prefs: []
  type: TYPE_NORMAL
- en: Decoding email
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An email has many unique identifiers for a digital forensic investigator to
    identify and track down. The mailbox and domain name, along with the message ID,
    will allow a digital forensic investigator to serve judicially approved subpoenas/search
    warrants on the vendor to follow any investigative leads.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we will break down the email header one section at a time so
    that you can decide how to conduct your investigation. First, we will start by
    discussing the email envelope.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the email message format
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The vast majority of email users are only familiar with basic email information,
    such as this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We are back to dealing with our friend Jean, and by looking at the email, we
    can see several fields commonly associated with an email. Here, we know the subject,
    background checks, the date and time when the user sent the email, the sender,
    and the recipient.
  prefs: []
  type: TYPE_NORMAL
- en: 'We also have the content of the email, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: As we look at the email, it appears that the email was sent to *Jean* from *Alison*.
    Alison is requesting a spreadsheet of confidential employee information. Based
    on the basic examination of this email, there is nothing to contradict what it
    initially appears to be.
  prefs: []
  type: TYPE_NORMAL
- en: The user has created the information in the *to* and *from* fields and the *subject*
    and the *content* of the email. The system derives the date and time from the
    system time, which can be set by the user.
  prefs: []
  type: TYPE_NORMAL
- en: Underneath the typical email information, another layer of data is instrumental
    when conducting your investigations. This is referred to as the *email header*,
    and it contains information about the source, transmission, and destination of
    a specific email.
  prefs: []
  type: TYPE_NORMAL
- en: 'Most email clients require an additional command to view the email header.
    For example, Gmail requires you to click **Show original** to see the email header.
    For example, the following is the email header for the email Jean received from
    Alison:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The email header shows where the email originated from and what servers it
    touched upon. Starting from the bottom, we can see the `Message-Id` field:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The `Message-Id` field contains a unique ID for every email that has been sent.
    When a user sends an email, it will receive its message ID from the first email
    server it touches. The message ID will be globally unique, so there should not
    be another email with the same message ID. If you find different emails that contain
    the same message ID, you are dealing with one of two scenarios:'
  prefs: []
  type: TYPE_NORMAL
- en: The email server is not compliant with the standard.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A user has altered the email.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When you look at the message ID, you will see a string of random alphanumeric
    characters, as well as the `@` symbol and a domain name. Sometimes, the arbitrary
    string of alphanumeric characters contains a date/timestamp. Looking at the preceding
    example, we can see the numbers `20080719233957`, which can be translated to *2008
    07 19* – the year, month, and day. *23:39:57* is the time in hours, minutes, and
    seconds (GMT) when the email touched the first server.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can see the first **Received** line from the bottom to the top. This email
    transverses three different email servers. As the email crosses a server on its
    journey to its destination, each email server will attach a **Received** line
    on top of the preceding **Received** line. You can follow the email path from
    source to destination. In the email, we are examining the first server the email
    touched, which is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: This is the first server the email touched; we have the domain name `dreamhostps.com`
    and a user ID. The next logical step would be to subpoena the ISP and identify
    the subscriber with user ID `558838`. Finally, the term `Postfix` identifies the
    email server. Postfix is a free, open-source mail transfer agent and could be
    a commercial email server or an email server maintained by a potential bad actor.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following two **Received** lines identify the subsequent servers on the
    path to the destination:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: In both cases, we now have the IP addresses of the specific servers (and server
    names) that touched the email.
  prefs: []
  type: TYPE_NORMAL
- en: 'What’s interesting is when we look at the `Return-Path` field:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The `Return-Path` is the address where undeliverable messages will be sent.
    `Return-Path` will also override the `From` field that the user will see. You
    will see this being used in email mailing lists, where you can reply to the user
    of the post and not to the list.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are optional fields that you may come across in your investigations.
    These fields typically start with an `X–`, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: These fields are not part of the email protocol standard. They can contain information
    about a virus scan, spam scans, or information about the server. As you can see,
    it provides information about contact information regarding abuse, such as spam.
    You may also see an optional field called `X–Originating–IP` that may contain
    the sender’s IP address when the user sent the message. An email provider can
    strip that information and replace it with a server address, which happens when
    a message is sent from Gmail.
  prefs: []
  type: TYPE_NORMAL
- en: 'A note about IP addresses: there are two different types of IPv4 addresses:
    public and private. You may see both in the email header. However, if you see
    a private IP address, you cannot identify the provider (unless you are investigating
    within the organization). Private IPv4 addresses run from the following addressing
    schemes:'
  prefs: []
  type: TYPE_NORMAL
- en: 10.X.X.X
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 127.X.X.X
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 172.16.X.X
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 192.168.X.X
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will discuss email attachments in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Email attachments
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**MIME** is the acronym for **Multipurpose Internet Mail Extensions**, the
    internet standard for allowing emails to accept text other than ASCII, binary
    attachments, multi-part message bodies, and non-ASCII base header information.
    When you are viewing the header, you will see MIME indicated with the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'An example of this is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Here, we can see the content type, HTML, and with the following line, we see
    it is using 7-bit coding. We would also see Base64 encoding if there were an attachment,
    which converts the binary data into ASCII text.
  prefs: []
  type: TYPE_NORMAL
- en: The system will separate the body of the email based on the data type of each
    segment. For example, a JPEG image will accompany one segment and store ASCII
    text in a different segment. In addition, each segment will start with a MIME
    header that includes the keyword `_PART_`.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have discussed the email and header, we need to look at some of
    the clients the user may use to access the emails.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding client-based email analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A user has access to many email clients to retrieve, read, and send emails.
    Depending on whether you’re in the consumer or commercial environment, you may
    encounter different email clients. In the consumer market, you will find that
    Microsoft Outlook/Outlook Express will prevail because it is preinstalled on the
    system. In addition, Microsoft Outlook comes with the Microsoft Office suite.
    There are also freeware options available such as the Thunderbird email client.
  prefs: []
  type: TYPE_NORMAL
- en: You can conduct an email examination by exporting the container used by the
    client and opening it with the email client installed on your forensic computer.
    Another option is to utilize specialized commercial forensic software created
    for email examinations. The more common forensic suites will typically analyze
    the more common email client containers.
  prefs: []
  type: TYPE_NORMAL
- en: We will discuss some more common email clients in the following sections.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring Microsoft Outlook/Outlook Express
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Outlook stores email information in several file types, such as `pst`, `.mdb`,
    and `.ost`. We will find the PST file on the user’s hard disk at the following
    path:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: The OST file is an offline file that may also be stored on the user’s hard drive
    in the same path as the PST file. Finally, you will find the MDB file on the server.
    Typically, this file is found when you are investigating a corporate environment.
  prefs: []
  type: TYPE_NORMAL
- en: The system will store all the content used with the Outlook client in the PST/OST
    file. Be aware that the user can change the default location and the naming convention.
    You do not need a login to access the PST/OST file.
  prefs: []
  type: TYPE_NORMAL
- en: If you need to carve out a PST/OST file from the unallocated space of the storage
    device, you may have to deal with fragmentation because of the potential size
    of the PST/OST file.
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft has replaced Outlook Express with Windows Live. The following section
    will provide details about this client.
  prefs: []
  type: TYPE_NORMAL
- en: Exploring Microsoft Windows Live Mail
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Starting with Windows Vista and Windows 7, Windows Live became the default
    email client shipping with the Windows operating system. (Note that it has been
    discontinued and that Windows Mail is now included with Windows 10 instead. Windows
    Mail will not store the emails on the disk, the emails will only be cloud based.
    ) The client stores email messages in the following path:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Users can use this client to access their web-based emails as well. Windows
    Live Mail will download the contents of those accounts and then create the folder
    structure within the user’s path.
  prefs: []
  type: TYPE_NORMAL
- en: 'The client will store the emails as an`.eml` file in the Windows Live Mail
    folder, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![A picture containing text, receipt, screenshot  Description automatically
    generated](img/B18329_08_04.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.4: Windows Live Mail folder'
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, this user was using Hotmail with the Windows Live Mail application.
    You can see the email address, `little9@hotmail.com`, and see that 54 emails are
    being stored in the user’s folders.
  prefs: []
  type: TYPE_NORMAL
- en: 'The emails are in the standard text format, `.eml`, which can be read by any
    forensic tool. Alternatively, you can use a text editor. The next client is also
    popular and free: Mozilla Thunderbird.'
  prefs: []
  type: TYPE_NORMAL
- en: Mozilla Thunderbird
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Thunderbird is a free, open-source email client provided by Mozilla. Thunderbird
    will store emails within a `.MBOX` file. The MBOX format is a generic term for
    a family of file formats used to store emails. It will keep all the emails from
    folder into a singular database file. By default, the examiner can find the MBOX
    file in the following path:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'The following is the folder structure you will see when Thunderbird is installed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18329_08_05.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.5: Thunderbird folder structure'
  prefs: []
  type: TYPE_NORMAL
- en: The profile name is created by Thunderbird. The release version of the software
    the user has installed can also be seen here. As we analyze the folder structure,
    we will see that it contains information about crashes and stores data in a minidump
    when a crash occurs. There may also be calendar data and mailboxes.
  prefs: []
  type: TYPE_NORMAL
- en: Here, the user is using the IMAP protocol to access their Yahoo mail account,
    and there are 15 items stored within the folder.
  prefs: []
  type: TYPE_NORMAL
- en: 'When we look in the folder, we will see the following files:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Archive.msf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Archives.msf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Bulk Mail.msf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Draft.msf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Drafts.msf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`INBOX`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`INBOX.msf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`msgFilterRules.dat`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Sent-1.msf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Sent.msf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Templates.msf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Trash.msf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The **MSF** files are **Mail Summary files**, one part of the email. The email
    client, Thunderbird, stores the email data in two different parts. The first part
    is the MBOX file, which does not have a file extension. The MSF files are the
    index files for Thunderbird and contain email headers and a summary. Thunderbird
    uses these files as an index to locate the email stored in the MBOX.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following screenshot, three emails are being stored in the MBOX. When
    X-Ways parses out the inbox, the emails will have a `.eml` file extension:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.4: Thunderbird inbox ](img/B18329_08_06.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.6: Thunderbird inbox'
  prefs: []
  type: TYPE_NORMAL
- en: The MBOX format is used by many email clients, including Apple Mail, Opera Mail,
    and Thunderbird. In addition, most commercial and open-source forensic suites
    will process the MBOX and provide access to emails.
  prefs: []
  type: TYPE_NORMAL
- en: 'While the user can access their email from a client, another popular option
    allows the user to access their email without using a client: WebMail.'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding WebMail analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Web-based email has become increasingly popular as we transition from the twentieth
    to the twenty-first century. It’s easy to access, requires little to no configuration
    from the user, and is available from any computer. In the simplest terms, WebMail
    is just another internet artifact for conducting browser analysis (we will cover
    internet artifacts in *Chapter 9*, *Internet Artifacts*).
  prefs: []
  type: TYPE_NORMAL
- en: The service provider maintains the user’s email and may provide additional services,
    such as address books and calendars. Users can use a host-based client to access
    web-based email. Still, I have found that those users are in the minority when
    content is hosted by the service provider, which provides additional obstacles
    to the digital forensic investigator. The only artifacts relating to the content
    may be in the user’s internet history, which may be fragmented. If a digital forensic
    investigator wants to access the content of a user’s web-based email, they will
    have to serve a search warrant (in the United States; your jurisdiction may have
    different requirements) on the service provider. You may be unable to access or
    recover any deleted emails from the account. It will depend on the specific set
    of circumstances for each service provider.
  prefs: []
  type: TYPE_NORMAL
- en: Suppose the digital forensic investigator wants to investigate the user’s use
    of web-based email. In that case, they will have to analyze the temporary internet
    files or the internet *cache* on the user’s system. The temporary internet files/cache
    contains images, text, or any web page component the user has viewed in their
    browser.
  prefs: []
  type: TYPE_NORMAL
- en: Their browser saves this information in the temporary internet **files/cache**
    location to enhance the user experience. It does this by having a faster response
    time when presenting pages to the user. Instead of continually redownloading the
    content, you can reach back into the cache and present that information to the
    user.
  prefs: []
  type: TYPE_NORMAL
- en: Gmail is very popular, and when the service first deployed its web application,
    it changed how WebMail was presented to users. No longer were static web pages
    displaying the email content and the user’s email folders. Instead, Gmail dynamically
    created content on the fly for each user. The system no longer saved image files
    and text to the user’s local storage device; instead, Gmail used **Asynchronous
    JavaScript** (**AJAX**) and XML files. Unfortunately, this new method did not
    allow a web page to be rebuilt by investigators.
  prefs: []
  type: TYPE_NORMAL
- en: You can still recover artifacts within the internet cache and other potential
    sources such as RAM or the pagefile on the user’s local storage device. You will
    need to conduct keyword searches for email addresses or keyword searches for terms
    related to your investigation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before I look into the cache, I want to look into the internet history of the
    installed browser to see if the user has accessed web-based email. For the Chrome
    browser, you will find the history stored in a SQLite database named `History`
    at the following path:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'The analysis of the `History` database shows the user accessed the Gmail web-based
    service, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.5: Email – History ](img/B18329_08_07.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.7: Email – History'
  prefs: []
  type: TYPE_NORMAL
- en: We have a date/time stamp, along with the email address. The artifact also shows
    that the user had two unread emails in the inbox when accessing the service.
  prefs: []
  type: TYPE_NORMAL
- en: 'I found this in the internet cache for the Google Chrome browser, which the
    examiner can find at the following location:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'As you can see in the following screenshot showing the Chrome cache, the content
    is not easily decipherable and does not give us a lot to follow up with:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18329_08_08.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.8: Chrome cache displayed'
  prefs: []
  type: TYPE_NORMAL
- en: 'If we keep searching for the email address we found in the cache, `badguyneedslove@gmail.com`,
    we may find other artifacts, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '****This artifact, which the examiner can find within the cache, gives us another
    email address, `badguy27@yahoo.com`, to follow up. Unfortunately, the content
    of the email remains out of reach.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at the Firefox cache and see whether it can give us a better look
    at the cache and history.
  prefs: []
  type: TYPE_NORMAL
- en: 'The examiner can find the cache and history for the Firefox browser at the
    following location:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Firefox will store the internet history and cache in the user’s profile. The
    folder structure you will see may look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Text  Description automatically generated](img/B18329_08_09.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.9: Firefox folder structure'
  prefs: []
  type: TYPE_NORMAL
- en: 'It looks like the visual depiction of the content of the Firefox cache is not
    much better:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18329_08_10.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8.10: Firefox Cache'
  prefs: []
  type: TYPE_NORMAL
- en: It does not provide a wealth of information, but it does supply breadcrumbs
    for us to follow up and conduct additional investigative efforts.
  prefs: []
  type: TYPE_NORMAL
- en: In the world of forensics, the artifacts you rely upon can quickly change with
    new updates to the software or changes in the operating system. Be flexible with
    your investigative techniques so that you can jump into the latest technology
    to make your investigation successful. Once you have identified that the subject
    of your inquiry is using web-based email, your best course of action is to serve
    the service provider with the appropriate judicial paperwork to freeze the account
    and get the required content.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we have gone over standard email protocols: the system uses
    SMTP to send emails, while POP and IMAP are used to receive emails. IMAP also
    includes features that the user can use to manage the inbox. We went over the
    email header and the components that make up the header. We also discussed WebMail
    and email clients.'
  prefs: []
  type: TYPE_NORMAL
- en: You now have the skills necessary to read an email header and determine the
    servers that the user used to transmit the email and what protocols the system
    used to send and receive the email. When conducting a digital forensic examination,
    you can now identify artifacts from typical email clients and web-based emails.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, you will learn about the similarities between web-based
    email clients.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Which of the following is not an email protocol?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: HTML
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: POP
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: SMTP
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: IMAP
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following allows the user to manage their inbox?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: COC
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: POP
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: FreeBSD
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: IMAP
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: The email header is created by user input information.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'True'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'False'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Thunderbird stores emails in which file?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Inbox
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Outbox
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: MBOX
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Letterbox
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which email client uses a PST file?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Thunderbird
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Gmail
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Yahoo Mail
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Outlook
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Windows Live Mail was replaced with which client?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Outlook Express
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Outlook
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Windows Mail
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Windows Email
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You will always find the content of a web-based email in the user’s cache.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'True'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'False'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You will find the answers at the back of this book, under *Assessments*.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Jones, R. (2006). Internet forensics: Beijing: OReilly* (can be purchased
    at [http://shop.oreilly.com/product/9780596100063.do](http://shop.oreilly.com/product/9780596100063.do))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exercise
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Data set
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`Jean outlook.pst`'
  prefs: []
  type: TYPE_NORMAL
- en: Software needed
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Autopsy - [https://www.autopsy.com/](https://www.autopsy.com/)
  prefs: []
  type: TYPE_NORMAL
- en: Scenario
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A company, XYZ LLC, finds that a spreadsheet containing confidential information
    was posted as an attachment in the “technical support” forum of a competitor’s
    website.
  prefs: []
  type: TYPE_NORMAL
- en: The spreadsheet came from the CFO of XYZ LLC, Jean’s computer.
  prefs: []
  type: TYPE_NORMAL
- en: Interviews
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You are tasked with investigating the leak of confidential information. To
    that end, you conduct interviews with the President and Chief Financial Officer
    of XYZ LLC, Alison and Jean respectively. Here are excerpts from their interviews:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Alison (President):'
  prefs: []
  type: TYPE_NORMAL
- en: I don’t know what Jean is talking about.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I never asked Jean for the spreadsheet.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I never received the spreadsheet by email.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Jean (CFO):'
  prefs: []
  type: TYPE_NORMAL
- en: Alison asked me to prepare the spreadsheet as part of a new funding round.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Alison asked me to send the spreadsheet to her by email.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: That’s all I know.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Email accounts
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Alison (President):'
  prefs: []
  type: TYPE_NORMAL
- en: '`alison@m57.biz`'
  prefs: []
  type: TYPE_NORMAL
- en: 'Jean (CFO):'
  prefs: []
  type: TYPE_NORMAL
- en: '`jean@m57.biz`'
  prefs: []
  type: TYPE_NORMAL
- en: Question to answer
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Examining Jean’s email – How did the documents get on the competitor’s website?
    Use Autopsy (or your tool of choice) to analyze the emails contained in the `.pst`
    file.
  prefs: []
  type: TYPE_NORMAL
- en: Join our community on Discord
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Join our community’s Discord space for discussions with the author and other
    readers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://packt.link/CyberSec](https://packt.link/CyberSec)'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/QR_Code38524672928771120931.png)****'
  prefs: []
  type: TYPE_NORMAL
