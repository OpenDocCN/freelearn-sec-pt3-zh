- en: '*Chapter 1*: Introduction to Azure security'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When cloud computing comes up as the subject of a conversation, security is,
    very often, the main topic. When data leaves local datacenters, many wonder what
    happens to it. We are used to having complete control over everything, from physical
    servers, networks, and hypervisors, to applications and data. Then, all of a sudden,
    we are supposed to transfer much of that to someone else. It's natural to feel
    a little tension and distrust at the beginning, but, if we dig deep, we'll see
    that cloud computing can offer us more security than we could ever achieve on
    our own.
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Azure is a cloud computing service provided through Microsoft-managed
    datacenters dispersed around the world. Azure datacenters are built to top industry
    standards and comply with all the relevant certification authorities, such as
    ISO/IEC 27001:2013 and NIST SP 800-53, to name a couple. These standards guarantee
    that Microsoft Azure is built to provide security and reliability.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we''ll learn about Azure security concepts and how security
    is structured in Microsoft Azure datacenters, using the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Exploring the shared responsibility model
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Physical security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure infrastructure availability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure infrastructure integrity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure infrastructure monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding Azure security foundations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring the shared responsibility model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While Microsoft Azure is very secure, responsibility for building a secure environment
    doesn't rest with Microsoft alone. Its shared responsibility model divides responsibility
    between Microsoft and its customers.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before we can discuss which party looks after which aspect of security, we
    need to first discuss cloud service models. There are three basic models:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Infrastructure as a Service** (**IaaS**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Platform as a Service** (**PaaS**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Software as a Service** (**SaaS**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'These models differ in terms of what is controlled by Microsoft and the customer.
    A general break up can be seen in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.1 – Basic cloud service models](img/Figure_1.1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.1 – Basic cloud service models
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s look at these services in a little more detail:'
  prefs: []
  type: TYPE_NORMAL
- en: On-premises
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In an on-premises environment, we, as users, take care of everything: the network,
    physical servers, storage, and so on. We need to set up virtualization stacks
    (if used), configure and maintain servers, install and maintain software, manage
    databases, and so on. Most importantly, all aspects of security are our responsibility:
    physical security, network security, host and OS security, and application security
    for all application software running on our servers.'
  prefs: []
  type: TYPE_NORMAL
- en: Infrastructure as a Service
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: With IaaS, Microsoft takes over some of the responsibilities. We only take care
    of data, runtime, applications, and some aspects of security, which we'll discuss
    a little later on. An example of an IaaS product in Microsoft Azure is Azure **Virtual
    Machines** (**VM**).
  prefs: []
  type: TYPE_NORMAL
- en: Platform as a Service
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: PaaS gives Microsoft even more responsibility. We only take care of our applications.
    However, this still means looking after a part of the security. Some examples
    of PaaS in Microsoft Azure are Azure SQL Database and web apps.
  prefs: []
  type: TYPE_NORMAL
- en: Software as a Service
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: SaaS gives a large amount of control away, and we manage very little, including
    some aspects of security. In Microsoft's ecosystem, a popular example of SaaS
    is Office365; however, we will not discuss this in this book.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have a basic understanding of shared responsibility, let's understand
    how responsibility for security is allocated.
  prefs: []
  type: TYPE_NORMAL
- en: Division of security in the shared responsibility model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The shared responsibility model divides security into three zones:'
  prefs: []
  type: TYPE_NORMAL
- en: Always controlled by the customer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Always controlled by Microsoft
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Varies by service type
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Irrespective of the cloud service model, customers will always retain the following
    security responsibilities:'
  prefs: []
  type: TYPE_NORMAL
- en: Data governance and right management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Endpoints
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Account and access management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Similarly, Microsoft always handles the following, in terms of security, for
    any of its cloud service models:'
  prefs: []
  type: TYPE_NORMAL
- en: Physical datacenter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Physical network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Physical hosts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Finally, there are a few security responsibilities that are allocated based
    on the cloud service model:'
  prefs: []
  type: TYPE_NORMAL
- en: Identity and directory infrastructure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Operating system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Responsibility distribution, based on different cloud service models, is shown
    in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.2 – Responsibility distribution between the customer and service
    provider for different cloud service models (image courtesy of Microsoft, License:
    MIT)](img/Figure_1.2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.2 – Responsibility distribution between the customer and service provider
    for different cloud service models (image courtesy of Microsoft, License: MIT)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we know how security is divided, let''s move on to one specific aspect
    of it: the physical security that Microsoft manages. This section is important
    as we won''t discuss it in much detail in the chapters to come.'
  prefs: []
  type: TYPE_NORMAL
- en: Physical security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It all starts with physical security. No matter what we do to protect our data
    from attacks coming from outside of our network, it would all be in vain if someone
    was to walk into datacenters or server rooms and take away disks from our servers.
    Microsoft takes physical security very seriously in order to reduce risk from
    unauthorized access to data and datacenter resources.
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure datacenters can be accessed only through strictly defined access points.
    A facility''s perimeter is safeguarded by tall fences made of steel and concrete.
    In order to enter Azure datacenters, a person needs to go through at least two
    checkpoints: first to enter the facility perimeter, and second to enter the building.
    Both checkpoints are staffed by professional and trained security personnel. In
    addition to the access points, security personnel patrol the facility''s perimeter.
    The facility and its buildings are covered by video surveillance, which is monitored
    by the security personnel.'
  prefs: []
  type: TYPE_NORMAL
- en: After entering the building, two-factor authentication with biometrics is required
    to gain access to the inside of the datacenter. If their identity is validated,
    a person can access only approved parts of the datacenter. Approval, besides defining
    areas that can be accessed, also defines periods that can be spent inside these
    areas. It also strictly defines whether a person can access these areas alone
    or needs to be accompanied by someone.
  prefs: []
  type: TYPE_NORMAL
- en: Before accessing each area inside the datacenter, a mandatory metal detector
    check is performed. In order to prevent unauthorized data leaving or entering
    the datacenter, only approved devices are allowed. Additionally, all server racks
    are monitored from the front and back using video surveillance. When leaving a
    datacenter area, an additional metal detector screening is required. This helps
    Microsoft make sure that nothing that can compromise its data's security is brought
    in or removed from the datacenter without authorization.
  prefs: []
  type: TYPE_NORMAL
- en: A review of physical security is conducted periodically for all facilities.
    This aims to satisfy all security requirements at all times.
  prefs: []
  type: TYPE_NORMAL
- en: After equipment reaches the end of its life, it is disposed of in a secure way,
    with rigorous data and hardware disposal policies. During the disposal process,
    Microsoft personnel ensure that data is not available to untrusted parties. All
    data devices are either wiped (if possible) or physically destroyed in order to
    render the recovery of any information impossible.
  prefs: []
  type: TYPE_NORMAL
- en: All Microsoft Azure datacenters are designed, built, and operated in a way that
    satisfies top industry standards, such as ISO 27001, HIPAA, FedRAMP, SOC 1, and
    SOC 2, to name a few. In many cases, specific region or country standards are
    followed as well, such as Australia IRAP, UK GCloud, and Singapore MTCS.
  prefs: []
  type: TYPE_NORMAL
- en: As an added precaution, all data inside any Microsoft Azure datacenter is encrypted
    at rest. Even if someone managed to get their hands on disks with customers' data,
    which is virtually impossible with all the security measures, it would take an
    enormous effort (both from a financial and time perspective) to decrypt any of
    the data.
  prefs: []
  type: TYPE_NORMAL
- en: But in the cloud era, network security is equally, if not more, important as
    physical security. Most services are accessed over the internet, and even isolated
    services depend on the network layer. So next, we need to take a look at Azure
    network architecture.
  prefs: []
  type: TYPE_NORMAL
- en: Azure network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Networking in Azure can be separated into two parts: managed by Microsoft and
    managed by us. In this section, we will discuss the part of networking managed
    by Microsoft. It''s important to understand the architecture, reliability, and
    security setup of this part to provide more context once we move to parts of network
    security that we need to manage.'
  prefs: []
  type: TYPE_NORMAL
- en: 'As with Azure datacenters generally, the Azure network follows industry standards
    with three distinct models/layers:'
  prefs: []
  type: TYPE_NORMAL
- en: Core
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Distribution
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Access
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All three models use distinct hardware in order to completely separate all the
    layers. The core layer uses datacenter routers, the distribution layer uses access
    routers and L2 aggregation (this layer separates L3 routing from L2 switching),
    and the access layer uses L2 switches.
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure network architecture includes two levels of L2 switches:'
  prefs: []
  type: TYPE_NORMAL
- en: '**First level**: Aggregates traffic'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Second level**: Loops to incorporate redundancy'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This approach allows for more flexibility and better port scaling. Another benefit
    of this approach is that L2 and L3 are totally separated, which allows for the
    use of distinct hardware for each layer in the network. Distinct hardware minimizes
    the chances of a fault in one layer affecting another one. The use of trunks allows
    for resource sharing for better connectivity.
  prefs: []
  type: TYPE_NORMAL
- en: 'The network inside an Azure datacenter is distributed into clusters for better
    control, scaling, and fault tolerance. Each network in every Azure cluster consists
    of the following devices:'
  prefs: []
  type: TYPE_NORMAL
- en: Routers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Switches
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Digi CMs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Power distribution units
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Routers can be separated into three groups: datacenter, access, and border
    leaf routers. Switches are aggregation or top-of-rack switches.'
  prefs: []
  type: TYPE_NORMAL
- en: It's important to mention that there are two different network architectures
    in Azure datacenters – **Default LAN Architecture** (**DLA**) and **Quantum 10
    Architecture** (**Q10**).
  prefs: []
  type: TYPE_NORMAL
- en: DLA is used by some existing customers and shared services, mainly in some of
    the first Azure regions. Q10 is used in newer Azure datacenters and virtual customers.
    DLA uses a classic tree design with active/passive access routers. Q10 uses a
    close/mesh design. The main difference between these architectures is how **Access
    Control** **Lists** (**ACLs**) are applied. In DLA, ACLs are applied directly
    to access routers. Q10 doesn't apply ACLs on the routing level but one level below,
    using software-defined networking with **Software** **Load** **Balancing** (**SLBs**)
    and software-defined VLANs.
  prefs: []
  type: TYPE_NORMAL
- en: The main benefit of Q10 is its greater capability and ability to scale existing
    infrastructure. Another benefit of Q10 is that software-defined networking can
    handle some security features, such as **Network** **Address** **Translation**
    (**NAT**).
  prefs: []
  type: TYPE_NORMAL
- en: 'Both architectures, DLA and Q10, are shown in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_1.3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.3 – DLA and Quantum 10 architecture (image courtesy of Microsoft,
    License: MIT)'
  prefs: []
  type: TYPE_NORMAL
- en: Azure networking is built upon highly redundant infrastructure in each Azure
    datacenter. Implemented redundancy is **need plus one** (**N+1**) or better, with
    full failover features within and between Azure datacenters. Full failover tolerance
    ensures constant network and service availability. From the outside, Azure datacenters
    are connected by dedicated, high-bandwidth network circuits redundantly that connect
    properties with over 1,200 **Internet Service Providers** (**ISPs**) on a global
    level. Edge capacity across the network is over 2,000 GBps, which presents an
    enormous network potential.
  prefs: []
  type: TYPE_NORMAL
- en: '**Distributed Denial of Service** (**DDoS**) is becoming a huge issue in terms
    of service availability. As the number of cloud services increases, DDoS attacks
    become more targeted and sophisticated. With the help of geographical distribution
    and quick detection, Microsoft can help you mitigate these DDoS attacks and minimize
    the impact. Let''s take a look at this in more detail.'
  prefs: []
  type: TYPE_NORMAL
- en: Azure infrastructure availability
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure is designed, built, and operated in order to deliver highly available
    and reliable infrastructure. Improvements are constantly implemented to increase
    availability and reliability, along with efficiency and scalability. Delivery
    of a more secure and trusted cloud is always a priority.
  prefs: []
  type: TYPE_NORMAL
- en: Uninterruptible power supplies and vast banks of batteries ensure that the flow
    of electricity stays uninterrupted in case of short-term power disruptions. In
    the case of long-term power disruptions, emergency generators can provide backup
    power for days. Emergency power generators are used in cases of long power outages
    or planned maintenance. In cases of natural disasters, when the external power
    supply is unavailable for long periods of time, each Azure datacenter has fuel
    reserves on-site.
  prefs: []
  type: TYPE_NORMAL
- en: Robust and high-speed fiber-optic networks connect datacenters to major hubs.
    It's important that, along with connection through major hubs, datacenters are
    connected directly between themselves as well. Everything is distributed into
    nodes, which host workloads closer to users to reduce latency, provide geo-redundancy,
    and increase resiliency.
  prefs: []
  type: TYPE_NORMAL
- en: 'Data in Azure can be placed in two separate locations: primary and secondary
    locations. A customer can choose where primary and secondary locations will be.
    The secondary location is a backup site. In each location, primary and secondary,
    Azure keeps three healthy copies of your data at all times. This means that six
    copies of data are available at any time. If any data copy becomes unavailable
    at any time, it''s immediately declared invalid, a new copy is created, and the
    old one is destroyed.'
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft ensures high availability and reliability through constant monitoring,
    incident response, and service support. Each Azure datacenter operates 24/7/365
    to ensure that everything is running and all services are available at all times.
    Of course, "available at all times" is a goal that, ultimately, is impossible
    to reach. There are many circumstances that can impact uptime, and sometimes it's
    impossible to control all of them. Realistically, the aim is to achieve the best
    possible **Service Level Agreement** (**SLA**) and ensure that potential downtime
    is as small as possible. The SLA can vary on a number of factors and is different
    per service and configuration. If we take into account all the factors we can
    control, the best SLA we can achieve would be 99.99%, also known as "four nines."
  prefs: []
  type: TYPE_NORMAL
- en: Closely connected to infrastructure availability is infrastructure integrity.
    Integrity affects the availability terms of deployment, where all steps must be
    verified from different perspectives. New deployments must not cause any downtime
    or affect existing services in any way.
  prefs: []
  type: TYPE_NORMAL
- en: Azure infrastructure integrity
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All software components installed in the Azure environment are custom built.
    This, of course, refers to software installed and managed by Microsoft as part
    of Azure Service Fabric. Custom software is built using Microsoft's **Security**
    **Development** **Lifecycle** (**SDL**) process, including operating system images
    and SQL databases. All software deployment is conducted as part of the strictly
    defined change management and release management process. All nodes and fabric
    controllers use customized versions of Windows Server 2012\. Installation of any
    unauthorized software is not allowed.
  prefs: []
  type: TYPE_NORMAL
- en: VMs running in Azure are grouped into clusters. Each cluster contains around
    1,000 VMs. All VMs are managed by the **Fabric** **Controller** (**FC**). The
    FC is scaled out and redundant. Each FC is responsible for the life cycle management
    of applications running in its own cluster. This includes provisioning and monitoring
    of hardware in that cluster. If any server fails, the FC automatically rebuilds
    a new instance of that server.
  prefs: []
  type: TYPE_NORMAL
- en: Each Azure software component undergoes a build process (as part of the release
    management process) that includes virus scans using endpoint protection anti-virus
    tools. As each software component undergoes this process, nothing goes to production
    without a clean-virus scan. During the release management process, all components
    go through a build process. During this process, an anti-virus scan is performed.
    Each virus scan creates a log in the build directory and, if any issues are detected,
    the process for this component is frozen. Any software components for which the
    issue is detected undergo inspection by Microsoft security teams in order to detect
    the exact issue.
  prefs: []
  type: TYPE_NORMAL
- en: Azure is a closed and locked-down environment. All nodes and guest VMs have
    their default Windows administrator account disabled. No user accounts are created
    directly on any of the nodes or guest VMs as well. Administrators from Azure support
    can connect to them only with proper authorization to perform maintenance tasks
    and emergency repairs.
  prefs: []
  type: TYPE_NORMAL
- en: With all precautions taken to provide maximum availability and security, incidents
    may occur from time to time. In order to detect these issues and mitigate them
    as soon as possible, Microsoft implemented monitoring and incident management.
  prefs: []
  type: TYPE_NORMAL
- en: Azure infrastructure monitoring
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All hardware, software, and network devices in Azure datacenters are constantly
    reviewed and updated. Reviews and updates are performed mandatorily at least once
    a year, but additional reviews and updates are performed as needed. Any changes
    (to hardware, software, or the network) must go through the release management
    process and need to be developed, tested, and approved in development and test
    environments prior to release to production. In this process, all changes must
    be reviewed and approved by the Azure security and compliance team.
  prefs: []
  type: TYPE_NORMAL
- en: All Azure datacenters use integrated deployment systems for the distribution
    and installation of security updates for all software provided by Microsoft. If
    third-party software is used, the customer or software manufacturer is responsible
    for security updates, depending on how the software is provided and used. For
    example, if third-party software is installed using Azure Marketplace, the manufacturer
    is responsible for providing updates. If software is manually installed, then
    it depends on the specific software. For Microsoft software, a special team within
    Microsoft, named **Microsoft Security Response Center**, is responsible for monitoring
    and identifying any security incident 24/7/365\. Furthermore, any incident must
    be resolved in the shortest possible time frame.
  prefs: []
  type: TYPE_NORMAL
- en: Vulnerability scanning is performed across the Azure infrastructure (servers,
    databases, and network) at least once every quarter. If there is a specific issue
    or incident, vulnerability scanning is performed more often. Microsoft performs
    penetration tests, but also hires independent consultants to perform penetration
    tests. This ensures that nothing goes undetected. Any security issues are addressed
    immediately in order to increase security and stop any exploit when the issue
    is detected.
  prefs: []
  type: TYPE_NORMAL
- en: 'In case of any security issue, Microsoft has incident management in place.
    In the case where Microsoft is aware of a security issue, it takes the following
    actions:'
  prefs: []
  type: TYPE_NORMAL
- en: The customer is notified of the incident.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: An immediate investigation is started in order to provide detailed information
    regarding the security incident.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Steps are taken to mitigate the effects and minimize the damage of the security
    incident.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Incident management is clearly defined in order to manage, escalate, and resolve
    all security incidents promptly.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Azure security foundations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Overall, we can see that with Microsoft Azure, the cloud can be very secure.
    But it's very important to understand the shared responsibility model as well.
    Just putting applications and data into the cloud doesn't make it secure. Microsoft
    provides certain parts of security and ensures that physical and network security
    is in place. Customers must assume part of the responsibility and ensure that
    the right measures are taken on their side as well.
  prefs: []
  type: TYPE_NORMAL
- en: For example, let's say we place our database and application in Microsoft Azure,
    but our application is vulnerable to SQL injection (still a very common method
    of data breach). Can we blame Microsoft if our data is breached?
  prefs: []
  type: TYPE_NORMAL
- en: Let's be more extreme and say we publicly exposed the endpoint and forgot to
    put in place any kind of authentication. Is this Microsoft's responsibility?
  prefs: []
  type: TYPE_NORMAL
- en: If we look at the level of physical and network security that Microsoft provides
    in Azure datacenters, not many organizations can say that they have the same level
    in their local datacenters. More often than not, physical security is totally
    neglected. Server rooms are not secure, access is not controlled, and many times
    there is not even a dedicated server room, but just server racks in some corner
    or corridor. Even when a server room is under lock, no change of management is
    in place, and no one controls or reviews who is entering the server room and why.
    On the other hand, Microsoft implements top-level security in their datacenters.
    Everything is under constant surveillance, and every access needs to be approved
    and reviewed. Even if something is missed, everything is still encrypted and additionally
    secured. In my experience, this is again something that most organizations don't
    bother with.
  prefs: []
  type: TYPE_NORMAL
- en: Similar things can be said about network security. In most organizations, almost
    all network security is gone after the firewall. Networks are usually unsegmented,
    no traffic control is in place inside the network, and so on. Routing and traffic
    forwarding are basic or non-existent. Microsoft Azure again addresses these problems
    very well and helps us have secure networks for our resources.
  prefs: []
  type: TYPE_NORMAL
- en: But even with all the components of security that Microsoft takes care of, this
    is only the beginning. Using Microsoft Azure, we can achieve better physical and
    network security than we could in local datacenters, and we can concentrate on
    other things.
  prefs: []
  type: TYPE_NORMAL
- en: The shared responsibility model has different responsibilities for different
    cloud service models, and it's sometimes unclear what needs to be done. Luckily,
    even if it's not Microsoft's responsibility to address these parts of security,
    there are many security services available in Azure. Many of Azure's services
    have the single purpose of addressing security and helping us protect our data
    and resources in Azure datacenters. Again, it does not stop there. Most of Azure's
    services have some sort of security features built in, even when these services
    are not security-related. Microsoft takes security very seriously and enables
    us to secure our resources with many different tools.
  prefs: []
  type: TYPE_NORMAL
- en: The tools available vary from tools that help us to increase security by simply
    enabling a number of options, to tools that have lots of configuration options
    that help us design security, to tools that monitor our Azure resources and give
    us security recommendations that we need to implement. Some Azure tools use machine
    learning to help us detect security incidents in real time, or even before they
    happen.
  prefs: []
  type: TYPE_NORMAL
- en: This book will cover all aspects of Microsoft Azure security, from governance
    and identity, to network and data protection, to advanced tools. The final goal
    is to understand cloud security, to learn how to combine different tools to maximize
    security, and finally, to master Azure security!
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The most important lesson in this chapter is to understand the shared responsibility
    model in Azure. Microsoft takes care of some parts of security, especially in
    terms of physical security, but we need to take care of the rest.
  prefs: []
  type: TYPE_NORMAL
- en: With Azure networking, integrity, availability, and monitoring, we don't have
    influence and can't change anything (at least in the sections we discussed here).
    However, they are important to understand as we can apply a lot of things in the
    parts of security that we can manage. They will also provide more context and
    help us to better understand the complete security setup in Azure.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will move on to identity, which is one of the most important
    pillars of security. In Azure, identity is even more important, as most services
    are managed and accessible over the internet. Therefore, we need to take additional
    steps in order to make identity and access secure and bulletproof.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Whose responsibility is security in the cloud?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. User's
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: B. Cloud provider's
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: C. Responsibility is shared
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: According to the shared responsibility model, who is responsible for the security
    of physical hosts?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. User
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: B. Cloud provider
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: C. Both
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: According to the shared responsibility model, who is responsible for the physical
    network?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. User
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: B. Cloud provider
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: C. Depends on the service model
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: According to the shared responsibility model, who is responsible for network
    controls?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. User
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: B. Cloud provider
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: C. Depends on the service model
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: According to the shared responsibility model, who is responsible for data governance?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. User
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: B. Cloud provider
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: C. Depends on the service model
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Which architecture is used for Azure networking?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. DLA
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: B. Quantum 10 (Q10)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: C. Both, but DLA is replacing Q10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: D. Both, but Q10 is replacing DLA
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In case of a security incident, what is the first step?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A. Immediate investigation
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: B. Mitigation
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: C. Customer is notified
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
