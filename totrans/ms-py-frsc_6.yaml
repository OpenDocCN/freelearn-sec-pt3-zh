- en: Chapter 6. Using Python for Mobile Forensics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'While forensic analysis of standard computer hardware—such as hard disks—has
    developed into a stable discipline with a lot of reference work such as the book
    *File System Forensic Analysis*, by *Brian Carrier*, *Addison-Wesley Professional*
    and our previous chapters, there is still much debate on the techniques to analyze
    non-standard hardware or transient evidence. Despite their increasing role in
    digital investigations, smartphones are still to be considered non-standard because
    of their heterogeneity. In all the investigations, it is necessary to follow the
    basic forensic principles. The two main principles of forensic investigations
    are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Great care must be taken so that the evidence is manipulated or changed as little
    as possible.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The course of a digital investigation must be understandable and open to scrutiny.
    At best, the results of the investigation must be reproducible by independent
    investigators.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The first principle, especially, is a challenge in in case of smartphones as
    most of them employ specific operating systems and hardware protection methods
    that prevent unrestricted access to the data on the system.
  prefs: []
  type: TYPE_NORMAL
- en: The preservation of data from hard disks is, in most cases, a simple and well-known
    procedure. An investigator removes the hard disk from the computer or notebook,
    connects it to his workstation with the help of a write blocker (for example,
    Tableau TK35) and starts analyzing it with well-known and certified software solutions.
    When comparing this to the smartphone world, it becomes clear that there is no
    such procedure. Nearly every smartphone has its own way to build its storage in
    and ongoing with this, for each smartphone, the investigator needs their own way
    to get the dump of the storage. While it is very hard to get the data from a smartphone,
    one can get much more data with reference to the diversity of the data. Smartphones
    store, besides the usual data (for example, pictures and documents), the data
    such as GPS coordinates and the position of a mobile cell that the smartphone
    was connected to before it was switched off.
  prefs: []
  type: TYPE_NORMAL
- en: Considering the resulting opportunities, it turns out that it is worth the extra
    expense for an investigator.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: The investigative model from *Eoghan Casey* adopted by smartphones
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The analysis of Android smartphones (manual as well as automated through **Android
    Data Extractor Lite** (**ADEL**))
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The analysis of iOS smartphones
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The investigative model for smartphones
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The **Investigative Process Model** by *Eoghan Casey*, which is also known
    as the **Staircase Model**, provides a practical and methodical step-by-step guide
    to conduct an effective digital investigation. This model is depicted as a sequence
    of ascending stairs that begin at the incident alert or accusation and end at
    the testimony. The steps are meant to be as generic as possible. This model tries
    to merge police duties and tasks of forensic experts. The following points explain
    each step of the Investigative Process Model and the difference between dealing
    with smartphones and computers:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Incident Alerts or Accusation**: The accusation is the start signal for the
    whole process. In this phase, the sources are evaluated and detailed inquiries
    are requested.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Assessment of worth**: In the scope of the assessment of worth, the interest
    of prosecution is compared to the costs that would be incurred to prosecute the
    criminal action. For companies, this often results in a decision against prosecution
    (for smaller incidents, at least). The advantages of a prosecution lie in the
    possible compensation, improvement of one''s own security as well as certain effect
    of deterrence. The disadvantages of a prosecution are the need of resources, possible
    downtime during which the investigated systems cannot be used productively, and
    most of the time a negative public scatter effect.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Incident or crime scene protocols**: In classic criminalistics, it is often
    demanded that the crime scene is spaciously closed. *Eoghan Casey* expresses this
    as the following:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*"Freeze" the evidence in place and provide "ground truth for all activities
    that follow".*'
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
- en: For different kinds of digital traces, it has to be checked on an individual
    basis how the process of freezing is exactly defined. Altogether, it holds true
    that the risk of changing traces has to be minimized. For smartphones, this means
    that they have to be put in a Faraday bag that is connected to an external power
    supply.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Identification or seizure**: During a traditional impoundment, all objects
    and subjects that could act as evidence are picked up. Here, it is important that
    no changes are made to the evidence. In addition, the environment of evidence
    might be of great relevance. Simultaneous to the impoundment, the chain of custody
    starts. A recommended paper about the impoundment is the brochure, *Electronic
    Crime Scene Investigation: A Guide to First Responders*, published by *The United
    States Department of Justice*. This brochure provides accurate and detailed tips
    for nontechnical staff. Another good source is the document, *Searching and Seizing
    Computers and Obtaining Electronic Evidence in Criminal Investigations*, also
    published by *The United States Department of Justice*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Preservation**: When securing the evidence, it has to be ensured that these
    are not modified. This is why all the evidence is documented, photographed, sealed,
    and afterwards locked away. In the case of digital evidence, this means that copies
    of evidence are created first; further investigation is done only on the copies.
    To prove the authenticity of copies of evidence, cryptographic hash functions
    are used. Most often, this is the hardest part in mobile phone forensics due to
    the fact that creating one-to-one copies is not possible for some type of phones.
    We will show, in the following section, how to create backups that can be used
    during the investigation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Recovery**: *Eoghan Casey* describes the retrieval as *throwing out a large
    net*. In particular, this phase includes the retrieval of evidence that has been
    deleted, hidden, masked, or made inaccessible in any other way. It is recommended
    that you make use of synergies with other evidence. For example, it is reasonable
    to test whether a note with passwords has been found at the crime scene in case
    the encrypted data needs to be read.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Harvesting**: During the analysis of evidence, a well-structured organization
    with a huge amount of data that is needed. For this reason, one should first investigate
    metadata instead of the real data. For example, the data can be grouped according
    to the file type or access time. This directly leads to the next phase, the reduction.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reduction**: The task of reduction lies in eliminating irrelevant data. One
    can use metadata for this reason, too. For example, data can be reduced according
    to the data type. A suitable scenario would be to reduce all the data to image
    data, only if the accusation allows for this proceeding. The result of this phase
    is— according to *Eoghan Casey*:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*The smallest set of digital information that has the highest potential for
    containing data of probative value.*'
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*This means finding the smallest amount of data that has the highest probability
    of being relevant and evidential. In this context, hash databases of known files,
    such as The **National Software Reference Library** (**NIST**), are helpful to
    exclude already known files (we have described using this library in [Chapter
    2](ch02.html "Chapter 2. Forensic Algorithms"), *Forensic Algorithms*).*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Organization and search**: The aspects of organization are structuring and
    enabling data for scanning. Therefore, indices and overviews are often created
    or their type sorts the files in meaningful directories. This simplifies the referencing
    of the data in the following steps.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Analysis**: This phase includes the detailed analysis regarding the file
    content. Among others, connections between data and persons have to be drawn in
    order to determine the responsible person. Moreover, the evaluation of the content
    and context is made according to the means, motivation, and opportunity. In this
    step, experiments are helpful to determine undocumented behavior and develop new
    methods. All results need to be tested and should be testable with scientific
    methodology.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reporting**: The report is not only to present results but also demonstrate
    how one has arrived to the stated results. For this, all considered rules and
    standards should be documented. In addition, all drawn conclusions need to be
    justified and alternative explanation models need to be discussed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Persuasion and Testimony**: Finally, it comes to the testimony of an authority
    on the subject at court. The most important aspect is the trustworthiness of the
    authority. A technology averse audience or difficult analogies, for example from
    the defense lawyer, can be problematic.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By looking at the previously described process, one can see only little changes
    when dealing with smartphones unlike other types of evidence. However, it is very
    important for an investigator to understand at what steps he has to take special
    care.
  prefs: []
  type: TYPE_NORMAL
- en: Android
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first mobile operating system that we will examine with the help of Python
    is Android. In the first subsection, we will demonstrate how to manually examine
    the smartphone, followed by an automatic approach using ADEL. Last but not least,
    we will demonstrate how to merge data from the analysis to create movement profiles.
  prefs: []
  type: TYPE_NORMAL
- en: Manual Examination
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The first step is getting root access to the smartphone. This is required to
    circumvent internal system protections and get access to all data. Getting root
    access is different for most of the phones and strongly dependent on the OS version.
    The best way is creating your own **recovery image** and booting the phone through
    the built-in recovery mode.
  prefs: []
  type: TYPE_NORMAL
- en: 'After getting the root access, the next step is trying to get the screen lock
    in plain text as this *secret* is often used for different protections (for example,
    the screen lock can be used as an application password for an app on the phone).
    Breaking the screen lock for a PIN or password can be done with the following
    script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This script generates a file called `crack.hash` that can be used to feed **hashcat**
    to brute force the screen lock. If the smartphone owner has used a 4-digit PIN,
    the command to execute hashcat is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: By looking at the marked line in the output, you can see the sha256 hash followed
    by the salt and the brute forced PIN that is used to unlock the screen.
  prefs: []
  type: TYPE_NORMAL
- en: 'If the smartphone user has used a gesture to unlock the smartphone, you can
    use a pre-generated rainbow table and the following script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The next thing that could be very important when looking for potentially infected
    devices is a list of installed apps and their hashes to check them against **AndroTotal**
    or **Mobile-Sandbox**. This can be done with the following script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'After executing the preceding printed script, you get the following output
    including important metadata:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: With the help of this information, you can check the apps against online services
    to know whether they are safe to use or potentially malicious. If you don't want
    to submit them, then you can use the `apk_analyzer.py` script in combination with
    **Androguard** to perform a quick analysis that often can reveal important information.
  prefs: []
  type: TYPE_NORMAL
- en: 'After getting a list of all installed apps and checking them for malicious
    behavior, it can also be really helpful to get information about all partitions
    and mount points of the device. This can be achieved with the following script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The output of a rooted phone could look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'At the end of this section, we will show you how to gather more details about
    the usage of the android-based smartphone. In the following example, we will use
    the contacts database that also stores the phone call history. This example can
    easily be adopted to get calendar entries or content from any other database of
    an app that is installed on the device:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: After you have seen how to manually perform an analysis of a smartphone, we
    will show you, in the upcoming section, how to perform the same actions that are
    automated with the help of ADEL.
  prefs: []
  type: TYPE_NORMAL
- en: Automated Examination with the help of ADEL
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We have developed a tool named ADEL. It was initially developed for versions
    2.x of Android but was updated to fit the needs of analysing Android 4.x smartphones.
    This tool is able to automatically dump the selected SQLite database files from
    Android devices and extract the contents that are stored in the dumped files.
    As a further option, ADEL is able to analyse databases that were dumped manually
    beforehand. This option was implemented to support smartphones where ADEL is not
    able to access the filesystem of the device due to security features like locked
    bootloaders. In the following sections, we describe the main tasks of ADEL and
    what steps the tool actually performs.
  prefs: []
  type: TYPE_NORMAL
- en: Idea behind the system
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'During the development of ADEL, we primarily took into account the following
    design guidelines:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Forensic principles**: ADEL is intended to treat data in a forensically correct
    way. This goal is achieved by the fact that activities are not conducted directly
    on the phone but on a copy of the databases. This procedure assures that the data
    is not modified either by the users of ADEL or by a compromised operating system.
    In order to providing the proof of the forensic correctness of ADEL, hash values
    are calculated before and after each analysis to guarantee that the dumped data
    was not modified during the analysis.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Extendibility**: ADEL has been modularly built and contains two separate
    modules: the analysis and the report module. Predefined interfaces exist between
    these modules and both of them can be easily amended with the help of additional
    functions. The modular structure allows you to dump and analyse further databases
    of smartphones without great effort and facilitates updates of the system in the
    future.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Usability**: The use of ADEL is intended to be as simple as possible to allow
    its use by both, qualified persons and non-experts. At best, the analysis of the
    mobile phone is conducted in an autonomous way so that the user does not receive
    any notification of internal processes. Moreover, the report module creates a
    detailed report in a readable form including all the decoded data. During the
    execution, ADEL optionally writes an extensive log file where all the important
    steps that were executed are traced.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementation and system workflow
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A flow chart showing the structure of ADEL is depicted in the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Implementation and system workflow](img/2087_06_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: ADEL makes use of **Android Software Development Kit** (**Android SDK**) to
    dump database files in the investigator's machine. To extract contents that are
    contained in a SQLite database file, ADEL parses the low-level data structures.
    After having opened the database file that is to be parsed in the read-only mode,
    ADEL reads the database header (the first 100 bytes of the file) and extracts
    the values for each of the header fields. Not all, but some of the values in header
    fields are necessary in order to parse the rest of the database file. An important
    value is the size of the pages in the database file, which is required for parsing
    the B-tree structures (pagewise). After having read the database header fields,
    ADEL parses the B-tree that contains the `sqlite_master` table for which the first
    page of the database is always the root page. The SQL CREATE statement and the
    page number of the B-tree root page are extracted for each of the database tables.
    Additionally, the SQL CREATE statement is further analyzed to extract the name
    and data type of each column of the corresponding table.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, the complete B-tree structure is parsed for each table, beginning at
    the B-tree root page, which was extracted from the `sqlite_master` table. By following
    the pointers of all of the interior pages, you can identify every leaf page of
    the B-tree. Finally the row contents of each table are extracted from the cells
    that are found in any leaf page that belongs to the same table B-tree.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the following sections, we will address the report module and its functionalities.
    In the current development state, the following databases are forensically treated
    and parsed:'
  prefs: []
  type: TYPE_NORMAL
- en: Telephone and SIM-card information (for example **International Mobile Subscriber
    Identity** (**IMSI**) and serial number)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Telephone book and call lists
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calendar entries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SMS messages
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Google-Maps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data retrieved in this way is written to an XML file by the report module in
    order to ease the further use and depiction of the data. Similar to the analysis
    module, it can be easily updated regarding possible changes in future Android
    versions or in underlying database schemes. Therefore, we have created different
    tuple—for example, [table, row, column]—to define the data that is exchanged between
    both modules. If the database design changes in the future, only the tuple has
    to be adapted. The report module automatically creates XML files for each data
    type that is previously listed. In addition, a report is created that contains
    all the data extracted from analyzed databases. With the help of an XSL file the
    report will be graphically refurbished. All files created by ADEL are stored in
    a subfolder of the current project.
  prefs: []
  type: TYPE_NORMAL
- en: To get access to the necessary databases and system folders on the smartphone,
    ADEL needs root access on the device.
  prefs: []
  type: TYPE_NORMAL
- en: Working with ADEL
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'After we have described what ADEL is and how it works, we will now go to the
    practical part of this section and start using it. You can download ADEL from
    the following URL: [https://mspreitz.github.io/ADEL](https://mspreitz.github.io/ADEL)'
  prefs: []
  type: TYPE_NORMAL
- en: 'All you need to do is check whether the device in question is already included
    in the configuration profile of ADEL that is located in `/xml/phone_config.xml`.
    If the device is missing, there are two options on how to proceed:'
  prefs: []
  type: TYPE_NORMAL
- en: Choose a different device with the same Android version (this will generate
    a warning but it works in most of the cases).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Generate a new device configuration that matches the device type and Android
    version of the device in question.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If you choose the second option, you can copy the configuration of an already
    working device and adopt the numbers in the XML file. These numbers represent
    the tables and columns of the noted database. To be a bit more precise, if you
    try to adopt the SMS database, you have to check the numbers for the following
    tables and columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: The number for the `table_num` tag has to be set to the number that corresponds
    to the table called `sms`. The following numbers have to be adopted corresponding
    to the columns in the `sms` table that are named identically. The preceding printed
    example works with a Nexus 5 and Android 4.4.4\. The same has to be done for all
    other databases too.
  prefs: []
  type: TYPE_NORMAL
- en: 'Running ADEL against a rooted Nexus 5 with Android 4.4.4—filled with test data—
    generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'In this output, you can see the name of the folder where all the data is dumped
    and where the generated report can be found. Additionally, you can also see the
    gesture of the screen lock that was automatically extracted and compared with
    a pre-generated rainbow table, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Working with ADEL](img/2087_06_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Movement profiles
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In addition to data about individual communications, the *EU directive* from
    2006 also requires certain location data to be retained by network operators.
    Specially, the directive requires that the following data is retained for at least
    six months:'
  prefs: []
  type: TYPE_NORMAL
- en: Identity and exact GPS coordinates of the radio cell where the user started
    a phone call
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identity and coordinates of the radio cell that was active at the beginning
    of a GPRS data transmission
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Time stamps corresponding to this data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This information can help investigators to create movement profiles of suspects.
    Also, the information may be used to locate and monitor suspects.
  prefs: []
  type: TYPE_NORMAL
- en: Many EU member countries have implemented this directive in national laws. However,
    in some countries, there has been an intensive public debate about the laws, especially
    in relation to the threats to privacy. In Germany, the discussions were fueled
    by a dataset provided by the German politician Malte Spitz. The dataset contained
    location data over a period of six months that was preserved by his mobile network
    operator under the data retention law. A German newspaper created a graphical
    interface that enabled users to visually replay Spitz's detailed movements.
  prefs: []
  type: TYPE_NORMAL
- en: Overall, it is argued that retaining large amounts of data creates new risks
    of abuse. Also, the requirement to store data pertaining to millions of innocent
    people is out of proportion to the small number of cases in which the data is
    used by law enforcement. As a result, in 2011, the German Constitutional Court
    dismissed the original legislation requiring data retention. Meanwhile, the search
    for less invasive techniques to analyze the movements of criminals continues.
  prefs: []
  type: TYPE_NORMAL
- en: In the recent years, many new types of mobile phones (smartphones) have flooded
    the market. As they are essentially small personal computers, they offer much
    more than the possibility to make phone calls and surf the Internet. An increasing
    number of subscribers are using apps (mostly third-party applications that are
    directly installed on their phones) and communicating with friends and family
    via social networks such as Facebook, Google+, and Twitter.
  prefs: []
  type: TYPE_NORMAL
- en: For performance and other reasons, mobile devices persistently store location
    data in the local memory. In April 2011, it was reported that Android and iOS
    store sensitive geographical data. This data, which is maintained in system cache
    files, is regularly sent to platform developers. However, generating geographical
    data is not restricted to the operating system—many apps that provide location-based
    services also create and store such data. For example, Benford has shown that
    pictures taken by an iPhone contain the GPS coordinates of the location where
    the pictures were taken. Such data is sensitive because it can be used to create
    movement profiles as seen in the following figure. Unlike the location data that
    is retained by network operators, location data stored on smartphones can be accessed
    by law enforcement via an open seizure.
  prefs: []
  type: TYPE_NORMAL
- en: '![Movement profiles](img/2087_06_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Apple iOS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After we have seen how to examine an Android-based smartphone, we now want to
    show you how to perform similar investigations on iOS-based devices. In the first
    section, we are using a **Secure Shell** (**SSH**) connection to the device and
    will show you how to get stored data from the keychain of a jailbroken iOS device.
  prefs: []
  type: TYPE_NORMAL
- en: In the second part of this section, we will use **libimobiledevice**. This library
    is a cross-platform library that uses the protocols to support iOS-based devices
    and allows you to easily access the device's filesystem, retrieve information
    about the device and it's internals, backup/restore the device, manage installed
    applications, retrieve PIM data as well as bookmarks, and so on. The most important
    fact is that the iOS-based device does not have to be jailbroken in order to be
    used— when dealing with libimobiledevice.
  prefs: []
  type: TYPE_NORMAL
- en: Getting the Keychain from a jailbroken iDevice
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In many cases, it can be very helpful to get usernames and passwords of accounts
    that the user of the iDevice was using. This kind of data is located in the iOS
    keychain and can be pulled from iDevice with the help of the following script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'In the output of the preceding script, you can also find the password of the
    Apple account that the device is registered to:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Manual Examination with libimobiledevice
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This library uses common iOS protocols for communication between the investigator's
    machine and the connected iDevice. In order to work properly, the device has to
    be unlocked and paired because, otherwise a large amount of data on the device
    is still encrypted, and thus, protected.
  prefs: []
  type: TYPE_NORMAL
- en: With the help of the following script, you can create a full backup of the device
    (similar to an iTunes backup). Afterwards, the script will unpack the backup and
    print a hierarchical list of all files and folders in the backup. Dependent on
    the size of the iDevice this script can run for several minutes.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'The final output of this script will look like the following extract:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: With the help of the list of files and folders, you can start the analysis of
    the backup with common tools such as a plist file viewer or a SQLite browser.
    Searching for **Cydia App Store** in this generated file can also help to identify
    whether the smartphone has been jailbroken by the user or an attacker.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered the investigative process model from *Eoghan Casey*
    and adopted it to the case of smartphones. Later, we performed an analysis of
    Android smartphones in manual as well as automated ways with the help of Python
    scripts and the ADEL framework. In the last section, we covered the analysis of
    iOS-based smartphones.
  prefs: []
  type: TYPE_NORMAL
- en: After handling the forensic investigation of smartphones, we finished the physical
    and virtual acquisition and analysis and will shift the investigation to the volatile
    area of the devices in the next chapter.
  prefs: []
  type: TYPE_NORMAL
